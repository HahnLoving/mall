{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-05b47606\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  style: {\n    \"margin-top\": \"-25px\"\n  }\n};\nvar _hoisted_2 = {\n  class: \"dialog-title\"\n};\nvar _hoisted_3 = {\n  slot: \"footer\",\n  class: \"dialog-footer\",\n  style: {\n    \"padding-left\": \"5px\"\n  }\n};\n\nvar _hoisted_4 = /*#__PURE__*/_createTextVNode(\"确 定\");\n\nvar _hoisted_5 = /*#__PURE__*/_createTextVNode(\"重 置\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  var _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n\n  var _component_upload_imgs = _resolveComponent(\"upload-imgs\");\n\n  var _component_el_form = _resolveComponent(\"el-form\");\n\n  var _component_el_button = _resolveComponent(\"el-button\");\n\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  var _directive_permission = _resolveDirective(\"permission\");\n\n  return _openBlock(), _createBlock(_component_el_dialog, {\n    \"append-to-body\": true,\n    \"before-close\": $options.handleClose,\n    visible: $options.visible\n  }, {\n    default: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($props.isCreate ? '创建六宫格' : '更新六宫格'), 1\n      /* TEXT */\n      )]), _createVNode(_component_el_form, {\n        model: $data.form,\n        \"status-icon\": \"\",\n        ref: \"form\",\n        \"label-width\": \"100px\",\n        onSubmit: _cache[3] || (_cache[3] = _withModifiers(function () {}, [\"prevent\"]))\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_form_item, {\n            label: \"标题\",\n            prop: \"title\"\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                size: \"medium\",\n                modelValue: $data.form.title,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n                  return $data.form.title = $event;\n                }),\n                placeholder: \"请填写宫格标题\"\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\"])];\n            }),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            label: \"名称\",\n            prop: \"name\"\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                size: \"medium\",\n                modelValue: $data.form.name,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $data.form.name = $event;\n                }),\n                placeholder: \"请填写宫格名\"\n              }, null, 8\n              /* PROPS */\n              , [\"modelValue\"])];\n            }),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            label: \"分类\",\n            prop: \"category_id\"\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(_component_el_autocomplete, {\n                onFocus: $options.loadSuggestions,\n                \"popper-class\": \"my-autocomplete\",\n                class: \"inline-input\",\n                modelValue: $data.state,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $data.state = $event;\n                }),\n                \"fetch-suggestions\": $options.querySearch,\n                placeholder: \"请填写所属分类\",\n                onSelect: $options.handleSelect\n              }, {\n                default: _withCtx(function () {\n                  return [_createCommentVNode(\" <template slot-scope=\\\"{ item }\\\">\\n              <span class=\\\"id\\\">{{ item.id }}</span>\\n              <span class=\\\"name\\\">{{ item.name }}</span>\\n            </template> \")];\n                }),\n                _: 1\n                /* STABLE */\n\n              }, 8\n              /* PROPS */\n              , [\"onFocus\", \"modelValue\", \"fetch-suggestions\", \"onSelect\"])];\n            }),\n            _: 1\n            /* STABLE */\n\n          }), _createVNode(_component_el_form_item, {\n            label: \"图片\",\n            prop: \"img\"\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(_component_upload_imgs, {\n                ref: \"uploadEle\",\n                \"max-num\": $data.maxNum,\n                value: $data.initData\n              }, null, 8\n              /* PROPS */\n              , [\"max-num\", \"value\"])];\n            }),\n            _: 1\n            /* STABLE */\n\n          })];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"model\"])]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitForm\n      }, {\n        default: _withCtx(function () {\n          return [_hoisted_4];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"]), [[_directive_permission, {\n        permission: '更新六宫格',\n        type: 'disabled'\n      }]]), _createVNode(_component_el_button, {\n        onClick: _cache[4] || (_cache[4] = function ($event) {\n          return $options.resetForm('form');\n        })\n      }, {\n        default: _withCtx(function () {\n          return [_hoisted_5];\n        }),\n        _: 1\n        /* STABLE */\n\n      })])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"before-close\", \"visible\"]);\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/view/grid-category/grid-category-edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog :append-to-body=\"true\" :before-close=\"handleClose\" :visible.sync=\"visible\">\n    <div style=\"margin-top:-25px;\">\n      <div class=\"dialog-title\">\n        <span>{{ isCreate ? '创建六宫格' : '更新六宫格' }}</span>\n      </div>\n      <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" @submit.native.prevent>\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input size=\"medium\" v-model=\"form.title\" placeholder=\"请填写宫格标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写宫格名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"category_id\">\n          <el-autocomplete\n            @focus=\"loadSuggestions\"\n            popper-class=\"my-autocomplete\"\n            class=\"inline-input\"\n            v-model=\"state\"\n            :fetch-suggestions=\"querySearch\"\n            placeholder=\"请填写所属分类\"\n            @select=\"handleSelect\"\n          >\n            <!-- <template slot-scope=\"{ item }\">\n              <span class=\"id\">{{ item.id }}</span>\n              <span class=\"name\">{{ item.name }}</span>\n            </template> -->\n          </el-autocomplete>\n        </el-form-item>\n        <el-form-item label=\"图片\" prop=\"img\">\n          <upload-imgs ref=\"uploadEle\" :max-num=\"maxNum\" :value=\"initData\" />\n        </el-form-item>\n      </el-form>\n    </div>\n    <div slot=\"footer\" class=\"dialog-footer\" style=\"padding-left:5px;\">\n      <el-button type=\"primary\" @click=\"submitForm\" v-permission=\"{ permission: '更新六宫格', type: 'disabled' }\"\n        >确 定</el-button\n      >\n      <el-button @click=\"resetForm('form')\">重 置</el-button>\n    </div>\n  </el-dialog>\n</template>\n<script>\nimport GridCategory from '@/model/grid-category'\nimport Category from '@/model/category'\nimport UploadImgs from '@/component/base/upload-image'\n\nexport default {\n  name:\"grid-category-edit\",\n  components: {\n    UploadImgs,\n  },\n  props: {\n    dialogFormVisible: {\n      type: Boolean,\n      default: false,\n    },\n    isCreate: {\n      type: Boolean,\n      default: false,\n    },\n    gridCategoryId: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    visible: {\n      get() {\n        return this.dialogFormVisible\n      },\n      set() {},\n    },\n  },\n  data() {\n    return {\n      state: '',\n      suggestions: [],\n      display: true,\n      initData: [],\n      maxNum: 1,\n      form: {\n        name: '',\n        title: '',\n        category_id: null,\n        root_category_id: null,\n      },\n    }\n  },\n  watch: {\n    display(val) {\n      this.form.online = val ? 1 : 0\n    },\n  },\n  async mounted() {\n    if (!this.isCreate) {\n      const res = await GridCategory.getGridCategory(this.gridCategoryId)\n      this.form = res\n      this.initData = [{ display: res.img }]\n    }\n    this.loadSuggestions()\n  },\n  methods: {\n    async submitForm() {\n      await this.getValue()\n      const form = { ...this.form }\n      let res\n      if (this.isCreate) {\n        res = await GridCategory.addGridCategory(form)\n      } else {\n        res = await GridCategory.editGridCategory(this.gridCategoryId, form)\n      }\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('dialogClose')\n      }\n    },\n    querySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.suggestions\n      const results = queryString ? suggestions.filter(this.createFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleSelect(item) {\n      this.state = item.name\n      this.form.category_id = item.id\n    },\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.img = val[0].display\n      }\n    },\n    async loadSuggestions() {\n      try {\n        this.suggestions = await Category.getList()\n        if (this.suggestions.length === 0) {\n          this.$message.error('未找到宫格建议，请先添加宫格')\n        }\n      } catch (error) {\n        this.$message.error('获取宫格建议信息失败')\n        console.error(error)\n      }\n      const inlineId = this.getInlineId()\n      // eslint-disable-next-line\n      const hit = this.suggestions.filter(val => {\n        return val.id === inlineId\n      })\n      if (hit.length > 0) {\n        this.state = hit[0].name\n      }\n    },\n    getInlineId() {\n      if (this.form.category_id) {\n        return this.form.category_id\n      }\n      if (this.form.root_category_id) {\n        return this.form.root_category_id\n      }\n      return null\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    handleClose(done) {\n      done()\n      this.$emit('dialogClose')\n    },\n  },\n}\n</script>\n<style lang=\"scss\" scoped>\n.dialog-title {\n  color: $parent-title-color;\n  font-size: 16px;\n  margin-bottom: 20px;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}