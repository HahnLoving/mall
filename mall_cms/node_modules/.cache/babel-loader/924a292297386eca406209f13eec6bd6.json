{"ast":null,"code":"import _typeof from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport appConfig from '@/config/index';\nimport Util from '@/lin/util/util';\nimport autoJump from '@/lin/util/auto-jump';\nimport store from '../store';\nimport routes from './route'; // 判断是否需要登录访问, 配置位于 config 文件夹\n\nvar _isLoginRequired = function isLoginRequired(routeName) {\n  // 首次执行时缓存配置\n  var notLoginRoute = appConfig.notLoginRoute;\n  var notLoginMark = {}; // 构建标记对象\n\n  if (Array.isArray(notLoginRoute)) {\n    for (var i = 0; i < notLoginRoute.length; i += 1) {\n      notLoginMark[notLoginRoute[i].toString()] = true;\n    }\n  }\n\n  notLoginRoute = null; // 释放内存\n  // 重写初始化函数\n\n  _isLoginRequired = function isLoginRequired(name) {\n    if (!name) {\n      return true;\n    } // 处理 Symbol 类型\n\n\n    var target = _typeof(name) === 'symbol' ? name.description : name;\n    return !notLoginMark[target];\n  };\n\n  return _isLoginRequired(routeName);\n};\n\nvar router = createRouter({\n  scrollBehavior: function scrollBehavior() {\n    return {\n      y: 0\n    };\n  },\n  base: process.env.BASE_URL,\n  history: createWebHashHistory(),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  // 登录验证\n  if (_isLoginRequired(to.name) && !store.state.loggedIn) {\n    next({\n      path: '/login'\n    });\n    return;\n  } // TODO: tab 模式重复点击验证\n  // 权限验证\n\n\n  if (store !== null && store !== void 0 && store.state && store !== null && store !== void 0 && store.getters) {\n    var _store$getters = store.getters,\n        permissions = _store$getters.permissions,\n        user = _store$getters.user;\n\n    if (to.path !== '/about' && !Util.hasPermission(permissions, to.meta, user)) {\n      ElMessage.error('您无此页面的权限哟');\n      next({\n        path: '/about'\n      });\n      return;\n    }\n  } // 路由发生变化重新计时\n\n\n  autoJump(router); // 路由发生变化修改页面title\n\n  if (to.meta.title) {\n    document.title = to.meta.title;\n  }\n\n  next();\n});\nexport default router;","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/src/router/index.js"],"names":["createRouter","createWebHashHistory","ElMessage","appConfig","Util","autoJump","store","routes","isLoginRequired","routeName","notLoginRoute","notLoginMark","Array","isArray","i","length","toString","name","target","description","router","scrollBehavior","y","base","process","env","BASE_URL","history","beforeEach","to","from","next","state","loggedIn","path","getters","permissions","user","hasPermission","meta","error","title","document"],"mappings":"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","sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nimport appConfig from '@/config/index'\nimport Util from '@/lin/util/util'\nimport autoJump from '@/lin/util/auto-jump'\nimport store from '../store'\nimport routes from './route'\n\n// 判断是否需要登录访问, 配置位于 config 文件夹\nlet isLoginRequired = routeName => {\n  // 首次执行时缓存配置\n  let { notLoginRoute } = appConfig\n  const notLoginMark = {}\n\n  // 构建标记对象\n  if (Array.isArray(notLoginRoute)) {\n    for (let i = 0; i < notLoginRoute.length; i += 1) {\n      notLoginMark[notLoginRoute[i].toString()] = true\n    }\n  }\n\n  notLoginRoute = null // 释放内存\n\n  // 重写初始化函数\n  isLoginRequired = name => {\n    if (!name) {\n      return true\n    }\n    // 处理 Symbol 类型\n    const target = typeof name === 'symbol' ? name.description : name\n    return !notLoginMark[target]\n  }\n\n  return isLoginRequired(routeName)\n}\n\nconst router = createRouter({\n  scrollBehavior: () => ({ y: 0 }),\n  base: process.env.BASE_URL,\n  history: createWebHashHistory(),\n  routes,\n})\n\nrouter.beforeEach((to, from, next) => {\n  // 登录验证\n  if (isLoginRequired(to.name) && !store.state.loggedIn) {\n    next({ path: '/login' })\n    return\n  }\n\n  // TODO: tab 模式重复点击验证\n\n  // 权限验证\n  if (store?.state && store?.getters) {\n    const { permissions, user } = store.getters\n    if (to.path !== '/about' && !Util.hasPermission(permissions, to.meta, user)) {\n      ElMessage.error('您无此页面的权限哟')\n      next({ path: '/about' })\n      return\n    }\n  }\n\n  // 路由发生变化重新计时\n  autoJump(router)\n\n  // 路由发生变化修改页面title\n  if (to.meta.title) {\n    document.title = to.meta.title\n  }\n\n  next()\n})\n\nexport default router\n"]},"metadata":{},"sourceType":"module"}