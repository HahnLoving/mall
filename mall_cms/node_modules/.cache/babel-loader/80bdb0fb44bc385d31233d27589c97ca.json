{"ast":null,"code":"import _objectSpread from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport store from '@/store';\nimport _axios, { get, put } from '@/lin/plugin/axios';\nimport { saveTokens } from '../util/token';\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    _classCallCheck(this, User);\n  }\n\n  _createClass(User, null, [{\n    key: \"register\",\n    value:\n    /**\n     * 分配用户\n     * @param {object} user 注册信息\n     */\n    function register(user) {\n      return _axios({\n        method: 'post',\n        url: 'cms/user/register',\n        data: {\n          email: user.email,\n          username: user.username,\n          password: user.password,\n          group_ids: user.groupIds,\n          confirm_password: user.confirmPassword\n        },\n        handleError: true\n      });\n    }\n    /**\n     * 登陆获取tokens\n     * @param { String } username 用户名\n     * @param { String } password 密码\n     * @param { String } captcha 验证码\n     * @param { String } tag 验证码签名\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(username, password, captcha, tag) {\n        var tokens;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _axios({\n                  url: 'cms/user/login',\n                  method: 'POST',\n                  data: {\n                    captcha: captcha,\n                    username: username,\n                    password: password\n                  },\n                  headers: {\n                    tag: tag\n                  }\n                });\n\n              case 2:\n                tokens = _context.sent;\n                saveTokens(tokens.access_token, tokens.refresh_token);\n                return _context.abrupt(\"return\", tokens);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getToken(_x, _x2, _x3, _x4) {\n        return _getToken.apply(this, arguments);\n      }\n\n      return getToken;\n    }()\n    /**\n     * 获取当前用户信息，并返回User实例\n     */\n\n  }, {\n    key: \"getInformation\",\n    value: function () {\n      var _getInformation = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var info, storeUser;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return get('cms/user/information');\n\n              case 2:\n                info = _context2.sent;\n                storeUser = store.getters.user === null ? {} : store.getters.user;\n                return _context2.abrupt(\"return\", Object.assign(_objectSpread({}, storeUser), info));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInformation() {\n        return _getInformation.apply(this, arguments);\n      }\n\n      return getInformation;\n    }()\n    /**\n     * 获取当前用户信息和所拥有的权限\n     */\n\n  }, {\n    key: \"getPermissions\",\n    value: function () {\n      var _getPermissions = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var info, storeUser;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return get('cms/user/permissions');\n\n              case 2:\n                info = _context3.sent;\n                storeUser = store.getters.user === null ? {} : store.getters.user;\n                return _context3.abrupt(\"return\", Object.assign(_objectSpread({}, storeUser), info));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPermissions() {\n        return _getPermissions.apply(this, arguments);\n      }\n\n      return getPermissions;\n    }()\n    /**\n     * 用户修改密码\n     * @param {string} newPassword 新密码\n     * @param {string} confirmPassword 确认新密码\n     * @param {string} oldPassword 旧密码\n     */\n    // eslint-disable-next-line camelcase\n\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(_ref) {\n      var old_password = _ref.old_password,\n          new_password = _ref.new_password,\n          confirm_password = _ref.confirm_password;\n      return put('cms/user/change_password', {\n        new_password: new_password,\n        confirm_password: confirm_password,\n        old_password: old_password\n      });\n    }\n  }]);\n\n  return User;\n}();\n\nexport { User as default };","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/src/lin/model/user.js"],"names":["store","_axios","get","put","saveTokens","User","user","method","url","data","email","username","password","group_ids","groupIds","confirm_password","confirmPassword","handleError","captcha","tag","headers","tokens","access_token","refresh_token","info","storeUser","getters","Object","assign","old_password","new_password"],"mappings":"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","sourcesContent":["import store from '@/store'\nimport _axios, { get, put } from '@/lin/plugin/axios'\nimport { saveTokens } from '../util/token'\n\nexport default class User {\n  /**\n   * 分配用户\n   * @param {object} user 注册信息\n   */\n  static register(user) {\n    return _axios({\n      method: 'post',\n      url: 'cms/user/register',\n      data: {\n        email: user.email,\n        username: user.username,\n        password: user.password,\n        group_ids: user.groupIds,\n        confirm_password: user.confirmPassword,\n      },\n      handleError: true,\n    })\n  }\n\n  /**\n   * 登陆获取tokens\n   * @param { String } username 用户名\n   * @param { String } password 密码\n   * @param { String } captcha 验证码\n   * @param { String } tag 验证码签名\n   */\n  static async getToken(username, password, captcha, tag) {\n    const tokens = await _axios({\n      url: 'cms/user/login',\n      method: 'POST',\n      data: {\n        captcha,\n        username,\n        password,\n      },\n      headers: {\n        tag,\n      },\n    })\n    saveTokens(tokens.access_token, tokens.refresh_token)\n    return tokens\n  }\n\n  /**\n   * 获取当前用户信息，并返回User实例\n   */\n  static async getInformation() {\n    const info = await get('cms/user/information')\n    const storeUser = store.getters.user === null ? {} : store.getters.user\n    return Object.assign({ ...storeUser }, info)\n  }\n\n  /**\n   * 获取当前用户信息和所拥有的权限\n   */\n  static async getPermissions() {\n    const info = await get('cms/user/permissions')\n    const storeUser = store.getters.user === null ? {} : store.getters.user\n    return Object.assign({ ...storeUser }, info)\n  }\n\n  /**\n   * 用户修改密码\n   * @param {string} newPassword 新密码\n   * @param {string} confirmPassword 确认新密码\n   * @param {string} oldPassword 旧密码\n   */\n  // eslint-disable-next-line camelcase\n  static updatePassword({ old_password, new_password, confirm_password }) {\n    return put('cms/user/change_password', {\n      new_password,\n      confirm_password,\n      old_password,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}