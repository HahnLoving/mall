{"ast":null,"code":"import _objectSpread from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport BannerItem from '@/model/banner-item';\nimport UploadImgs from '@/component/base/upload-image';\nimport StickyTop from '@/component/base/sticky-top/sticky-top';\nimport Spu from '@/model/spu';\nimport Theme from '@/model/theme';\nexport default {\n  components: {\n    UploadImgs: UploadImgs,\n    StickyTop: StickyTop\n  },\n  props: {\n    editID: {\n      type: Number\n    },\n    isCreate: {\n      type: Boolean,\n      default: false\n    },\n    bannerId: {\n      type: Number,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      spuSuggestions: [],\n      themeSuggestions: [],\n      maxNum: 1,\n      form: {\n        img: '',\n        keyword: '',\n        type: null,\n        spu_id: null,\n        spu_name: '',\n        theme_id: null,\n        theme_name: ''\n      },\n      rules: {\n        minWidth: 10,\n        minHeight: 10,\n        maxSize: 5\n      },\n      initData: []\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (_this.isCreate) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 3;\n              return BannerItem.getBannerItem(_this.editID);\n\n            case 3:\n              res = _context.sent;\n              _this.initData = [{\n                id: res.id,\n                display: res.img\n              }];\n              _this.form = res;\n\n              if (_this.form.type == 1) {\n                _this.form.type_name = \"无类型\";\n              } else if (_this.form.type == 2) {\n                _this.form.type_name = \"Spu\";\n              } else if (_this.form.type == 3) {\n                _this.form.type_name = \"主题\";\n              }\n\n            case 7:\n              _this.loadSpuSuggestions();\n\n              _this.loadThemeSuggestions();\n\n              _this.loadTypeSuggestions();\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    getValue: function getValue() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var val;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this2.$refs.uploadEle.getValue();\n\n              case 2:\n                val = _context2.sent;\n\n                if (val && val.length > 0) {\n                  _this2.form.img = val[0].display;\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    submitForm: function submitForm() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var form, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this3.getValue();\n\n              case 2:\n                form = _objectSpread({}, _this3.form);\n\n                if (!_this3.isCreate) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                form.banner_id = _this3.bannerId;\n                _context3.next = 7;\n                return BannerItem.addBannerItem(form);\n\n              case 7:\n                res = _context3.sent;\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.next = 12;\n                return BannerItem.editBannerItem(_this3.editID, form);\n\n              case 12:\n                res = _context3.sent;\n\n              case 13:\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  _this3.$message.success(\"\".concat(res.message));\n\n                  _this3.resetForm('form');\n\n                  _this3.$emit('editClose');\n                }\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    back: function back() {\n      this.$emit('editClose');\n    },\n    // spu\n    querySpuSearch: function querySpuSearch(queryString, cb) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var results;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // eslint-disable-next-line\n                // const spuSuggestions = await Spu.getList()\n                // const results = queryString ? spuSuggestions.filter(this.createSpuFilter(queryString)) : spuSuggestions\n                results = _this4.spuSuggestions;\n                cb(results);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    handleSpuSelect: function handleSpuSelect(item) {\n      // this.state = item.name\n      this.form.spu_name = item.title;\n      this.form.spu_id = item.id;\n    },\n    // async getSpuValue() {\n    //   const val = await this.$refs.uploadEle.getSpuValue()\n    //   if (val && val.length > 0) {\n    //     this.form.img = val[0].display\n    //   }\n    // },\n    loadSpuSuggestions: function loadSpuSuggestions() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return Spu.getList();\n\n              case 3:\n                _this5.spuSuggestions = _context5.sent;\n\n                if (_this5.spuSuggestions.length === 0) {\n                  _this5.$message.error('未找到Spu，请先添加Spu');\n                }\n\n                _context5.next = 11;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                _this5.$message.error('获取Spu信息失败');\n\n                console.error(_context5.t0);\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 7]]);\n      }))();\n    },\n    // theme\n    queryThemeSearch: function queryThemeSearch(queryString, cb) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var results;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                results = _this6.themeSuggestions;\n                cb(results);\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    handleThemeSelect: function handleThemeSelect(item) {\n      // this.state = item.name\n      this.form.theme_name = item.name;\n      this.form.theme_id = item.id;\n    },\n    // async getThemeValue() {\n    //   const val = await this.$refs.uploadEle.getThemeValue()\n    //   if (val && val.length > 0) {\n    //     this.form.img = val[0].display\n    //   }\n    // },\n    loadThemeSuggestions: function loadThemeSuggestions() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return Theme.getList();\n\n              case 3:\n                _this7.themeSuggestions = _context7.sent;\n\n                if (_this7.themeSuggestions.length === 0) {\n                  _this7.$message.error('未找到主题，请先添加主题');\n                }\n\n                _context7.next = 11;\n                break;\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n\n                _this7.$message.error('获取主题信息失败');\n\n                console.error(_context7.t0);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 7]]);\n      }))();\n    },\n    // Type\n    queryTypeSearch: function queryTypeSearch(queryString, cb) {\n      var results = this.typeSuggestions;\n      cb(results);\n    },\n    // createTypeFilter(queryString) {\n    //   // eslint-disable-next-line\n    //   return typeSuggestions => {\n    //     return typeSuggestions.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n    //   }\n    // },\n    handleTypeSelect: function handleTypeSelect(item) {\n      // this.state = item.name\n      // this.form.name = item.name\n      this.form.id = item.id;\n      this.form.type = item.id;\n\n      if (this.form.type == 1) {\n        this.form.type_name = \"无类型\";\n      } else if (this.form.type == 2) {\n        this.form.type_name = \"Spu\";\n      } else if (this.form.type == 3) {\n        this.form.type_name = \"主题\";\n      }\n    },\n    // async getThemeValue() {\n    //   const val = await this.$refs.uploadEle.getThemeValue()\n    //   if (val && val.length > 0) {\n    //     this.form.img = val[0].display\n    //   }\n    // },\n    loadTypeSuggestions: function loadTypeSuggestions() {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _this8.typeSuggestions = [{\n                  name: '无类型',\n                  id: 1\n                }, {\n                  name: 'Spu',\n                  id: 2\n                }, {\n                  name: '主题',\n                  id: 3\n                }];\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/view/banner/banner-item-edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <sticky-top>\n      <div class=\"title\">\n        <span>{{ isCreate ? '添加BannerItem' : '修改BannerItem' }}</span>\n        <span class=\"back\" @click=\"back\"> <i class=\"iconfont icon-fanhui\"></i> 返回 </span>\n        <el-divider></el-divider>\n      </div>\n    </sticky-top>\n    <div class=\"container\">\n      <div class=\"wrap\">\n        <el-row>\n          <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n            <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" @submit.native.prevent>\n              <el-form-item label=\"名称\" prop=\"name\">\n                <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写名称\"></el-input>\n              </el-form-item>\n              <!-- <el-form-item label=\"关键字\" prop=\"keyword\">\n                <el-input size=\"medium\" v-model=\"form.keyword\" placeholder=\"请填写关键字\"></el-input>\n              </el-form-item> -->\n              <el-form-item label=\"类型\" prop=\"type\">\n                <el-autocomplete\n                  @focus=\"loadTypeSuggestions\"\n                  popper-class=\"my-autocomplete\"\n                  class=\"inline-input\"\n                  v-model=\"form.type_name\"\n                  :fetch-suggestions=\"queryTypeSearch\"\n                  placeholder=\"请填写所属分类\"\n                  @select=\"handleTypeSelect\"\n                >\n                  <template #default=\"{ item }\">\n                    <span class=\"id\">id： {{ item.id }}</span>\n                    <span class=\"name\"> 名称：{{ item.name }}</span>\n                  </template>\n                </el-autocomplete>\n              </el-form-item>\n              <el-form-item label=\"主题\" prop=\"theme_name\">\n                <el-autocomplete\n                  @focus=\"loadThemeSuggestions\"\n                  popper-class=\"my-autocomplete\"\n                  class=\"inline-input\"\n                  v-model=\"form.theme_name\"\n                  :fetch-suggestions=\"queryThemeSearch\"\n                  placeholder=\"请填写主题\"\n                  @select=\"handleThemeSelect\"\n                >\n                  <template #default=\"{ item }\">\n                    <span class=\"id\">id： {{ item.id }}</span>\n                    <span class=\"name\"> 名称：{{ item.name }}</span>\n                  </template>\n                </el-autocomplete>\n              </el-form-item>\n              <el-form-item label=\"Spu\" prop=\"spu_name\">\n                <el-autocomplete\n                  @focus=\"loadSpuSuggestions\"\n                  popper-class=\"my-autocomplete\"\n                  class=\"inline-input\"\n                  v-model=\"form.spu_name\"\n                  :fetch-suggestions=\"querySpuSearch\"\n                  placeholder=\"请填写Spu\"\n                  @select=\"handleSpuSelect\"\n                >\n                  <template #default=\"{ item }\">\n                    <span class=\"id\">id： {{ item.id }}</span>\n                    <span class=\"name\"> 名称：{{ item.title }}</span>\n                  </template>\n                </el-autocomplete>\n              </el-form-item>\n              <!-- <el-form-item label=\"类型\" prop=\"type\">\n                <el-input size=\"medium\" v-model=\"form.type\" placeholder=\"请填写类型\"></el-input>\n              </el-form-item> -->\n              <el-form-item label=\"图片\" prop=\"img\">\n                <upload-imgs :max-num=\"maxNum\" ref=\"uploadEle\" :value=\"initData\" />\n              </el-form-item>\n              <el-form-item class=\"submit\">\n                <el-button\n                  v-permission=\"{ permission: ['创建Banner item', '更新Banner item'], type: 'disabled' }\"\n                  type=\"primary\"\n                  @click=\"submitForm('form')\"\n                  >保 存</el-button\n                >\n                <!-- <el-button @click=\"resetForm('form')\">重 置</el-button> -->\n              </el-form-item>\n            </el-form>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BannerItem from '@/model/banner-item'\nimport UploadImgs from '@/component/base/upload-image'\nimport StickyTop from '@/component/base/sticky-top/sticky-top'\nimport Spu from '@/model/spu'\nimport Theme from '@/model/theme'\n\nexport default {\n  components: {\n    UploadImgs,\n    StickyTop,\n  },\n  props: {\n    editID: {\n      type: Number,\n    },\n    isCreate: {\n      type: Boolean,\n      default: false,\n    },\n    bannerId: {\n      type: Number,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      spuSuggestions: [],\n      themeSuggestions: [],\n      maxNum: 1,\n      form: {\n        img: '',\n        keyword: '',\n        type: null,\n        spu_id: null,\n        spu_name: '',\n        theme_id: null,\n        theme_name: '',\n      },\n      rules: {\n        minWidth: 10,\n        minHeight: 10,\n        maxSize: 5,\n      },\n      initData: [],\n    }\n  },\n  async mounted() {\n    if (!this.isCreate) {\n      const res = await BannerItem.getBannerItem(this.editID)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.img,\n        },\n      ]\n      this.form = res\n      if(this.form.type == 1) {\n        this.form.type_name = \"无类型\"\n      }else if(this.form.type == 2) {\n        this.form.type_name = \"Spu\"\n      }else if(this.form.type == 3) {\n        this.form.type_name = \"主题\"\n      }\n    }\n\n    this.loadSpuSuggestions()\n    this.loadThemeSuggestions()\n    this.loadTypeSuggestions()\n  },\n  methods: {\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.img = val[0].display\n      }\n    },\n    async submitForm() {\n      await this.getValue()\n      const form = { ...this.form }\n      let res\n      if (this.isCreate) {\n        form.banner_id = this.bannerId\n        res = await BannerItem.addBannerItem(form)\n      } else {\n        res = await BannerItem.editBannerItem(this.editID, form)\n      }\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.resetForm('form')\n        this.$emit('editClose')\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    back() {\n      this.$emit('editClose')\n    },\n    // spu\n    async querySpuSearch(queryString, cb) {\n      // eslint-disable-next-line\n      // const spuSuggestions = await Spu.getList()\n      // const results = queryString ? spuSuggestions.filter(this.createSpuFilter(queryString)) : spuSuggestions\n      const results = this.spuSuggestions\n      cb(results)\n    },\n    handleSpuSelect(item) {\n      // this.state = item.name\n      this.form.spu_name = item.title\n      this.form.spu_id = item.id\n    },\n    // async getSpuValue() {\n    //   const val = await this.$refs.uploadEle.getSpuValue()\n    //   if (val && val.length > 0) {\n    //     this.form.img = val[0].display\n    //   }\n    // },\n    async loadSpuSuggestions() {\n      try {\n        this.spuSuggestions = await Spu.getList()\n        if (this.spuSuggestions.length === 0) {\n          this.$message.error('未找到Spu，请先添加Spu')\n        }\n      } catch (error) {\n        this.$message.error('获取Spu信息失败')\n        console.error(error)\n      }\n    },\n    // theme\n    async queryThemeSearch(queryString, cb) {\n      const results = this.themeSuggestions\n      cb(results)\n    },\n    handleThemeSelect(item) {\n      // this.state = item.name\n      this.form.theme_name = item.name\n      this.form.theme_id = item.id\n    },\n    // async getThemeValue() {\n    //   const val = await this.$refs.uploadEle.getThemeValue()\n    //   if (val && val.length > 0) {\n    //     this.form.img = val[0].display\n    //   }\n    // },\n    async loadThemeSuggestions() {\n      try {\n        this.themeSuggestions = await Theme.getList()\n        if (this.themeSuggestions.length === 0) {\n          this.$message.error('未找到主题，请先添加主题')\n        }\n      } catch (error) {\n        this.$message.error('获取主题信息失败')\n        console.error(error)\n      }\n    },\n     // Type\n    queryTypeSearch(queryString, cb) {\n      const results = this.typeSuggestions\n      cb(results)\n    },\n    // createTypeFilter(queryString) {\n    //   // eslint-disable-next-line\n    //   return typeSuggestions => {\n    //     return typeSuggestions.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n    //   }\n    // },\n    handleTypeSelect(item) {\n      // this.state = item.name\n      // this.form.name = item.name\n      this.form.id = item.id\n      this.form.type = item.id\n      if(this.form.type == 1) {\n        this.form.type_name = \"无类型\"\n      }else if(this.form.type == 2) {\n        this.form.type_name = \"Spu\"\n      }else if(this.form.type == 3) {\n        this.form.type_name = \"主题\"\n      }\n    },\n    // async getThemeValue() {\n    //   const val = await this.$refs.uploadEle.getThemeValue()\n    //   if (val && val.length > 0) {\n    //     this.form.img = val[0].display\n    //   }\n    // },\n    async loadTypeSuggestions() {\n      this.typeSuggestions = [\n        {\n          name : '无类型',\n          id : 1,\n        },\n        {\n          name : 'Spu',\n          id : 2,\n        },\n        {\n          name : '主题',\n          id : 3,\n        },\n      ]\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}