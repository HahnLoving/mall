{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport AdminModel from '@/lin/model/admin';\nimport UserModel from '@/lin/model/user';\nexport default {\n  props: {\n    submit: {\n      // 表单是否显示功能按钮\n      type: Boolean,\n      default: true\n    },\n    id: {\n      // 用户id\n      type: Number,\n      default: undefined\n    },\n    allGroups: {\n      // 所有分组\n      type: Array,\n      default: function _default() {}\n    },\n    labelPosition: {\n      // 表单label位置\n      type: String,\n      default: 'right'\n    },\n    info: {\n      // 用户信息\n      type: Object,\n      default: function _default() {}\n    },\n    pageType: {\n      type: String,\n      default: 'add' // 区分编辑页面/添加页面\n\n    }\n  },\n  setup: function setup(props, ctx) {\n    var form = ref(null);\n    var loading = ref(false);\n    var isEdited = ref(false); // 能否编辑\n\n    var userInfo = reactive({\n      email: '',\n      username: '',\n      password: '',\n      groupIds: [],\n      confirmPassword: ''\n    });\n    /**\n     * 表单规则验证\n     */\n\n    var _getRules = getRules(userInfo),\n        rules = _getRules.rules;\n    /**\n     * 新增或更新管理员信息\n     */\n\n\n    var submitForm = function submitForm() {\n      form.value.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var res, originalGroupIds;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 34;\n                    break;\n                  }\n\n                  res = {}; // 1. 新增用户\n\n                  if (!(props.pageType === 'add')) {\n                    _context.next = 17;\n                    break;\n                  }\n\n                  _context.prev = 3;\n                  loading.value = true;\n                  _context.next = 7;\n                  return UserModel.register(userInfo);\n\n                case 7:\n                  res = _context.sent;\n\n                  if (res.code < window.MAX_SUCCESS_CODE) {\n                    loading.value = false;\n                    ElMessage.success(\"\".concat(res.message));\n                    resetForm();\n                  }\n\n                  _context.next = 15;\n                  break;\n\n                case 11:\n                  _context.prev = 11;\n                  _context.t0 = _context[\"catch\"](3);\n                  loading.value = false;\n                  ElMessage.error('新增用户失败');\n\n                case 15:\n                  _context.next = 32;\n                  break;\n\n                case 17:\n                  // 2. 更新用户信息\n                  originalGroupIds = props.info.groups.map(function (item) {\n                    return item.id;\n                  });\n\n                  if (!(userInfo.groupIds.sort().toString() === originalGroupIds.toString())) {\n                    _context.next = 21;\n                    break;\n                  }\n\n                  ctx.emit('handleInfoResult', false);\n                  return _context.abrupt(\"return\");\n\n                case 21:\n                  _context.prev = 21;\n                  loading.value = true;\n                  _context.next = 25;\n                  return AdminModel.updateOneUser(userInfo.email, userInfo.groupIds, props.id);\n\n                case 25:\n                  res = _context.sent;\n                  _context.next = 31;\n                  break;\n\n                case 28:\n                  _context.prev = 28;\n                  _context.t1 = _context[\"catch\"](21);\n                  loading.value = false;\n\n                case 31:\n                  if (res.code < window.MAX_SUCCESS_CODE) {\n                    loading.value = false;\n                    ElMessage.success(\"\".concat(res.message));\n                    ctx.emit('handleInfoResult', true);\n                  } else {\n                    loading.value = false;\n                  }\n\n                case 32:\n                  _context.next = 35;\n                  break;\n\n                case 34:\n                  ElMessage.error('请填写正确的信息');\n\n                case 35:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[3, 11], [21, 28]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n    /**\n     * reset表单内容\n     */\n\n\n    var resetForm = function resetForm() {\n      if (props.pageType === 'edit') {\n        setInitialUserInfo();\n      } else {\n        userInfo.groupIds = [];\n        form.value.resetFields();\n      }\n    };\n    /**\n     * 编辑页面设置初始值\n     */\n\n\n    var setInitialUserInfo = function setInitialUserInfo() {\n      userInfo.email = props.info.email;\n      userInfo.username = props.info.username;\n      userInfo.groupIds = props.info.groups.map(function (item) {\n        return item.id;\n      });\n    };\n    /**\n     * 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\n     */\n\n\n    onMounted(function () {\n      if (props.pageType === 'edit') {\n        setInitialUserInfo();\n        isEdited.value = true;\n      }\n    });\n    return {\n      form: form,\n      rules: rules,\n      loading: loading,\n      isEdited: isEdited,\n      userInfo: userInfo,\n      resetForm: resetForm,\n      submitForm: submitForm\n    };\n  }\n};\n/**\n * 表单验证规则\n */\n\nfunction getRules(userInfo) {\n  /**\n   * 验证回调函数\n   */\n  var checkUserName = function checkUserName(rule, value, callback) {\n    if (!value) {\n      callback(new Error('用户名不能为空'));\n    }\n\n    callback();\n  };\n  /**\n   * 验证密码\n   */\n\n\n  var validatePassword = function validatePassword(rule, value, callback) {\n    if (value === '') {\n      callback(new Error('请输入密码'));\n    } else if (value.length < 6) {\n      callback(new Error('密码长度不能少于6位数'));\n    } else {\n      callback();\n    }\n  };\n  /**\n   * 再次验证密码\n   */\n\n\n  var validatePassword2 = function validatePassword2(rule, value, callback) {\n    if (value === '') {\n      callback(new Error('请再次输入密码'));\n    } else if (value !== userInfo.password) {\n      callback(new Error('两次输入密码不一致!'));\n    } else {\n      callback();\n    }\n  };\n\n  var rules = {\n    password: [{\n      validator: validatePassword,\n      trigger: 'blur',\n      required: true\n    }],\n    username: [{\n      validator: checkUserName,\n      trigger: ['blur', 'change'],\n      required: true\n    }],\n    confirmPassword: [{\n      validator: validatePassword2,\n      trigger: 'blur',\n      required: true\n    }],\n    email: [{\n      type: 'email',\n      message: '请输入正确的邮箱地址或者不填',\n      trigger: ['blur', 'change']\n    }]\n  };\n  return {\n    rules: rules\n  };\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/src/view/admin/user/user-info.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <el-form\n      ref=\"form\"\n      status-icon\n      :rules=\"rules\"\n      :model=\"userInfo\"\n      label-width=\"100px\"\n      v-loading=\"loading\"\n      :label-position=\"labelPosition\"\n      @submit.prevent\n    >\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input clearable v-model=\"userInfo.username\" :disabled=\"isEdited\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input clearable :disabled=\"isEdited\" v-model=\"userInfo.email\" auto-complete=\"new-password\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"pageType === 'add'\" label=\"密码\" prop=\"password\">\n        <el-input clearable type=\"password\" v-model=\"userInfo.password\" auto-complete=\"new-password\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"pageType === 'add'\" label=\"确认密码\" prop=\"confirmPassword\" label-position=\"top\">\n        <el-input clearable type=\"password\" autocomplete=\"off\" v-model=\"userInfo.confirmPassword\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"pageType !== 'password'\" label=\"选择分组\">\n        <el-checkbox-group v-model=\"userInfo.groupIds\" size=\"small\" style=\"transform: translateY(5px)\">\n          <el-checkbox v-for=\"item in allGroups\" :key=\"item.id\" :label=\"item.id\" border style=\"margin-left: 0\">{{\n            item.name\n          }}</el-checkbox>\n        </el-checkbox-group>\n      </el-form-item>\n      <el-form-item v-show=\"submit\" class=\"submit\">\n        <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n        <!-- <el-button @click=\"resetForm\">重 置</el-button> -->\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport AdminModel from '@/lin/model/admin'\nimport UserModel from '@/lin/model/user'\n\nexport default {\n  props: {\n    submit: {\n      // 表单是否显示功能按钮\n      type: Boolean,\n      default: true,\n    },\n    id: {\n      // 用户id\n      type: Number,\n      default: undefined,\n    },\n    allGroups: {\n      // 所有分组\n      type: Array,\n      default: () => {},\n    },\n    labelPosition: {\n      // 表单label位置\n      type: String,\n      default: 'right',\n    },\n    info: {\n      // 用户信息\n      type: Object,\n      default: () => {},\n    },\n    pageType: {\n      type: String,\n      default: 'add', // 区分编辑页面/添加页面\n    },\n  },\n  setup(props, ctx) {\n    const form = ref(null)\n    const loading = ref(false)\n    const isEdited = ref(false) // 能否编辑\n\n    const userInfo = reactive({\n      email: '',\n      username: '',\n      password: '',\n      groupIds: [],\n      confirmPassword: '',\n    })\n\n    /**\n     * 表单规则验证\n     */\n    const { rules } = getRules(userInfo)\n\n    /**\n     * 新增或更新管理员信息\n     */\n    const submitForm = () => {\n      form.value.validate(async valid => {\n        if (valid) {\n          let res = {}\n          // 1. 新增用户\n          if (props.pageType === 'add') {\n            try {\n              loading.value = true\n              res = await UserModel.register(userInfo)\n              if (res.code < window.MAX_SUCCESS_CODE) {\n                loading.value = false\n                ElMessage.success(`${res.message}`)\n                resetForm()\n              }\n            } catch (e) {\n              loading.value = false\n              ElMessage.error('新增用户失败')\n            }\n          } else {\n            // 2. 更新用户信息\n            const originalGroupIds = props.info.groups.map(item => item.id)\n            if (userInfo.groupIds.sort().toString() === originalGroupIds.toString()) {\n              ctx.emit('handleInfoResult', false)\n              return\n            }\n\n            try {\n              loading.value = true\n              res = await AdminModel.updateOneUser(userInfo.email, userInfo.groupIds, props.id)\n            } catch (e) {\n              loading.value = false\n            }\n            if (res.code < window.MAX_SUCCESS_CODE) {\n              loading.value = false\n              ElMessage.success(`${res.message}`)\n              ctx.emit('handleInfoResult', true)\n            } else {\n              loading.value = false\n            }\n          }\n        } else {\n          ElMessage.error('请填写正确的信息')\n        }\n      })\n    }\n\n    /**\n     * reset表单内容\n     */\n    const resetForm = () => {\n      if (props.pageType === 'edit') {\n        setInitialUserInfo()\n      } else {\n        userInfo.groupIds = []\n        form.value.resetFields()\n      }\n    }\n\n    /**\n     * 编辑页面设置初始值\n     */\n    const setInitialUserInfo = () => {\n      userInfo.email = props.info.email\n      userInfo.username = props.info.username\n      userInfo.groupIds = props.info.groups.map(item => item.id)\n    }\n\n    /**\n     * 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\n     */\n    onMounted(() => {\n      if (props.pageType === 'edit') {\n        setInitialUserInfo()\n        isEdited.value = true\n      }\n    })\n    return {\n      form,\n      rules,\n      loading,\n      isEdited,\n      userInfo,\n      resetForm,\n      submitForm,\n    }\n  },\n}\n\n/**\n * 表单验证规则\n */\nfunction getRules(userInfo) {\n  /**\n   * 验证回调函数\n   */\n  const checkUserName = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('用户名不能为空'))\n    }\n    callback()\n  }\n  /**\n   * 验证密码\n   */\n  const validatePassword = (rule, value, callback) => {\n    if (value === '') {\n      callback(new Error('请输入密码'))\n    } else if (value.length < 6) {\n      callback(new Error('密码长度不能少于6位数'))\n    } else {\n      callback()\n    }\n  }\n  /**\n   * 再次验证密码\n   */\n  const validatePassword2 = (rule, value, callback) => {\n    if (value === '') {\n      callback(new Error('请再次输入密码'))\n    } else if (value !== userInfo.password) {\n      callback(new Error('两次输入密码不一致!'))\n    } else {\n      callback()\n    }\n  }\n  const rules = {\n    password: [{ validator: validatePassword, trigger: 'blur', required: true }],\n    username: [{ validator: checkUserName, trigger: ['blur', 'change'], required: true }],\n    confirmPassword: [{ validator: validatePassword2, trigger: 'blur', required: true }],\n    email: [{ type: 'email', message: '请输入正确的邮箱地址或者不填', trigger: ['blur', 'change'] }],\n  }\n  return { rules }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  margin-top: 20px;\n  margin-left: -5px;\n  max-width: 800px;\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}