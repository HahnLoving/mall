{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-05b47606\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    style: {\n      \"margin-top\": \"-25px\"\n    }\n  }, [/*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"dialog-title\"\n  }, [/*#__PURE__*/_createTextVNode(\" 123 \"), /*#__PURE__*/_createCommentVNode(\" <span>{{ isCreate ? '创建六宫格' : '更新六宫格' }}</span> \")]), /*#__PURE__*/_createCommentVNode(\" <el-form :model=\\\"form\\\" status-icon ref=\\\"form\\\" label-width=\\\"100px\\\" @submit.native.prevent>\\n        <el-form-item label=\\\"标题\\\" prop=\\\"title\\\">\\n          <el-input size=\\\"medium\\\" v-model=\\\"form.title\\\" placeholder=\\\"请填写宫格标题\\\"></el-input>\\n        </el-form-item>\\n        <el-form-item label=\\\"名称\\\" prop=\\\"name\\\">\\n          <el-input size=\\\"medium\\\" v-model=\\\"form.name\\\" placeholder=\\\"请填写宫格名\\\"></el-input>\\n        </el-form-item>\\n        <el-form-item label=\\\"分类\\\" prop=\\\"category_id\\\">\\n          <el-autocomplete\\n            @focus=\\\"loadSuggestions\\\"\\n            popper-class=\\\"my-autocomplete\\\"\\n            class=\\\"inline-input\\\"\\n            v-model=\\\"state\\\"\\n            :fetch-suggestions=\\\"querySearch\\\"\\n            placeholder=\\\"请填写所属分类\\\"\\n            @select=\\\"handleSelect\\\"\\n          >\\n            <template slot-scope=\\\"{ item }\\\">\\n              <span class=\\\"id\\\">{{ item.id }}</span>\\n              <span class=\\\"name\\\">{{ item.name }}</span>\\n            </template>\\n          </el-autocomplete>\\n        </el-form-item>\\n        <el-form-item label=\\\"图片\\\" prop=\\\"img\\\">\\n          <upload-imgs ref=\\\"uploadEle\\\" :max-num=\\\"maxNum\\\" :value=\\\"initData\\\" />\\n        </el-form-item>\\n      </el-form> \")], -1\n  /* HOISTED */\n  );\n});\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <el-dialog :append-to-body=\\\"true\\\" :before-close=\\\"handleClose\\\" :visible.sync=\\\"visible\\\"> \"), _createCommentVNode(\" <el-dialog> \"), _hoisted_1, _createCommentVNode(\" <div slot=\\\"footer\\\" class=\\\"dialog-footer\\\" style=\\\"padding-left:5px;\\\">\\n      <el-button type=\\\"primary\\\" @click=\\\"submitForm\\\" v-permission=\\\"{ permission: '更新六宫格', type: 'disabled' }\\\"\\n        >确 定</el-button\\n      >\\n      <el-button @click=\\\"resetForm('form')\\\">重 置</el-button>\\n    </div> \"), _createCommentVNode(\" </el-dialog> \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/view/grid-category/grid-category-edit.vue"],"names":[],"mappings":";;;;;;;sBAGI,mBAAA,CAgCM,KAhCN,EAgCM;AAhCD,IAAA,KAAyB,EAAzB;AAAA,oBAAA;AAAA;AAgCC,GAhCN,EAA8B,C,aAC5B,mBAAA,CAGM,KAHN,EAGM;AAHD,IAAA,KAAK,EAAC;AAGL,GAHN,EAAyB,C,8BAAC,O,CAAD,E,aAEvB,mBAAA,CAAA,mDAAA,CAFuB,CAAzB,CAD4B,E,aAK5B,mBAAA,CAAA,qtCAAA,CAL4B,CAA9B,E;;AAAA,G;;;;6DAFF,mBAAA,CAAA,gGAAA,C,EACA,mBAAA,CAAA,eAAA,C,EACE,U,EAiCA,mBAAA,CAAA,8SAAA,C,EAMF,mBAAA,CAAA,gBAAA,C","sourcesContent":["<template>\n  <!-- <el-dialog :append-to-body=\"true\" :before-close=\"handleClose\" :visible.sync=\"visible\"> -->\n  <!-- <el-dialog> -->\n    <div style=\"margin-top:-25px;\">\n      <div class=\"dialog-title\">\n        123\n        <!-- <span>{{ isCreate ? '创建六宫格' : '更新六宫格' }}</span> -->\n      </div>\n      <!-- <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" @submit.native.prevent>\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input size=\"medium\" v-model=\"form.title\" placeholder=\"请填写宫格标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"名称\" prop=\"name\">\n          <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写宫格名\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"category_id\">\n          <el-autocomplete\n            @focus=\"loadSuggestions\"\n            popper-class=\"my-autocomplete\"\n            class=\"inline-input\"\n            v-model=\"state\"\n            :fetch-suggestions=\"querySearch\"\n            placeholder=\"请填写所属分类\"\n            @select=\"handleSelect\"\n          >\n            <template slot-scope=\"{ item }\">\n              <span class=\"id\">{{ item.id }}</span>\n              <span class=\"name\">{{ item.name }}</span>\n            </template>\n          </el-autocomplete>\n        </el-form-item>\n        <el-form-item label=\"图片\" prop=\"img\">\n          <upload-imgs ref=\"uploadEle\" :max-num=\"maxNum\" :value=\"initData\" />\n        </el-form-item>\n      </el-form> -->\n    </div>\n    <!-- <div slot=\"footer\" class=\"dialog-footer\" style=\"padding-left:5px;\">\n      <el-button type=\"primary\" @click=\"submitForm\" v-permission=\"{ permission: '更新六宫格', type: 'disabled' }\"\n        >确 定</el-button\n      >\n      <el-button @click=\"resetForm('form')\">重 置</el-button>\n    </div> -->\n  <!-- </el-dialog> -->\n</template>\n<script>\nimport GridCategory from '@/model/grid-category'\nimport Category from '@/model/category'\nimport UploadImgs from '@/component/base/upload-image'\n\nexport default {\n  name:\"grid-category-edit\",\n  // components: {\n  //   UploadImgs,\n  // },\n  // props: {\n  //   dialogFormVisible: {\n  //     type: Boolean,\n  //     default: false,\n  //   },\n  //   isCreate: {\n  //     type: Boolean,\n  //     default: false,\n  //   },\n  //   gridCategoryId: {\n  //     type: Number,\n  //     default: 0,\n  //   },\n  // },\n  // computed: {\n  //   visible: {\n  //     get() {\n  //       return this.dialogFormVisible\n  //     },\n  //     set() {},\n  //   },\n  // },\n  // data() {\n  //   return {\n  //     state: '',\n  //     suggestions: [],\n  //     display: true,\n  //     initData: [],\n  //     maxNum: 1,\n  //     form: {\n  //       name: '',\n  //       title: '',\n  //       category_id: null,\n  //       root_category_id: null,\n  //     },\n  //   }\n  // },\n  // watch: {\n  //   display(val) {\n  //     this.form.online = val ? 1 : 0\n  //   },\n  // },\n  // async mounted() {\n  //   if (!this.isCreate) {\n  //     const res = await GridCategory.getGridCategory(this.gridCategoryId)\n  //     this.form = res\n  //     this.initData = [{ display: res.img }]\n  //   }\n  //   this.loadSuggestions()\n  // },\n  // methods: {\n  //   async submitForm() {\n  //     await this.getValue()\n  //     const form = { ...this.form }\n  //     let res\n  //     if (this.isCreate) {\n  //       res = await GridCategory.addGridCategory(form)\n  //     } else {\n  //       res = await GridCategory.editGridCategory(this.gridCategoryId, form)\n  //     }\n  //     if (res.code < window.MAX_SUCCESS_CODE) {\n  //       this.$message.success(`${res.message}`)\n  //       this.$emit('dialogClose')\n  //     }\n  //   },\n  //   querySearch(queryString, cb) {\n  //     // eslint-disable-next-line\n  //     const suggestions = this.suggestions\n  //     const results = queryString ? suggestions.filter(this.createFilter(queryString)) : suggestions\n  //     cb(results)\n  //   },\n  //   createFilter(queryString) {\n  //     // eslint-disable-next-line\n  //     return suggestion => {\n  //       return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n  //     }\n  //   },\n  //   handleSelect(item) {\n  //     this.state = item.name\n  //     this.form.category_id = item.id\n  //   },\n  //   async getValue() {\n  //     const val = await this.$refs.uploadEle.getValue()\n  //     if (val && val.length > 0) {\n  //       this.form.img = val[0].display\n  //     }\n  //   },\n  //   async loadSuggestions() {\n  //     try {\n  //       this.suggestions = await Category.getList()\n  //       if (this.suggestions.length === 0) {\n  //         this.$message.error('未找到宫格建议，请先添加宫格')\n  //       }\n  //     } catch (error) {\n  //       this.$message.error('获取宫格建议信息失败')\n  //       console.error(error)\n  //     }\n  //     const inlineId = this.getInlineId()\n  //     // eslint-disable-next-line\n  //     const hit = this.suggestions.filter(val => {\n  //       return val.id === inlineId\n  //     })\n  //     if (hit.length > 0) {\n  //       this.state = hit[0].name\n  //     }\n  //   },\n  //   getInlineId() {\n  //     if (this.form.category_id) {\n  //       return this.form.category_id\n  //     }\n  //     if (this.form.root_category_id) {\n  //       return this.form.root_category_id\n  //     }\n  //     return null\n  //   },\n  //   resetForm(formName) {\n  //     this.$refs[formName].resetFields()\n  //   },\n  //   handleClose(done) {\n  //     done()\n  //     this.$emit('dialogClose')\n  //   },\n  // },\n}\n</script>\n<style lang=\"scss\" scoped>\n.dialog-title {\n  color: $parent-title-color;\n  font-size: 16px;\n  margin-bottom: 20px;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}