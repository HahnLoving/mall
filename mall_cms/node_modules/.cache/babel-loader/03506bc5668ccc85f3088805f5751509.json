{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhahn/Desktop/\\u672A\\u547D\\u540D\\u6587\\u4EF6\\u5939/lin-cms-vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { ref, onMounted } from 'vue';\nimport AdminModel from '@/lin/model/admin';\nexport var useUserList = function useUserList() {\n  var allGroups = ref([]);\n  var pageCount = ref(10); // 每页10条数据\n\n  var tableData = ref([]);\n  var groupId = ref(null);\n  var loading = ref(false);\n  var totalNum = ref(0); // 分组内的用户总数\n\n  var currentPage = ref(1); // 默认获取第一页的数据\n\n  /**\n   * 获取管理员列表数据\n   */\n\n  var getAdminUsers = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = {};\n              _context.prev = 1;\n              loading.value = true;\n              _context.next = 5;\n              return AdminModel.getAdminUsers({\n                groupId: groupId.value,\n                count: pageCount.value,\n                page: currentPage.value - 1\n              });\n\n            case 5:\n              res = _context.sent;\n              loading.value = false;\n              tableData.value = shuffleList(res.items);\n              totalNum.value = res.total;\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              loading.value = false;\n              console.error(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function getAdminUsers() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * 获取所有分组数据\n   */\n\n\n  var getAllGroups = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              loading.value = true;\n              _context2.next = 4;\n              return AdminModel.getAllGroups();\n\n            case 4:\n              allGroups.value = _context2.sent;\n              loading.value = false;\n              _context2.next = 12;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              loading.value = false;\n              console.error(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function getAllGroups() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  /**\n   * 多分组用 '，' 分割展示\n   */\n\n\n  var shuffleList = function shuffleList(users) {\n    var list = [];\n    users.forEach(function (element) {\n      element.groupNames = element.groups.map(function (item) {\n        return item.name;\n      }).join('，');\n      list.push(element);\n    });\n    return list;\n  };\n\n  onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getAdminUsers();\n\n          case 2:\n            getAllGroups();\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })));\n  return {\n    groupId: groupId,\n    loading: loading,\n    totalNum: totalNum,\n    allGroups: allGroups,\n    pageCount: pageCount,\n    tableData: tableData,\n    currentPage: currentPage,\n    getAdminUsers: getAdminUsers\n  };\n};\nexport var useFormData = function useFormData(ctx, dialogFormVisible, getAdminUsers, currentPage, loading, info, password) {\n  var id = ref(null);\n  var activeTab = ref('修改信息');\n  /**\n   * 监听子组件更新管理员信息是否成功\n   * 如果更新了管理员信息，重新请求管理员列表\n   */\n\n  var handleInfoResult = function handleInfoResult(flag) {\n    dialogFormVisible.value = false;\n\n    if (flag === true) {\n      getAdminUsers();\n    }\n  };\n  /**\n   * 根据分组查询管理员\n   */\n\n\n  var handleChange = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              currentPage.value = 1;\n              loading.value = true;\n              _context4.next = 4;\n              return getAdminUsers();\n\n            case 4:\n              loading.value = false;\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleChange() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  /**\n   * 监听是否完成密码更新\n   * @param {boolean} result 是否完成密码更新\n   */\n\n\n  var handlePasswordResult = function handlePasswordResult(result) {\n    if (result === true) {\n      dialogFormVisible.value = false;\n    }\n  };\n  /**\n   * 翻页\n   */\n\n\n  var handleCurrentChange = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(val) {\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              currentPage.value = val;\n              _context5.next = 3;\n              return getAdminUsers();\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function handleCurrentChange(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  /**\n   * 提交表单信息，更新管理员信息\n   */\n\n\n  var confirmEdit = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(activeTab.value === '修改信息')) {\n                _context6.next = 5;\n                break;\n              }\n\n              _context6.next = 3;\n              return info.value.submitForm();\n\n            case 3:\n              _context6.next = 7;\n              break;\n\n            case 5:\n              _context6.next = 7;\n              return password.value.submitForm();\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function confirmEdit() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  /**\n   * 关闭编辑弹窗\n   */\n\n\n  var handleClose = function handleClose(done) {\n    dialogFormVisible.value = false;\n    password.value.resetForm();\n    activeTab.value = '修改信息';\n    done();\n  };\n\n  var handleClick = function handleClick(tab) {\n    activeTab.value = tab.props.name;\n  };\n  /**\n   * 重置表单\n   */\n\n\n  var resetForm = function resetForm() {\n    if (activeTab.value === '修改信息') {\n      info.value.resetForm();\n    } else {\n      password.value.resetForm();\n    }\n  };\n\n  return {\n    id: id,\n    activeTab: activeTab,\n    resetForm: resetForm,\n    confirmEdit: confirmEdit,\n    handleClose: handleClose,\n    handleClick: handleClick,\n    handleChange: handleChange,\n    handleInfoResult: handleInfoResult,\n    handleCurrentChange: handleCurrentChange,\n    handlePasswordResult: handlePasswordResult\n  };\n};","map":{"version":3,"sources":["/Users/zhahn/Desktop/未命名文件夹/lin-cms-vue/src/view/admin/user/use-user.js"],"names":["ref","onMounted","AdminModel","useUserList","allGroups","pageCount","tableData","groupId","loading","totalNum","currentPage","getAdminUsers","res","value","count","page","shuffleList","items","total","console","error","getAllGroups","users","list","forEach","element","groupNames","groups","map","item","name","join","push","useFormData","ctx","dialogFormVisible","info","password","id","activeTab","handleInfoResult","flag","handleChange","handlePasswordResult","result","handleCurrentChange","val","confirmEdit","submitForm","handleClose","done","resetForm","handleClick","tab","props"],"mappings":"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","sourcesContent":["import { ref, onMounted } from 'vue'\nimport AdminModel from '@/lin/model/admin'\n\nexport const useUserList = () => {\n  const allGroups = ref([])\n  const pageCount = ref(10) // 每页10条数据\n  const tableData = ref([])\n  const groupId = ref(null)\n  const loading = ref(false)\n  const totalNum = ref(0) // 分组内的用户总数\n  const currentPage = ref(1) // 默认获取第一页的数据\n\n  /**\n   * 获取管理员列表数据\n   */\n  const getAdminUsers = async () => {\n    let res = {}\n    try {\n      loading.value = true\n      res = await AdminModel.getAdminUsers({\n        groupId: groupId.value,\n        count: pageCount.value,\n        page: currentPage.value - 1,\n      })\n      loading.value = false\n      tableData.value = shuffleList(res.items)\n      totalNum.value = res.total\n    } catch (e) {\n      loading.value = false\n      console.error(e)\n    }\n  }\n\n  /**\n   * 获取所有分组数据\n   */\n  const getAllGroups = async () => {\n    try {\n      loading.value = true\n      allGroups.value = await AdminModel.getAllGroups()\n      loading.value = false\n    } catch (e) {\n      loading.value = false\n      console.error(e)\n    }\n  }\n\n  /**\n   * 多分组用 '，' 分割展示\n   */\n  const shuffleList = users => {\n    const list = []\n    users.forEach(element => {\n      element.groupNames = element.groups.map(item => item.name).join('，')\n      list.push(element)\n    })\n    return list\n  }\n\n  onMounted(async () => {\n    await getAdminUsers()\n    getAllGroups()\n  })\n\n  return {\n    groupId,\n    loading,\n    totalNum,\n    allGroups,\n    pageCount,\n    tableData,\n    currentPage,\n    getAdminUsers,\n  }\n}\n\nexport const useFormData = (ctx, dialogFormVisible, getAdminUsers, currentPage, loading, info, password) => {\n  const id = ref(null)\n  const activeTab = ref('修改信息')\n\n  /**\n   * 监听子组件更新管理员信息是否成功\n   * 如果更新了管理员信息，重新请求管理员列表\n   */\n  const handleInfoResult = flag => {\n    dialogFormVisible.value = false\n    if (flag === true) {\n      getAdminUsers()\n    }\n  }\n\n  /**\n   * 根据分组查询管理员\n   */\n  const handleChange = async () => {\n    currentPage.value = 1\n    loading.value = true\n    await getAdminUsers()\n    loading.value = false\n  }\n\n  /**\n   * 监听是否完成密码更新\n   * @param {boolean} result 是否完成密码更新\n   */\n  const handlePasswordResult = result => {\n    if (result === true) {\n      dialogFormVisible.value = false\n    }\n  }\n\n  /**\n   * 翻页\n   */\n  const handleCurrentChange = async val => {\n    currentPage.value = val\n    await getAdminUsers()\n  }\n\n  /**\n   * 提交表单信息，更新管理员信息\n   */\n  const confirmEdit = async () => {\n    if (activeTab.value === '修改信息') {\n      await info.value.submitForm()\n    } else {\n      await password.value.submitForm()\n    }\n  }\n\n  /**\n   * 关闭编辑弹窗\n   */\n  const handleClose = done => {\n    dialogFormVisible.value = false\n    password.value.resetForm()\n    activeTab.value = '修改信息'\n    done()\n  }\n\n  const handleClick = tab => {\n    activeTab.value = tab.props.name\n  }\n\n  /**\n   * 重置表单\n   */\n  const resetForm = () => {\n    if (activeTab.value === '修改信息') {\n      info.value.resetForm()\n    } else {\n      password.value.resetForm()\n    }\n  }\n\n  return {\n    id,\n    activeTab,\n    resetForm,\n    confirmEdit,\n    handleClose,\n    handleClick,\n    handleChange,\n    handleInfoResult,\n    handleCurrentChange,\n    handlePasswordResult,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}