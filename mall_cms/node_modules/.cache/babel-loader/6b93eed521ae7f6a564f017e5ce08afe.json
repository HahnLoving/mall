{"ast":null,"code":"import _objectSpread from \"/Users/zhahn/Desktop/\\u672A\\u547D\\u540D\\u6587\\u4EF6\\u5939/lin-cms-vue/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport User from 'lin/model/user';\nimport { mapActions } from 'vuex';\nimport { post, put } from 'lin/plugin/axios';\nimport VuePictureCropper, { cropper } from 'vue-picture-cropper';\nexport default {\n  components: {\n    VuePictureCropper: VuePictureCropper\n  },\n  props: {\n    originalImage: {\n      type: String\n    },\n    cropVisible: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['switchCropVisible'],\n  methods: _objectSpread(_objectSpread({}, mapActions(['setUserAndState'])), {}, {\n    handleCrop: function handleCrop() {\n      var _this = this;\n\n      // 获取裁剪数据\n      var blob = cropper.getBlob(); // 构造为文件对象\n\n      var file = new File([blob], 'avatar.jpg', {\n        type: 'image/jpeg'\n      });\n      return post('/cms/file', {\n        file: file\n      }).then(function (res) {\n        // 清空输入框\n        if (!Array.isArray(res) || res.length !== 1) {\n          _this.$message.error('头像上传失败, 请重试');\n\n          return false;\n        }\n\n        return put('/cms/user', {\n          avatar: res[0].path\n        }).then(function (putRes) {\n          if (putRes.code < window.MAX_SUCCESS_CODE) {\n            _this.$message({\n              type: 'success',\n              message: '更新头像成功'\n            });\n\n            _this.switchStatus(); // 触发重新获取用户信息\n\n\n            return User.getInformation();\n          }\n\n          return Promise.reject(new Error('更新头像失败'));\n        }).then(function (infoRes) {\n          // eslint-disable-line\n          // 尝试获取当前用户信息\n          var user = infoRes;\n\n          _this.setUserAndState(user);\n        });\n      });\n    },\n    switchStatus: function switchStatus() {\n      this.$emit('switchCropVisible', false);\n    }\n  })\n};","map":{"version":3,"sources":["/Users/zhahn/Desktop/未命名文件夹/lin-cms-vue/src/component/layout/avatar.vue"],"names":[],"mappings":";;AAuCA,OAAO,IAAP,MAAiB,gBAAjB;AACA,SAAS,UAAT,QAA2B,MAA3B;AACA,SAAS,IAAT,EAAe,GAAf,QAA0B,kBAA1B;AACA,OAAO,iBAAP,IAA4B,OAA5B,QAA2C,qBAA3C;AAEA,eAAe;AACb,EAAA,UAAU,EAAE;AAAE,IAAA,iBAAgB,EAAhB;AAAF,GADC;AAEb,EAAA,KAAK,EAAE;AACL,IAAA,aAAa,EAAE;AACb,MAAA,IAAI,EAAE;AADO,KADV;AAIL,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE,OADK;AAEX,MAAA,OAAO,EAAE;AAFE;AAJR,GAFM;AAWb,EAAA,KAAK,EAAE,CAAC,mBAAD,CAXM;AAYb,EAAA,OAAO,kCACF,UAAU,CAAC,CAAC,iBAAD,CAAD,CADR;AAEL,IAAA,UAFK,wBAEQ;AAAA;;AACX;AACA,UAAM,IAAG,GAAI,OAAO,CAAC,OAAR,EAAb,CAFW,CAGX;;AACA,UAAM,IAAG,GAAI,IAAI,IAAJ,CAAS,CAAC,IAAD,CAAT,EAAiB,YAAjB,EAA+B;AAAE,QAAA,IAAI,EAAE;AAAR,OAA/B,CAAb;AAEA,aAAO,IAAI,CAAC,WAAD,EAAc;AACvB,QAAA,IAAI,EAAJ;AADuB,OAAd,CAAJ,CAEJ,IAFI,CAEC,UAAA,GAAE,EAAK;AACb;AACA,YAAI,CAAC,KAAK,CAAC,OAAN,CAAc,GAAd,CAAD,IAAuB,GAAG,CAAC,MAAJ,KAAe,CAA1C,EAA6C;AAC3C,UAAA,KAAI,CAAC,QAAL,CAAc,KAAd,CAAoB,aAApB;;AACA,iBAAO,KAAP;AACF;;AACA,eAAO,GAAG,CAAC,WAAD,EAAc;AACtB,UAAA,MAAM,EAAE,GAAG,CAAC,CAAD,CAAH,CAAO;AADO,SAAd,CAAH,CAGJ,IAHI,CAGC,UAAA,MAAK,EAAK;AACd,cAAI,MAAM,CAAC,IAAP,GAAc,MAAM,CAAC,gBAAzB,EAA2C;AACzC,YAAA,KAAI,CAAC,QAAL,CAAc;AACZ,cAAA,IAAI,EAAE,SADM;AAEZ,cAAA,OAAO,EAAE;AAFG,aAAd;;AAIA,YAAA,KAAI,CAAC,YAAL,GALyC,CAMzC;;;AACA,mBAAO,IAAI,CAAC,cAAL,EAAP;AACF;;AACA,iBAAO,OAAO,CAAC,MAAR,CAAe,IAAI,KAAJ,CAAU,QAAV,CAAf,CAAP;AACD,SAdI,EAeJ,IAfI,CAeC,UAAA,OAAM,EAAK;AACf;AACA;AACA,cAAM,IAAG,GAAI,OAAb;;AACA,UAAA,KAAI,CAAC,eAAL,CAAqB,IAArB;AACD,SApBI,CAAP;AAqBD,OA7BM,CAAP;AA8BD,KAtCI;AAuCL,IAAA,YAvCK,0BAuCU;AACb,WAAK,KAAL,CAAW,mBAAX,EAAgC,KAAhC;AACD;AAzCI;AAZM,CAAf","sourcesContent":["<template>\n  <el-dialog\n    center\n    title=\"裁剪\"\n    width=\"300px\"\n    :append-to-body=\"true\"\n    :close-on-click-modal=\"false\"\n    :model-value=\"cropVisible\"\n    custom-class=\"croppa-dialog\"\n  >\n    <div style=\"text-align: center;\">\n      <div class=\"avatar-croppa-container\">\n        <vue-picture-cropper\n          :boxStyle=\"{\n            width: '100%',\n            height: '100%',\n            margin: 'auto',\n            backgroundColor: '#f8f8f8',\n          }\"\n          :img=\"originalImage\"\n          :options=\"{\n            viewMode: 1, // 限制裁剪框不超过画布的大小\n            aspectRatio: 1, // 头像使用长宽比为 1 裁剪\n          }\"\n        />\n      </div>\n      <div style=\"margin-top: 1em;\">通过鼠标滚轮调节头像大小</div>\n    </div>\n\n    <template #footer>\n      <div class=\"dialog-footer\">\n        <el-button @click=\"switchStatus\" size=\"small\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleCrop\" size=\"small\">确 定</el-button>\n      </div>\n    </template>\n  </el-dialog>\n</template>\n\n<script>\nimport User from 'lin/model/user'\nimport { mapActions } from 'vuex'\nimport { post, put } from 'lin/plugin/axios'\nimport VuePictureCropper, { cropper } from 'vue-picture-cropper'\n\nexport default {\n  components: { VuePictureCropper },\n  props: {\n    originalImage: {\n      type: String,\n    },\n    cropVisible: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['switchCropVisible'],\n  methods: {\n    ...mapActions(['setUserAndState']),\n    handleCrop() {\n      // 获取裁剪数据\n      const blob = cropper.getBlob()\n      // 构造为文件对象\n      const file = new File([blob], 'avatar.jpg', { type: 'image/jpeg' })\n\n      return post('/cms/file', {\n        file,\n      }).then(res => {\n        // 清空输入框\n        if (!Array.isArray(res) || res.length !== 1) {\n          this.$message.error('头像上传失败, 请重试')\n          return false\n        }\n        return put('/cms/user', {\n          avatar: res[0].path,\n        })\n          .then(putRes => {\n            if (putRes.code < window.MAX_SUCCESS_CODE) {\n              this.$message({\n                type: 'success',\n                message: '更新头像成功',\n              })\n              this.switchStatus()\n              // 触发重新获取用户信息\n              return User.getInformation()\n            }\n            return Promise.reject(new Error('更新头像失败'))\n          })\n          .then(infoRes => {\n            // eslint-disable-line\n            // 尝试获取当前用户信息\n            const user = infoRes\n            this.setUserAndState(user)\n          })\n      })\n    },\n    switchStatus() {\n      this.$emit('switchCropVisible', false)\n    },\n  },\n}\n</script>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}