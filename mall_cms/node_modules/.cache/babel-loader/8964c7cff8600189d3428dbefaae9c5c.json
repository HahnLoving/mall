{"ast":null,"code":"import _classCallCheck from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport { movieList } from '../simulation/movie';\n\nvar Movie = /*#__PURE__*/function () {\n  function Movie() {\n    _classCallCheck(this, Movie);\n  }\n\n  _createClass(Movie, [{\n    key: \"getTop250\",\n    value: function getTop250() {\n      var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n      var arr = [];\n      var tempList = movieList.slice();\n      var currentList = tempList.splice(start, count);\n      currentList.forEach(function (element, index) {\n        var tempCasts = [];\n        var tempDirectors = [];\n        element.casts.forEach(function (el) {\n          tempCasts.push(el.name);\n        });\n        element.directors.forEach(function (el) {\n          tempDirectors.push(el.name);\n        });\n        arr.push({\n          title: element.title,\n          originalTitle: element.original_title,\n          year: element.year,\n          rating: element.rating.average,\n          casts: tempCasts.join('/'),\n          directors: tempDirectors.join('/'),\n          genres: element.genres.join('/'),\n          rank: index + 1 + start,\n          sorting: 50,\n          recommend: 0,\n          remark: '这是一部不错的电影',\n          editFlag: false,\n          thumb: element.thumb ? element.thumb : 'https://consumerminiaclprd01.blob.core.chinacloudapi.cn/miniappbackground/sfgmember/lin/270-400.png'\n        });\n      });\n      return arr;\n    }\n  }, {\n    key: \"getDataByQuery\",\n    value: function getDataByQuery() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var arr = [];\n\n      for (var index = 0; index < movieList.length; index++) {\n        var element = movieList[index];\n\n        if (element.title.match(query)) {\n          (function () {\n            var tempCasts = [];\n            var tempDirectors = [];\n            element.casts.forEach(function (el) {\n              tempCasts.push(el.name);\n            });\n            element.directors.forEach(function (el) {\n              tempDirectors.push(el.name);\n            });\n            arr.push({\n              title: element.title,\n              originalTitle: element.original_title,\n              year: element.year,\n              rating: element.rating.average,\n              casts: tempCasts.join('/'),\n              directors: tempDirectors.join('/'),\n              genres: element.genres.join('/'),\n              rank: index + 1,\n              sorting: 50,\n              recommend: 0,\n              remark: '这是一部不错的电影',\n              editFlag: false,\n              thumb: element.thumb ? element.thumb : 'https://consumerminiaclprd01.blob.core.chinacloudapi.cn/miniappbackground/sfgmember/lin/270-400.png'\n            });\n          })();\n        }\n      }\n\n      return arr;\n    }\n  }]);\n\n  return Movie;\n}();\n\nexport default new Movie();","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/plugin/lin-cms-ui/model/movie.js"],"names":["movieList","Movie","start","count","arr","tempList","slice","currentList","splice","forEach","element","index","tempCasts","tempDirectors","casts","el","push","name","directors","title","originalTitle","original_title","year","rating","average","join","genres","rank","sorting","recommend","remark","editFlag","thumb","query","length","match"],"mappings":"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","sourcesContent":["import { movieList } from '../simulation/movie'\n\nclass Movie {\n  getTop250(start = 0, count = 20) {\n    const arr = []\n    const tempList = movieList.slice()\n    const currentList = tempList.splice(start, count)\n    currentList.forEach((element, index) => {\n      const tempCasts = []\n      const tempDirectors = []\n      element.casts.forEach(el => {\n        tempCasts.push(el.name)\n      })\n      element.directors.forEach(el => {\n        tempDirectors.push(el.name)\n      })\n\n      arr.push({\n        title: element.title,\n        originalTitle: element.original_title,\n        year: element.year,\n        rating: element.rating.average,\n        casts: tempCasts.join('/'),\n        directors: tempDirectors.join('/'),\n        genres: element.genres.join('/'),\n        rank: index + 1 + start,\n        sorting: 50,\n        recommend: 0,\n        remark: '这是一部不错的电影',\n        editFlag: false,\n        thumb: element.thumb\n          ? element.thumb\n          : 'https://consumerminiaclprd01.blob.core.chinacloudapi.cn/miniappbackground/sfgmember/lin/270-400.png',\n      })\n    })\n\n    return arr\n  }\n\n  getDataByQuery(query = '') {\n    const arr = []\n    for (let index = 0; index < movieList.length; index++) {\n      const element = movieList[index]\n\n      if (element.title.match(query)) {\n        const tempCasts = []\n        const tempDirectors = []\n        element.casts.forEach(el => {\n          tempCasts.push(el.name)\n        })\n        element.directors.forEach(el => {\n          tempDirectors.push(el.name)\n        })\n\n        arr.push({\n          title: element.title,\n          originalTitle: element.original_title,\n          year: element.year,\n          rating: element.rating.average,\n          casts: tempCasts.join('/'),\n          directors: tempDirectors.join('/'),\n          genres: element.genres.join('/'),\n          rank: index + 1,\n          sorting: 50,\n          recommend: 0,\n          remark: '这是一部不错的电影',\n          editFlag: false,\n          thumb: element.thumb\n            ? element.thumb\n            : 'https://consumerminiaclprd01.blob.core.chinacloudapi.cn/miniappbackground/sfgmember/lin/270-400.png',\n        })\n      }\n    }\n\n    return arr\n  }\n}\n\nexport default new Movie()\n"]},"metadata":{},"sourceType":"module"}