{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { reactive, ref, onMounted } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport bookModel from '@/model/book';\nexport default {\n  props: {\n    editBookId: {\n      type: Number,\n      default: null\n    }\n  },\n  setup: function setup(props, context) {\n    var form = ref(null);\n    var loading = ref(false);\n    var book = reactive({\n      title: '',\n      author: '',\n      summary: '',\n      image: ''\n    });\n\n    var listAssign = function listAssign(a, b) {\n      return Object.keys(a).forEach(function (key) {\n        a[key] = b[key] || a[key];\n      });\n    };\n    /**\n     * 表单规则验证\n     */\n\n\n    var _getRules = getRules(),\n        rules = _getRules.rules;\n\n    onMounted(function () {\n      if (props.editBookId) {\n        getBook();\n      }\n    });\n\n    var getBook = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                loading.value = true;\n                _context.next = 3;\n                return bookModel.getBook(props.editBookId);\n\n              case 3:\n                res = _context.sent;\n                listAssign(book, res);\n                loading.value = false;\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getBook() {\n        return _ref.apply(this, arguments);\n      };\n    }(); // 重置表单\n\n\n    var resetForm = function resetForm() {\n      form.value.resetFields();\n    };\n\n    var submitForm = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(formName) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                form.value.validate( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(valid) {\n                    var res;\n                    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            if (!valid) {\n                              _context2.next = 16;\n                              break;\n                            }\n\n                            res = {};\n\n                            if (!props.editBookId) {\n                              _context2.next = 9;\n                              break;\n                            }\n\n                            _context2.next = 5;\n                            return bookModel.editBook(props.editBookId, book);\n\n                          case 5:\n                            res = _context2.sent;\n                            context.emit('editClose');\n                            _context2.next = 13;\n                            break;\n\n                          case 9:\n                            _context2.next = 11;\n                            return bookModel.createBook(book);\n\n                          case 11:\n                            res = _context2.sent;\n                            resetForm(formName);\n\n                          case 13:\n                            if (res.code < window.MAX_SUCCESS_CODE) {\n                              ElMessage.success(\"\".concat(res.message));\n                            }\n\n                            _context2.next = 18;\n                            break;\n\n                          case 16:\n                            console.error('error submit!!');\n                            ElMessage.error('请将信息填写完整');\n\n                          case 18:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function submitForm(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var back = function back() {\n      context.emit('editClose');\n    };\n\n    return {\n      back: back,\n      book: book,\n      form: form,\n      rules: rules,\n      resetForm: resetForm,\n      submitForm: submitForm\n    };\n  }\n};\n/**\n * 表单验证规则\n */\n\nfunction getRules() {\n  /**\n   * 验证回调函数\n   */\n  var checkInfo = function checkInfo(rule, value, callback) {\n    if (!value) {\n      callback(new Error('信息不能为空'));\n    }\n\n    callback();\n  };\n\n  var rules = {\n    title: [{\n      validator: checkInfo,\n      trigger: 'blur',\n      required: true\n    }],\n    author: [{\n      validator: checkInfo,\n      trigger: 'blur',\n      required: true\n    }],\n    summary: [{\n      validator: checkInfo,\n      trigger: 'blur',\n      required: true\n    }],\n    image: [{\n      validator: checkInfo,\n      trigger: 'blur',\n      required: true\n    }]\n  };\n  return {\n    rules: rules\n  };\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/view/book/book.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\" v-if=\"!editBookId\">新建图书{{ editBookId }}</div>\n    <div class=\"title\" v-else>\n      <span>修改图书</span> <span class=\"back\" @click=\"back\"> <i class=\"iconfont icon-fanhui\"></i> 返回 </span>\n    </div>\n\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"book\" status-icon ref=\"form\" label-width=\"100px\" @submit.prevent :rules=\"rules\">\n            <el-form-item label=\"书名\" prop=\"title\">\n              <el-input v-model=\"book.title\" placeholder=\"请填写书名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"作者\" prop=\"author\">\n              <el-input v-model=\"book.author\" placeholder=\"请填写作者\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"封面\" prop=\"image\">\n              <el-input v-model=\"book.image\" placeholder=\"请填写封面地址\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"简介\" prop=\"summary\">\n              <el-input\n                type=\"textarea\"\n                :autosize=\"{ minRows: 4, maxRows: 8 }\"\n                placeholder=\"请输入简介\"\n                v-model=\"book.summary\"\n              >\n              </el-input>\n            </el-form-item>\n\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n              <el-button @click=\"resetForm\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive, ref, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport bookModel from '@/model/book'\n\nexport default {\n  props: {\n    editBookId: {\n      type: Number,\n      default: null,\n    },\n  },\n  setup(props, context) {\n    const form = ref(null)\n    const loading = ref(false)\n    const book = reactive({ title: '', author: '', summary: '', image: '' })\n\n    const listAssign = (a, b) => Object.keys(a).forEach(key => {\n      a[key] = b[key] || a[key]\n    })\n\n    /**\n     * 表单规则验证\n     */\n    const { rules } = getRules()\n\n    onMounted(() => {\n      if (props.editBookId) {\n        getBook()\n      }\n    })\n\n    const getBook = async () => {\n      loading.value = true\n      const res = await bookModel.getBook(props.editBookId)\n      listAssign(book, res)\n      loading.value = false\n    }\n\n    // 重置表单\n    const resetForm = () => {\n      form.value.resetFields()\n    }\n\n    const submitForm = async formName => {\n      form.value.validate(async valid => {\n        if (valid) {\n          let res = {}\n          if (props.editBookId) {\n            res = await bookModel.editBook(props.editBookId, book)\n            context.emit('editClose')\n          } else {\n            res = await bookModel.createBook(book)\n            resetForm(formName)\n          }\n          if (res.code < window.MAX_SUCCESS_CODE) {\n            ElMessage.success(`${res.message}`)\n          }\n        } else {\n          console.error('error submit!!')\n          ElMessage.error('请将信息填写完整')\n        }\n      })\n    }\n\n    const back = () => {\n      context.emit('editClose')\n    }\n\n    return {\n      back,\n      book,\n      form,\n      rules,\n      resetForm,\n      submitForm,\n    }\n  },\n}\n\n/**\n * 表单验证规则\n */\nfunction getRules() {\n  /**\n   * 验证回调函数\n   */\n  const checkInfo = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('信息不能为空'))\n    }\n    callback()\n  }\n  const rules = {\n    title: [{ validator: checkInfo, trigger: 'blur', required: true }],\n    author: [{ validator: checkInfo, trigger: 'blur', required: true }],\n    summary: [{ validator: checkInfo, trigger: 'blur', required: true }],\n    image: [{ validator: checkInfo, trigger: 'blur', required: true }],\n  }\n  return { rules }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n    border-bottom: 1px solid #dae1ec;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}