{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_editor = _resolveComponent(\"editor\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_editor, {\n    id: \"tinymceEditor\",\n    init: $data.tinymceInit,\n    modelValue: $data.content,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.content = $event;\n    }),\n    key: $data.tinymceFlag\n  }, null, 8\n  /* PROPS */\n  , [\"init\", \"modelValue\"])]);\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/component/base/tinymce/index.vue"],"names":[],"mappings":";;;;uBACE,mBAAA,CAEM,KAFN,EAEM,IAFN,EAEM,CADJ,YAAA,CAA6F,iBAA7F,EAA6F;AAArF,IAAA,EAAE,EAAC,eAAkF;AAAjE,IAAA,IAAI,EAAE,KAAA,CAAA,WAA2D;gBAArC,KAAA,CAAA,OAAqC;;aAArC,KAAA,CAAA,O,GAAO,M;MAA8B;AAA3B,IAAA,GAAG,EAAE,KAAA,CAAA;AAAsB,GAA7F,E,IAAA,E;;AAAA,I,sBAAA,CACI,CAFN,C","sourcesContent":["<template>\n  <div>\n    <editor id=\"tinymceEditor\" :init=\"tinymceInit\" v-model=\"content\" :key=\"tinymceFlag\"></editor>\n  </div>\n</template>\n<script>\nimport Editor from '@tinymce/tinymce-vue'\nimport { post } from '@/lin/plugin/axios'\n\nexport default {\n  name: 'TinymceEditor',\n  props: {\n    defaultContent: {\n      type: String,\n      default: '',\n    },\n    height: {\n      type: Number,\n      default: 500,\n    },\n    width: {\n      type: Number,\n      default: undefined,\n    },\n    showMenubar: {\n      type: Boolean,\n      default: true,\n    },\n    toolbar: {\n      type: String,\n      default: ` undo redo\n      | formatselect\n      | bold italic strikethrough forecolor backcolor formatpainter\n      | link image | alignleft aligncenter alignright alignjustify\n      | numlist bullist outdent indent\n      | removeformat\n      | preview fullscreen code`,\n    },\n  },\n  components: {\n    Editor,\n  },\n  data() {\n    return {\n      content: '',\n      tinymceFlag: 1,\n      tinymceInit: {},\n    }\n  },\n  created() {\n    this.tinymceInit = {\n      language: 'zh_CN',\n      height: this.height,\n      branding: true, // 去水印\n      statusbar: false, // 隐藏编辑器底部的状态栏\n      elementpath: false, // 禁用编辑器底部的状态栏\n      toolbar: this.toolbar,\n      paste_data_images: true, // 允许粘贴图像\n      browser_spellcheck: true, // 拼写检查\n      menubar: this.showMenubar, // 隐藏最上方menu\n      plugins: `print fullpage searchreplace autolink directionality visualblocks\n        visualchars template codesample charmap hr pagebreak nonbreaking anchor toc insertdatetime\n        wordcount textpattern help advlist table lists paste preview fullscreen image imagetools code link`,\n      async images_upload_handler(blobInfo, success, failure) {\n        const file = new File([blobInfo.blob()], blobInfo.filename(), {\n          type: 'image/*',\n        })\n        post('cms/file', { file })\n          .then(res => {\n            if (res.length && res[0]?.url) {\n              success(res[0].url)\n            }\n          })\n          .catch(err => failure(err))\n      },\n    }\n  },\n  mounted() {\n    if (this.defaultContent) {\n      this.content = this.defaultContent\n    }\n  },\n  watch: {\n    content: {\n      handler() {\n        this.$emit('change', this.content)\n      },\n    },\n    defaultContent: {\n      handler() {\n        this.content = this.defaultContent\n      },\n      immediate: true,\n    },\n  },\n  activated() {\n    this.tinymceFlag++\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.tox-notification {\n  display: none !important;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}