{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-568c0a95\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"title\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"iconfont icon-fanhui\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 返回 \");\n\nvar _hoisted_4 = [_hoisted_2, _hoisted_3];\nvar _hoisted_5 = {\n  class: \"container\"\n};\nvar _hoisted_6 = {\n  class: \"wrap\"\n};\nvar _hoisted_7 = {\n  class: \"id\"\n};\nvar _hoisted_8 = {\n  class: \"name\"\n};\nvar _hoisted_9 = {\n  class: \"id\"\n};\nvar _hoisted_10 = {\n  class: \"name\"\n};\nvar _hoisted_11 = {\n  class: \"id\"\n};\nvar _hoisted_12 = {\n  class: \"name\"\n};\n\nvar _hoisted_13 = /*#__PURE__*/_createTextVNode(\"保 存\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_divider = _resolveComponent(\"el-divider\");\n\n  var _component_sticky_top = _resolveComponent(\"sticky-top\");\n\n  var _component_el_input = _resolveComponent(\"el-input\");\n\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  var _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n\n  var _component_upload_imgs = _resolveComponent(\"upload-imgs\");\n\n  var _component_el_button = _resolveComponent(\"el-button\");\n\n  var _component_el_form = _resolveComponent(\"el-form\");\n\n  var _component_el_col = _resolveComponent(\"el-col\");\n\n  var _component_el_row = _resolveComponent(\"el-row\");\n\n  var _directive_permission = _resolveDirective(\"permission\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_sticky_top, null, {\n    default: _withCtx(function () {\n      return [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"span\", null, _toDisplayString($props.isCreate ? '添加BannerItem' : '修改BannerItem'), 1\n      /* TEXT */\n      ), _createElementVNode(\"span\", {\n        class: \"back\",\n        onClick: _cache[0] || (_cache[0] = function () {\n          return $options.back && $options.back.apply($options, arguments);\n        })\n      }, _hoisted_4), _createVNode(_component_el_divider)])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_el_row, null, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_el_col, {\n        lg: 16,\n        md: 20,\n        sm: 24,\n        xs: 24\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_form, {\n            model: $data.form,\n            \"status-icon\": \"\",\n            ref: \"form\",\n            \"label-width\": \"100px\",\n            onSubmit: _cache[6] || (_cache[6] = _withModifiers(function () {}, [\"prevent\"]))\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(_component_el_form_item, {\n                label: \"名称\",\n                prop: \"name\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(_component_el_input, {\n                    size: \"medium\",\n                    modelValue: $data.form.name,\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                      return $data.form.name = $event;\n                    }),\n                    placeholder: \"请填写名称\"\n                  }, null, 8\n                  /* PROPS */\n                  , [\"modelValue\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              }), _createCommentVNode(\" <el-form-item label=\\\"关键字\\\" prop=\\\"keyword\\\">\\n                <el-input size=\\\"medium\\\" v-model=\\\"form.keyword\\\" placeholder=\\\"请填写关键字\\\"></el-input>\\n              </el-form-item> \"), _createVNode(_component_el_form_item, {\n                label: \"类型\",\n                prop: \"type\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(_component_el_autocomplete, {\n                    onFocus: _ctx.loadSuggestions,\n                    \"popper-class\": \"my-autocomplete\",\n                    class: \"inline-input\",\n                    modelValue: $data.form.type_name,\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                      return $data.form.type_name = $event;\n                    }),\n                    \"fetch-suggestions\": _ctx.querySearch,\n                    placeholder: \"请填写所属分类\",\n                    onSelect: _ctx.handleSelect\n                  }, {\n                    default: _withCtx(function (_ref) {\n                      var item = _ref.item;\n                      return [_createElementVNode(\"span\", _hoisted_7, _toDisplayString(item.id), 1\n                      /* TEXT */\n                      ), _createElementVNode(\"span\", _hoisted_8, _toDisplayString(item.name), 1\n                      /* TEXT */\n                      )];\n                    }),\n                    _: 1\n                    /* STABLE */\n\n                  }, 8\n                  /* PROPS */\n                  , [\"onFocus\", \"modelValue\", \"fetch-suggestions\", \"onSelect\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              }), _createVNode(_component_el_form_item, {\n                label: \"主题\",\n                prop: \"theme_name\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(_component_el_autocomplete, {\n                    onFocus: _ctx.loadSuggestions,\n                    \"popper-class\": \"my-autocomplete\",\n                    class: \"inline-input\",\n                    modelValue: $data.form.type_name,\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                      return $data.form.type_name = $event;\n                    }),\n                    \"fetch-suggestions\": _ctx.querySearch,\n                    placeholder: \"请填写所属分类\",\n                    onSelect: _ctx.handleSelect\n                  }, {\n                    default: _withCtx(function (_ref2) {\n                      var item = _ref2.item;\n                      return [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.id), 1\n                      /* TEXT */\n                      ), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(item.name), 1\n                      /* TEXT */\n                      )];\n                    }),\n                    _: 1\n                    /* STABLE */\n\n                  }, 8\n                  /* PROPS */\n                  , [\"onFocus\", \"modelValue\", \"fetch-suggestions\", \"onSelect\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              }), _createVNode(_component_el_form_item, {\n                label: \"Spu\",\n                prop: \"spu_name\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(_component_el_autocomplete, {\n                    onFocus: $options.loadSpuSuggestions,\n                    \"popper-class\": \"my-autocomplete\",\n                    class: \"inline-input\",\n                    modelValue: $data.form.theme_name,\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n                      return $data.form.theme_name = $event;\n                    }),\n                    \"fetch-suggestions\": $options.querySpuSearch,\n                    placeholder: \"请填写Spu\",\n                    onSelect: $options.handleSpuSelect\n                  }, {\n                    default: _withCtx(function (_ref3) {\n                      var item = _ref3.item;\n                      return [_createElementVNode(\"span\", _hoisted_11, _toDisplayString(item.id), 1\n                      /* TEXT */\n                      ), _createElementVNode(\"span\", _hoisted_12, _toDisplayString(item.title), 1\n                      /* TEXT */\n                      )];\n                    }),\n                    _: 1\n                    /* STABLE */\n\n                  }, 8\n                  /* PROPS */\n                  , [\"onFocus\", \"modelValue\", \"fetch-suggestions\", \"onSelect\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              }), _createCommentVNode(\" <el-form-item label=\\\"类型\\\" prop=\\\"type\\\">\\n                <el-input size=\\\"medium\\\" v-model=\\\"form.type\\\" placeholder=\\\"请填写类型\\\"></el-input>\\n              </el-form-item> \"), _createVNode(_component_el_form_item, {\n                label: \"图片\",\n                prop: \"img\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createVNode(_component_upload_imgs, {\n                    \"max-num\": $data.maxNum,\n                    ref: \"uploadEle\",\n                    value: $data.initData\n                  }, null, 8\n                  /* PROPS */\n                  , [\"max-num\", \"value\"])];\n                }),\n                _: 1\n                /* STABLE */\n\n              }), _createVNode(_component_el_form_item, {\n                class: \"submit\"\n              }, {\n                default: _withCtx(function () {\n                  return [_withDirectives(_createVNode(_component_el_button, {\n                    type: \"primary\",\n                    onClick: _cache[5] || (_cache[5] = function ($event) {\n                      return $options.submitForm('form');\n                    })\n                  }, {\n                    default: _withCtx(function () {\n                      return [_hoisted_13];\n                    }),\n                    _: 1\n                    /* STABLE */\n\n                  }, 512\n                  /* NEED_PATCH */\n                  ), [[_directive_permission, {\n                    permission: ['创建Banner item', '更新Banner item'],\n                    type: 'disabled'\n                  }]]), _createCommentVNode(\" <el-button @click=\\\"resetForm('form')\\\">重 置</el-button> \")];\n                }),\n                _: 1\n                /* STABLE */\n\n              })];\n            }),\n            _: 1\n            /* STABLE */\n\n          }, 8\n          /* PROPS */\n          , [\"model\"])];\n        }),\n        _: 1\n        /* STABLE */\n\n      })];\n    }),\n    _: 1\n    /* STABLE */\n\n  })])])]);\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/view/banner/banner-item-edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <sticky-top>\n      <div class=\"title\">\n        <span>{{ isCreate ? '添加BannerItem' : '修改BannerItem' }}</span>\n        <span class=\"back\" @click=\"back\"> <i class=\"iconfont icon-fanhui\"></i> 返回 </span>\n        <el-divider></el-divider>\n      </div>\n    </sticky-top>\n    <div class=\"container\">\n      <div class=\"wrap\">\n        <el-row>\n          <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n            <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" @submit.native.prevent>\n              <el-form-item label=\"名称\" prop=\"name\">\n                <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写名称\"></el-input>\n              </el-form-item>\n              <!-- <el-form-item label=\"关键字\" prop=\"keyword\">\n                <el-input size=\"medium\" v-model=\"form.keyword\" placeholder=\"请填写关键字\"></el-input>\n              </el-form-item> -->\n              <el-form-item label=\"类型\" prop=\"type\">\n                <el-autocomplete\n                  @focus=\"loadSuggestions\"\n                  popper-class=\"my-autocomplete\"\n                  class=\"inline-input\"\n                  v-model=\"form.type_name\"\n                  :fetch-suggestions=\"querySearch\"\n                  placeholder=\"请填写所属分类\"\n                  @select=\"handleSelect\"\n                >\n                  <template #default=\"{ item }\">\n                    <span class=\"id\">{{ item.id }}</span>\n                    <span class=\"name\">{{ item.name }}</span>\n                  </template>\n                </el-autocomplete>\n              </el-form-item>\n              <el-form-item label=\"主题\" prop=\"theme_name\">\n                <el-autocomplete\n                  @focus=\"loadSuggestions\"\n                  popper-class=\"my-autocomplete\"\n                  class=\"inline-input\"\n                  v-model=\"form.type_name\"\n                  :fetch-suggestions=\"querySearch\"\n                  placeholder=\"请填写所属分类\"\n                  @select=\"handleSelect\"\n                >\n                  <template #default=\"{ item }\">\n                    <span class=\"id\">{{ item.id }}</span>\n                    <span class=\"name\">{{ item.name }}</span>\n                  </template>\n                </el-autocomplete>\n              </el-form-item>\n              <el-form-item label=\"Spu\" prop=\"spu_name\">\n                <el-autocomplete\n                  @focus=\"loadSpuSuggestions\"\n                  popper-class=\"my-autocomplete\"\n                  class=\"inline-input\"\n                  v-model=\"form.theme_name\"\n                  :fetch-suggestions=\"querySpuSearch\"\n                  placeholder=\"请填写Spu\"\n                  @select=\"handleSpuSelect\"\n                >\n                  <template #default=\"{ item }\">\n                    <span class=\"id\">{{ item.id }}</span>\n                    <span class=\"name\">{{ item.title }}</span>\n                  </template>\n                </el-autocomplete>\n              </el-form-item>\n              <!-- <el-form-item label=\"类型\" prop=\"type\">\n                <el-input size=\"medium\" v-model=\"form.type\" placeholder=\"请填写类型\"></el-input>\n              </el-form-item> -->\n              <el-form-item label=\"图片\" prop=\"img\">\n                <upload-imgs :max-num=\"maxNum\" ref=\"uploadEle\" :value=\"initData\" />\n              </el-form-item>\n              <el-form-item class=\"submit\">\n                <el-button\n                  v-permission=\"{ permission: ['创建Banner item', '更新Banner item'], type: 'disabled' }\"\n                  type=\"primary\"\n                  @click=\"submitForm('form')\"\n                  >保 存</el-button\n                >\n                <!-- <el-button @click=\"resetForm('form')\">重 置</el-button> -->\n              </el-form-item>\n            </el-form>\n          </el-col>\n        </el-row>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BannerItem from '@/model/banner-item'\nimport UploadImgs from '@/component/base/upload-image'\nimport StickyTop from '@/component/base/sticky-top/sticky-top'\nimport Spu from '@/model/spu'\n\nexport default {\n  components: {\n    UploadImgs,\n    StickyTop,\n  },\n  props: {\n    editID: {\n      type: Number,\n    },\n    isCreate: {\n      type: Boolean,\n      default: false,\n    },\n    bannerId: {\n      type: Number,\n      default: null,\n    },\n  },\n  data() {\n    return {\n      spuSuggestions: [],\n      maxNum: 1,\n      form: {\n        img: '',\n        keyword: '',\n        type: null,\n      },\n      rules: {\n        minWidth: 10,\n        minHeight: 10,\n        maxSize: 5,\n      },\n      initData: [],\n    }\n  },\n  async mounted() {\n    if (!this.isCreate) {\n      const res = await BannerItem.getBannerItem(this.editID)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.img,\n        },\n      ]\n      this.form = res\n      if(this.form.type == 0) {\n        this.form.type_name = \"无类型\"\n      }else if(this.form.type == 1) {\n        this.form.type_name = \"Spu\"\n      }else if(this.form.type == 2) {\n        this.form.type_name = \"主题\"\n      }\n    }\n\n    this.loadSpuSuggestions()\n  },\n  methods: {\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.img = val[0].display\n      }\n    },\n    async submitForm() {\n      await this.getValue()\n      const form = { ...this.form }\n      let res\n      if (this.isCreate) {\n        form.banner_id = this.bannerId\n        res = await BannerItem.addBannerItem(form)\n      } else {\n        res = await BannerItem.editBannerItem(this.editID, form)\n      }\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.resetForm('form')\n        this.$emit('editClose')\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    back() {\n      this.$emit('editClose')\n    },\n    // spu\n    querySpuSearch(queryString, cb) {\n      // eslint-disable-next-line\n      const spuSuggestions = this.spuSuggestions\n      const results = queryString ? spuSuggestions.filter(this.createSpuFilter(queryString)) : spuSuggestions\n      cb(results)\n    },\n    createSpuFilter(queryString) {\n      // eslint-disable-next-line\n      return spuSuggestions => {\n        return spuSuggestions.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleSpuSelect(item) {\n      // this.state = item.name\n      this.form.spu_name = item.title\n      this.form.spu_id = item.id\n    },\n    async getSpuValue() {\n      const val = await this.$refs.uploadEle.getSpuValue()\n      if (val && val.length > 0) {\n        this.form.img = val[0].display\n      }\n    },\n    async loadSpuSuggestions() {\n      try {\n        this.spuSuggestions = await Spu.getList()\n        if (this.spuSuggestions.length === 0) {\n          this.$message.error('未找到Spu，请先添加Spu')\n        }\n      } catch (error) {\n        this.$message.error('获取Spu信息失败')\n        console.error(error)\n      }\n      const inlineId = this.getInlineId()\n      // eslint-disable-next-line\n      const hit = this.suggspuSuggestionsestions.filter(val => {\n        return val.id === inlineId\n      })\n      if (hit.length > 0) {\n        this.state = hit[0].name\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}