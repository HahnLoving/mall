{"ast":null,"code":"/**\n * 存储tokens\n * @param {string} accessToken\n * @param {string} refreshToken\n */\nexport function saveTokens(accessToken, refreshToken) {\n  localStorage.setItem('access_token', \"Bearer \".concat(accessToken));\n  localStorage.setItem('refresh_token', \"Bearer \".concat(refreshToken));\n}\n/**\n * 存储access_token\n * @param {string} accessToken\n */\n\nexport function saveAccessToken(accessToken) {\n  localStorage.setItem('access_token', \"Bearer \".concat(accessToken));\n}\n/**\n * 获得某个token\n * @param {string} tokenKey\n */\n\nexport function getToken(tokenKey) {\n  return localStorage.getItem(tokenKey);\n}\n/**\n * 移除token\n */\n\nexport function removeToken() {\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n}","map":{"version":3,"sources":["/Users/zhahn/Desktop/未命名文件夹/lin-cms-vue/src/lin/util/token.js"],"names":["saveTokens","accessToken","refreshToken","localStorage","setItem","saveAccessToken","getToken","tokenKey","getItem","removeToken","removeItem"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAT,CAAoBC,WAApB,EAAiCC,YAAjC,EAA+C;AACpDC,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,mBAA+CH,WAA/C;AACAE,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,mBAAgDF,YAAhD;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASG,eAAT,CAAyBJ,WAAzB,EAAsC;AAC3CE,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,mBAA+CH,WAA/C;AACD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASK,QAAT,CAAkBC,QAAlB,EAA4B;AACjC,SAAOJ,YAAY,CAACK,OAAb,CAAqBD,QAArB,CAAP;AACD;AAED;AACA;AACA;;AACA,OAAO,SAASE,WAAT,GAAuB;AAC5BN,EAAAA,YAAY,CAACO,UAAb,CAAwB,cAAxB;AACAP,EAAAA,YAAY,CAACO,UAAb,CAAwB,eAAxB;AACD","sourcesContent":["/**\n * 存储tokens\n * @param {string} accessToken\n * @param {string} refreshToken\n */\nexport function saveTokens(accessToken, refreshToken) {\n  localStorage.setItem('access_token', `Bearer ${accessToken}`)\n  localStorage.setItem('refresh_token', `Bearer ${refreshToken}`)\n}\n\n/**\n * 存储access_token\n * @param {string} accessToken\n */\nexport function saveAccessToken(accessToken) {\n  localStorage.setItem('access_token', `Bearer ${accessToken}`)\n}\n\n/**\n * 获得某个token\n * @param {string} tokenKey\n */\nexport function getToken(tokenKey) {\n  return localStorage.getItem(tokenKey)\n}\n\n/**\n * 移除token\n */\nexport function removeToken() {\n  localStorage.removeItem('access_token')\n  localStorage.removeItem('refresh_token')\n}\n"]},"metadata":{},"sourceType":"module"}