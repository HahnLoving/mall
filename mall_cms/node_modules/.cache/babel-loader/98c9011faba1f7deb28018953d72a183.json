{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vShow as _vShow, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveDirective as _resolveDirective, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-48cef260\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"container\"\n};\n\nvar _hoisted_2 = /*#__PURE__*/_createTextVNode(\"保 存\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_input = _resolveComponent(\"el-input\");\n\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  var _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n\n  var _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n\n  var _component_el_button = _resolveComponent(\"el-button\");\n\n  var _component_el_form = _resolveComponent(\"el-form\");\n\n  var _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_withDirectives(_createVNode(_component_el_form, {\n    ref: \"form\",\n    \"status-icon\": \"\",\n    rules: $setup.rules,\n    model: $setup.userInfo,\n    \"label-width\": \"100px\",\n    \"label-position\": $props.labelPosition,\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers(function () {}, [\"prevent\"]))\n  }, {\n    default: _withCtx(function () {\n      return [_createVNode(_component_el_form_item, {\n        label: \"用户名\",\n        prop: \"username\"\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            clearable: \"\",\n            modelValue: $setup.userInfo.username,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return $setup.userInfo.username = $event;\n            }),\n            disabled: $setup.isEdited\n          }, null, 8, [\"modelValue\", \"disabled\"])];\n        }),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"邮箱\",\n        prop: \"email\"\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            clearable: \"\",\n            disabled: $setup.isEdited,\n            modelValue: $setup.userInfo.email,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return $setup.userInfo.email = $event;\n            }),\n            \"auto-complete\": \"new-password\"\n          }, null, 8, [\"disabled\", \"modelValue\"])];\n        }),\n        _: 1\n      }), $props.pageType === 'add' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 0,\n        label: \"密码\",\n        prop: \"password\"\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            clearable: \"\",\n            type: \"password\",\n            modelValue: $setup.userInfo.password,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return $setup.userInfo.password = $event;\n            }),\n            \"auto-complete\": \"new-password\"\n          }, null, 8, [\"modelValue\"])];\n        }),\n        _: 1\n      })) : _createCommentVNode(\"\", true), $props.pageType === 'add' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 1,\n        label: \"确认密码\",\n        prop: \"confirmPassword\",\n        \"label-position\": \"top\"\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_input, {\n            clearable: \"\",\n            type: \"password\",\n            autocomplete: \"off\",\n            modelValue: $setup.userInfo.confirmPassword,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n              return $setup.userInfo.confirmPassword = $event;\n            })\n          }, null, 8, [\"modelValue\"])];\n        }),\n        _: 1\n      })) : _createCommentVNode(\"\", true), $props.pageType !== 'password' ? (_openBlock(), _createBlock(_component_el_form_item, {\n        key: 2,\n        label: \"选择分组\"\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_checkbox_group, {\n            modelValue: $setup.userInfo.groupIds,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n              return $setup.userInfo.groupIds = $event;\n            }),\n            size: \"small\",\n            style: {\n              \"transform\": \"translateY(5px)\"\n            }\n          }, {\n            default: _withCtx(function () {\n              return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.allGroups, function (item) {\n                return _openBlock(), _createBlock(_component_el_checkbox, {\n                  key: item.id,\n                  label: item.id,\n                  border: \"\",\n                  style: {\n                    \"margin-left\": \"0\"\n                  }\n                }, {\n                  default: _withCtx(function () {\n                    return [_createTextVNode(_toDisplayString(item.name), 1)];\n                  }),\n                  _: 2\n                }, 1032, [\"label\"]);\n              }), 128))];\n            }),\n            _: 1\n          }, 8, [\"modelValue\"])];\n        }),\n        _: 1\n      })) : _createCommentVNode(\"\", true), _withDirectives(_createVNode(_component_el_form_item, {\n        class: \"submit\"\n      }, {\n        default: _withCtx(function () {\n          return [_createVNode(_component_el_button, {\n            type: \"primary\",\n            onClick: $setup.submitForm\n          }, {\n            default: _withCtx(function () {\n              return [_hoisted_2];\n            }),\n            _: 1\n          }, 8, [\"onClick\"])];\n        }),\n        _: 1\n      }, 512), [[_vShow, $props.submit]])];\n    }),\n    _: 1\n  }, 8, [\"rules\", \"model\", \"label-position\"]), [[_directive_loading, $setup.loading]])]);\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/src/view/admin/user/user-info.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <el-form\n      ref=\"form\"\n      status-icon\n      :rules=\"rules\"\n      :model=\"userInfo\"\n      label-width=\"100px\"\n      v-loading=\"loading\"\n      :label-position=\"labelPosition\"\n      @submit.prevent\n    >\n      <el-form-item label=\"用户名\" prop=\"username\">\n        <el-input clearable v-model=\"userInfo.username\" :disabled=\"isEdited\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input clearable :disabled=\"isEdited\" v-model=\"userInfo.email\" auto-complete=\"new-password\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"pageType === 'add'\" label=\"密码\" prop=\"password\">\n        <el-input clearable type=\"password\" v-model=\"userInfo.password\" auto-complete=\"new-password\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"pageType === 'add'\" label=\"确认密码\" prop=\"confirmPassword\" label-position=\"top\">\n        <el-input clearable type=\"password\" autocomplete=\"off\" v-model=\"userInfo.confirmPassword\"></el-input>\n      </el-form-item>\n      <el-form-item v-if=\"pageType !== 'password'\" label=\"选择分组\">\n        <el-checkbox-group v-model=\"userInfo.groupIds\" size=\"small\" style=\"transform: translateY(5px)\">\n          <el-checkbox v-for=\"item in allGroups\" :key=\"item.id\" :label=\"item.id\" border style=\"margin-left: 0\">{{\n            item.name\n          }}</el-checkbox>\n        </el-checkbox-group>\n      </el-form-item>\n      <el-form-item v-show=\"submit\" class=\"submit\">\n        <el-button type=\"primary\" @click=\"submitForm\">保 存</el-button>\n        <!-- <el-button @click=\"resetForm\">重 置</el-button> -->\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport AdminModel from '@/lin/model/admin'\nimport UserModel from '@/lin/model/user'\n\nexport default {\n  props: {\n    submit: {\n      // 表单是否显示功能按钮\n      type: Boolean,\n      default: true,\n    },\n    id: {\n      // 用户id\n      type: Number,\n      default: undefined,\n    },\n    allGroups: {\n      // 所有分组\n      type: Array,\n      default: () => {},\n    },\n    labelPosition: {\n      // 表单label位置\n      type: String,\n      default: 'right',\n    },\n    info: {\n      // 用户信息\n      type: Object,\n      default: () => {},\n    },\n    pageType: {\n      type: String,\n      default: 'add', // 区分编辑页面/添加页面\n    },\n  },\n  setup(props, ctx) {\n    const form = ref(null)\n    const loading = ref(false)\n    const isEdited = ref(false) // 能否编辑\n\n    const userInfo = reactive({\n      email: '',\n      username: '',\n      password: '',\n      groupIds: [],\n      confirmPassword: '',\n    })\n\n    /**\n     * 表单规则验证\n     */\n    const { rules } = getRules(userInfo)\n\n    /**\n     * 新增或更新管理员信息\n     */\n    const submitForm = () => {\n      form.value.validate(async valid => {\n        if (valid) {\n          let res = {}\n          // 1. 新增用户\n          if (props.pageType === 'add') {\n            try {\n              loading.value = true\n              res = await UserModel.register(userInfo)\n              if (res.code < window.MAX_SUCCESS_CODE) {\n                loading.value = false\n                ElMessage.success(`${res.message}`)\n                resetForm()\n              }\n            } catch (e) {\n              loading.value = false\n              ElMessage.error('新增用户失败')\n            }\n          } else {\n            // 2. 更新用户信息\n            const originalGroupIds = props.info.groups.map(item => item.id)\n            if (userInfo.groupIds.sort().toString() === originalGroupIds.toString()) {\n              ctx.emit('handleInfoResult', false)\n              return\n            }\n\n            try {\n              loading.value = true\n              res = await AdminModel.updateOneUser(userInfo.email, userInfo.groupIds, props.id)\n            } catch (e) {\n              loading.value = false\n            }\n            if (res.code < window.MAX_SUCCESS_CODE) {\n              loading.value = false\n              ElMessage.success(`${res.message}`)\n              ctx.emit('handleInfoResult', true)\n            } else {\n              loading.value = false\n            }\n          }\n        } else {\n          ElMessage.error('请填写正确的信息')\n        }\n      })\n    }\n\n    /**\n     * reset表单内容\n     */\n    const resetForm = () => {\n      if (props.pageType === 'edit') {\n        setInitialUserInfo()\n      } else {\n        userInfo.groupIds = []\n        form.value.resetFields()\n      }\n    }\n\n    /**\n     * 编辑页面设置初始值\n     */\n    const setInitialUserInfo = () => {\n      userInfo.email = props.info.email\n      userInfo.username = props.info.username\n      userInfo.groupIds = props.info.groups.map(item => item.id)\n    }\n\n    /**\n     * 通过是否接收到数据来判断当前页面是添加数据还是编辑数据\n     */\n    onMounted(() => {\n      if (props.pageType === 'edit') {\n        setInitialUserInfo()\n        isEdited.value = true\n      }\n    })\n    return {\n      form,\n      rules,\n      loading,\n      isEdited,\n      userInfo,\n      resetForm,\n      submitForm,\n    }\n  },\n}\n\n/**\n * 表单验证规则\n */\nfunction getRules(userInfo) {\n  /**\n   * 验证回调函数\n   */\n  const checkUserName = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('用户名不能为空'))\n    }\n    callback()\n  }\n  /**\n   * 验证密码\n   */\n  const validatePassword = (rule, value, callback) => {\n    if (value === '') {\n      callback(new Error('请输入密码'))\n    } else if (value.length < 6) {\n      callback(new Error('密码长度不能少于6位数'))\n    } else {\n      callback()\n    }\n  }\n  /**\n   * 再次验证密码\n   */\n  const validatePassword2 = (rule, value, callback) => {\n    if (value === '') {\n      callback(new Error('请再次输入密码'))\n    } else if (value !== userInfo.password) {\n      callback(new Error('两次输入密码不一致!'))\n    } else {\n      callback()\n    }\n  }\n  const rules = {\n    password: [{ validator: validatePassword, trigger: 'blur', required: true }],\n    username: [{ validator: checkUserName, trigger: ['blur', 'change'], required: true }],\n    confirmPassword: [{ validator: validatePassword2, trigger: 'blur', required: true }],\n    email: [{ type: 'email', message: '请输入正确的邮箱地址或者不填', trigger: ['blur', 'change'] }],\n  }\n  return { rules }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  margin-top: 20px;\n  margin-left: -5px;\n  max-width: 800px;\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}