{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport LinSearch from '@/component/base/search/lin-search';\nimport { tableColumn } from './data';\nimport movie from '../../model/movie.js';\nexport default {\n  components: {\n    LinSearch: LinSearch\n  },\n  data: function data() {\n    return {\n      tableData: [],\n      loading: false,\n      Hidden: true,\n      // 默认隐藏自定义排序列\n      searchKeyword: '',\n      // 定制列相关\n      checkList: [],\n      filterTableColumn: [],\n      // 分页相关\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n      currentPage: 1,\n      // 默认获取第一页的数据\n      pageCount: 10,\n      // 每页10条数据\n      total_nums: 180,\n      // 分组内的用户总数\n      // 固定列相关\n      dialogTableVisible: false,\n      fixedLeftList: [],\n      fixedRightList: [],\n      value: '',\n      // 单元格编辑相关\n      editRow: 0,\n      showTooltip: true\n    };\n  },\n  computed: {},\n  created: function created() {\n    var _this = this;\n\n    // 获取数据\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount);\n\n    this.tableColumn = tableColumn; // 操作栏\n\n    this.operate = [{\n      name: '编辑',\n      func: 'handleEdit',\n      type: 'primary'\n    }, {\n      name: '删除',\n      func: 'handleDelete',\n      type: 'danger'\n    }]; // 定制列\n\n    this.tempCheckList = tableColumn.map(function (v) {\n      return v.label;\n    }).slice();\n    this.checkList = tableColumn.map(function (v) {\n      return v.label;\n    });\n    this.filterTableColumn = tableColumn.filter(function (v) {\n      return _this.checkList.indexOf(v.label) > -1;\n    });\n  },\n  methods: {\n    // 获取数据\n    _getTableData: function _getTableData(start, count) {\n      var res = movie.getTop250(start, count);\n      res.map(function (item) {\n        var temp = item;\n        temp.editFlag = false;\n        return '';\n      });\n      this.tableData = _toConsumableArray(res);\n    },\n    rowClick: function rowClick(val) {\n      console.log(val);\n    },\n    // 定制列\n    handleChange: function handleChange() {\n      var _this2 = this;\n\n      this.filterTableColumn = tableColumn.filter(function (v) {\n        return _this2.checkList.indexOf(v.label) > -1;\n      });\n    },\n    showRowOperateModal: function showRowOperateModal() {},\n    // 变更排序\n    handleSort: function handleSort(val, rowData) {\n      console.log('rowData', rowData);\n      this.$message({\n        type: 'success',\n        message: \"\\u6392\\u5E8F\\u5DF2\\u66F4\\u6539\\u4E3A\\uFF1A\".concat(val)\n      });\n    },\n    // 推荐\n    handleRecommend: function handleRecommend(val, rowData) {\n      var _this3 = this;\n\n      this.loading = true;\n      console.log(val, rowData);\n\n      if (val) {\n        setTimeout(function () {\n          _this3.loading = false;\n\n          _this3.$message({\n            type: 'success',\n            message: '推荐成功'\n          });\n        }, 1000);\n      } else {\n        setTimeout(function () {\n          _this3.loading = false;\n\n          _this3.$message({\n            type: 'success',\n            message: '取消推荐'\n          });\n        }, 1000);\n      }\n    },\n    expandChange: function expandChange(row, expandedRows) {\n      console.log(row, expandedRows);\n    },\n    // 单元格编辑\n    handleCellEdit: function handleCellEdit(row) {\n      row.editFlag = true; // eslint-disable-line\n\n      this.$set(this.filterTableColumn[7], 'width', 200);\n      this.tempEditRemark = row.remark;\n      this.editRow++;\n    },\n    handleCellSave: function handleCellSave(row) {\n      var _this4 = this;\n\n      row.editFlag = false; // eslint-disable-line\n\n      setTimeout(function () {\n        _this4.editRow--;\n\n        _this4.$message({\n          type: 'success',\n          message: '修改成功'\n        });\n      }, 1000);\n    },\n    handleCellCancel: function handleCellCancel(row) {\n      row.editFlag = false; // eslint-disable-line\n\n      console.log(this.tempEditRemark);\n      row.remark = this.tempEditRemark; // eslint-disable-line\n\n      this.editRow--;\n    },\n    // 切换分页\n    handleCurrentChange: function handleCurrentChange(val) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this5.currentPage = val;\n                _this5.loading = true;\n                setTimeout(function () {\n                  _this5._getTableData((_this5.currentPage - 1) * _this5.pageCount, _this5.pageCount);\n\n                  _this5.loading = false;\n                }, 1000);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    // 操作列\n    buttonMethods: function buttonMethods(func, index, row) {\n      var self = this;\n      var methods = this.$options.methods;\n      methods[func](self, index, row);\n    },\n    handleEdit: function handleEdit(self, index, row) {\n      self.handleCellEdit(row);\n      console.log(index, row);\n    },\n    handleDelete: function handleDelete(self, index, val) {\n      console.log(val);\n      self.$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                self.loading = true; // eslint-disable-line\n\n                setTimeout(function () {\n                  self.tableData.splice(index, 1);\n                  self.loading = false; // eslint-disable-line\n                }, 1000);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    },\n    // 搜索\n    onQueryChange: function onQueryChange(query) {\n      var _this6 = this;\n\n      this.searchKeyword = query.trim();\n\n      if (!query) {\n        this._getTableData(0, 20);\n\n        return;\n      }\n\n      this.loading = true;\n      setTimeout(function () {\n        _this6.loading = false;\n        _this6.tableData = movie.getDataByQuery(_this6.searchKeyword);\n      }, 1000);\n    }\n  },\n  watch: {\n    // 监听固定列变化\n    fixedLeftList: function fixedLeftList() {\n      var _this7 = this;\n\n      this.filterTableColumn.map(function (item, index) {\n        if (_this7.fixedLeftList.indexOf(item.label) > -1) {\n          _this7.$set(_this7.filterTableColumn[index], 'fixed', 'left');\n        } else if (_this7.fixedRightList.indexOf(item.label) === -1) {\n          _this7.$set(_this7.filterTableColumn[index], 'fixed', false);\n        }\n\n        return '';\n      });\n      console.log(this.filterTableColumn);\n    },\n    fixedRightList: function fixedRightList() {\n      var _this8 = this;\n\n      this.filterTableColumn.map(function (item, index) {\n        if (_this8.fixedRightList.indexOf(item.label) > -1) {\n          _this8.$set(_this8.filterTableColumn[index], 'fixed', 'right');\n        } else if (_this8.fixedLeftList.indexOf(item.label) === -1) {\n          _this8.$set(_this8.filterTableColumn[index], 'fixed', false);\n        }\n\n        return '';\n      });\n      console.log(this.filterTableColumn);\n    },\n    editRow: function editRow() {\n      if (this.filterTableColumn[7]) {\n        this.editRow === 0 // eslint-disable-line\n        ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\n        : null; // eslint-disable-line\n      }\n\n      return '';\n    }\n  }\n};","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/plugin/lin-cms-ui/view/table/table-combo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 列表页面 -->\n  <div class=\"tableSample\">\n    <div class=\"header\">\n      <div class=\"header-left\"><p class=\"title\">豆瓣电影TOP250</p></div>\n      <div class=\"header-right\">\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入电影名\" />\n        <div style=\"margin-left:30px\">\n          <el-button type=\"primary\" @click=\"dialogTableVisible = !dialogTableVisible\">列操作</el-button>\n        </div>\n      </div>\n    </div>\n    <div class=\"table-main\">\n      <el-dialog top=\"5vh\" width=\"60%\" v-model:visible=\"dialogTableVisible\">\n        <!-- 定制列 -->\n        <span>选择要展示的列:</span>\n        <el-checkbox-group v-model=\"checkList\" @change=\"handleChange\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"item === '电影名' || item === '排名'\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n        <!-- 固定列 -->\n        <span>选择固定在左侧的列:</span>\n        <el-checkbox-group v-model=\"fixedLeftList\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"fixedRightList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n        <span>选择固定在右侧的列:</span>\n        <el-checkbox-group v-model=\"fixedRightList\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"fixedLeftList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n      </el-dialog>\n      <el-table\n        :data=\"tableData\"\n        @row-dblclick=\"rowClick\"\n        @expand-change=\"expandChange\"\n        v-loading=\"loading\"\n        id=\"out-table'\"\n      >\n        <!-- 展示摘要 -->\n        <el-table-column type=\"expand\">\n          <template v-slot=\"props\">\n            <div class=\"summary\">\n              <img :src=\"props.row.thumb\" alt />\n              <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                <el-form-item label=\"电影名\">\n                  <span>{{ props.row.title }}</span>\n                </el-form-item>\n                <el-form-item label=\"导演\">\n                  <span>{{ props.row.directors }}</span>\n                </el-form-item>\n                <el-form-item label=\"主演\">\n                  <span>{{ props.row.casts }}</span>\n                </el-form-item>\n              </el-form>\n            </div>\n          </template>\n        </el-table-column>\n        <!-- 开始循环 -->\n        <template v-for=\"item in filterTableColumn\">\n          <!-- 自定义排序 -->\n          <el-table-column label=\"排序\" v-if=\"item.label === '排序'\" v-bind:key=\"item.label\">\n            <template v-slot=\"props\">\n              <input\n                type=\"number\"\n                class=\"sort-input\"\n                v-model=\"props.row.sorting\"\n                @blur=\"handleSort(props.row.sorting, props.row)\"\n              />\n            </template>\n          </el-table-column>\n          <!-- 正常表单列 -->\n          <el-table-column\n            v-bind:key=\"item.label\"\n            v-if=\"!item.noRepeat\"\n            :prop=\"item.prop\"\n            :label=\"item.label\"\n            :show-overflow-tooltip=\"true\"\n            :fixed=\"item.fixed ? item.fixed : false\"\n            :width=\"item.width ? item.width : ''\"\n          ></el-table-column>\n          <!-- 排序 评分 -->\n          <el-table-column\n            label=\"评分\"\n            :prop=\"item.prop\"\n            sortable\n            v-bind:key=\"item.label\"\n            :fixed=\"item.fixed ? item.fixed : false\"\n            :width=\"item.width ? item.width : ''\"\n            v-if=\"item.label === '评分'\"\n          ></el-table-column>\n          <!-- 单元格编辑 -->\n          <el-table-column\n            v-bind:key=\"item.label\"\n            label=\"备注\"\n            prop=\"remark\"\n            :width=\"item.width\"\n            show-overflow-tooltip\n            v-if=\"item.label === '备注'\"\n          >\n            <template v-slot=\"props\">\n              <div v-if=\"!props.row.editFlag\" class=\"table-edit\">\n                <div @click=\"handleEdit(props.row)\" class=\"content\">{{ props.row.remark }}</div>\n                <div class=\"cell-icon\" @click=\"handleCellEdit(props.row)\"><i class=\"el-icon-edit\"></i></div>\n              </div>\n              <div v-else class=\"table-edit\">\n                <el-input v-model=\"props.row.remark\" placeholder></el-input>\n                <div class=\"cell-icon-edit\">\n                  <div class=\"cell-save\" @click=\"handleCellSave(props.row)\"><i class=\"el-icon-check\"></i></div>\n                  <div class=\"cell-cancel\" @click=\"handleCellCancel(props.row)\"><i class=\"el-icon-close\"></i></div>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 推荐 -->\n          <el-table-column label=\"推荐\" v-if=\"item.label === '推荐'\" v-bind:key=\"item.label\">\n            <template v-slot=\"props\">\n              <el-switch\n                v-model=\"props.row.recommend\"\n                active-color=\"#3963bc\"\n                @change=\"handleRecommend($event, props.row)\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n        </template>\n        <!-- 操作列 -->\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"170\">\n          <template v-slot=\"scope\">\n            <el-button\n              v-for=\"(item, index) in operate\"\n              :type=\"item.type\"\n              plain\n              size=\"mini\"\n              :key=\"index\"\n              @click.prevent.stop=\"buttonMethods(item.func, scope.$index, scope.row)\"\n              >{{ item.name }}</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination\" v-if=\"!searchKeyword\">\n        <el-pagination\n          @current-change=\"handleCurrentChange\"\n          :background=\"true\"\n          :page-size=\"pageCount\"\n          :current-page=\"currentPage\"\n          v-if=\"refreshPagination\"\n          layout=\"prev, pager, next, jumper\"\n          :total=\"total_nums\"\n        ></el-pagination>\n      </div>\n    </div>\n    <source-code\n      link=\"https://github.com/TaleLin/lin-cms-vue/blob/master/src/plugins/lin-cms-ui/views/table/TableCombo.vue\"\n    ></source-code>\n  </div>\n</template>\n\n<script>\nimport LinSearch from '@/component/base/search/lin-search'\nimport { tableColumn } from './data'\nimport movie from '../../model/movie.js'\n\nexport default {\n  components: {\n    LinSearch,\n  },\n  data() {\n    return {\n      tableData: [],\n      loading: false,\n      Hidden: true, // 默认隐藏自定义排序列\n      searchKeyword: '',\n      // 定制列相关\n      checkList: [],\n      filterTableColumn: [],\n      // 分页相关\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n      currentPage: 1, // 默认获取第一页的数据\n      pageCount: 10, // 每页10条数据\n      total_nums: 180, // 分组内的用户总数\n      // 固定列相关\n      dialogTableVisible: false,\n      fixedLeftList: [],\n      fixedRightList: [],\n      value: '',\n      // 单元格编辑相关\n      editRow: 0,\n      showTooltip: true,\n    }\n  },\n  computed: {},\n  created() {\n    // 获取数据\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\n    this.tableColumn = tableColumn\n    // 操作栏\n    this.operate = [\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\n      { name: '删除', func: 'handleDelete', type: 'danger' },\n    ]\n    // 定制列\n    this.tempCheckList = tableColumn.map(v => v.label).slice()\n    this.checkList = tableColumn.map(v => v.label)\n    this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\n  },\n  methods: {\n    // 获取数据\n    _getTableData(start, count) {\n      const res = movie.getTop250(start, count)\n      res.map(item => {\n        const temp = item\n        temp.editFlag = false\n        return ''\n      })\n      this.tableData = [...res]\n    },\n\n    rowClick(val) {\n      console.log(val)\n    },\n\n    // 定制列\n    handleChange() {\n      this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\n    },\n    showRowOperateModal() {},\n\n    // 变更排序\n    handleSort(val, rowData) {\n      console.log('rowData', rowData)\n      this.$message({\n        type: 'success',\n        message: `排序已更改为：${val}`,\n      })\n    },\n\n    // 推荐\n    handleRecommend(val, rowData) {\n      this.loading = true\n      console.log(val, rowData)\n      if (val) {\n        setTimeout(() => {\n          this.loading = false\n          this.$message({\n            type: 'success',\n            message: '推荐成功',\n          })\n        }, 1000)\n      } else {\n        setTimeout(() => {\n          this.loading = false\n          this.$message({\n            type: 'success',\n            message: '取消推荐',\n          })\n        }, 1000)\n      }\n    },\n\n    expandChange(row, expandedRows) {\n      console.log(row, expandedRows)\n    },\n\n    // 单元格编辑\n    handleCellEdit(row) {\n      row.editFlag = true // eslint-disable-line\n      this.$set(this.filterTableColumn[7], 'width', 200)\n      this.tempEditRemark = row.remark\n      this.editRow++\n    },\n    handleCellSave(row) {\n      row.editFlag = false // eslint-disable-line\n      setTimeout(() => {\n        this.editRow--\n        this.$message({\n          type: 'success',\n          message: '修改成功',\n        })\n      }, 1000)\n    },\n    handleCellCancel(row) {\n      row.editFlag = false // eslint-disable-line\n      console.log(this.tempEditRemark)\n      row.remark = this.tempEditRemark // eslint-disable-line\n      this.editRow--\n    },\n\n    // 切换分页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      setTimeout(() => {\n        this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\n        this.loading = false\n      }, 1000)\n    },\n\n    // 操作列\n    buttonMethods(func, index, row) {\n      const self = this\n      const { methods } = this.$options\n      methods[func](self, index, row)\n    },\n    handleEdit(self, index, row) {\n      self.handleCellEdit(row)\n      console.log(index, row)\n    },\n    handleDelete(self, index, val) {\n      console.log(val)\n      self\n        .$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        })\n        .then(async () => {\n          self.loading = true // eslint-disable-line\n          setTimeout(() => {\n            self.tableData.splice(index, 1)\n            self.loading = false // eslint-disable-line\n          }, 1000)\n        })\n    },\n\n    // 搜索\n    onQueryChange(query) {\n      this.searchKeyword = query.trim()\n      if (!query) {\n        this._getTableData(0, 20)\n        return\n      }\n      this.loading = true\n      setTimeout(() => {\n        this.loading = false\n        this.tableData = movie.getDataByQuery(this.searchKeyword)\n      }, 1000)\n    },\n  },\n\n  watch: {\n    // 监听固定列变化\n    fixedLeftList() {\n      this.filterTableColumn.map((item, index) => {\n        if (this.fixedLeftList.indexOf(item.label) > -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', 'left')\n        } else if (this.fixedRightList.indexOf(item.label) === -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', false)\n        }\n        return ''\n      })\n      console.log(this.filterTableColumn)\n    },\n    fixedRightList() {\n      this.filterTableColumn.map((item, index) => {\n        if (this.fixedRightList.indexOf(item.label) > -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', 'right')\n        } else if (this.fixedLeftList.indexOf(item.label) === -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', false)\n        }\n        return ''\n      })\n      console.log(this.filterTableColumn)\n    },\n    editRow() {\n      if (this.filterTableColumn[7]) {\n        this.editRow === 0 // eslint-disable-line\n          ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\n          : null // eslint-disable-line\n      }\n      return ''\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.tableSample {\n  padding: 0 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 30px;\n    border-bottom: 1px solid #dae1ed;\n\n    .header-left {\n      float: left;\n\n      .title {\n        height: 59px;\n        line-height: 59px;\n        color: $parent-title-color;\n        font-size: 16px;\n        font-weight: 500;\n      }\n    }\n\n    .header-right {\n      float: right;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  .table-main {\n    padding: 0 30px;\n    margin-top: 30px;\n  }\n\n  .top-operate {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n    margin-top: 30px;\n  }\n\n  .sort-input {\n    width: 50px;\n    background: none;\n    justify-content: space-around;\n  }\n\n  .table-edit {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    .content {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .cell-icon {\n      cursor: pointer;\n      color: #3963bc;\n      font-size: 16px;\n    }\n\n    .cell-icon-edit {\n      display: flex;\n      margin-left: 20px;\n      width: 50px;\n      justify-content: space-between;\n\n      .cell-cancel {\n        cursor: pointer;\n        color: #3963bc;\n        font-size: 16px;\n      }\n\n      .cell-save {\n        cursor: pointer;\n        color: #3963bc;\n        font-size: 16px;\n        margin-right: -20px;\n      }\n    }\n  }\n\n  .m-20 {\n    margin-bottom: 10px;\n    margin-top: 5px;\n  }\n\n  .summary {\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row;\n\n    img {\n      width: 135px;\n      height: 200px;\n    }\n\n    .demo-table-expand {\n      font-size: 0;\n      margin-left: 30px;\n      display: flex;\n      flex-direction: column;\n\n      label {\n        width: 90px;\n        color: #99a9bf;\n      }\n\n      .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        display: flex;\n        flex-direction: row;\n      }\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n// dialog\n.tableSample :v-deep(.el-dialog__footer) {\n  text-align: left;\n  padding-left: 30px;\n}\n\n.tableSample :v-deep(.el-dialog__header) {\n  padding-left: 30px;\n}\n\n.tableSample :v-deep(.el-dialog__body) {\n  padding: 30px;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}