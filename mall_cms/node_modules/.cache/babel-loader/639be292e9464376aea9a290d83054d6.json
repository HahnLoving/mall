{"ast":null,"code":"import _slicedToArray from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _typeof from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.entries.js\";\n\n/**\n * 封装 axios\n */\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nimport store from '@/store';\nimport router from '@/router';\nimport Config from '@/config';\nimport autoJump from '@/lin/util/auto-jump';\nimport ErrorCode from '@/config/error-code';\nimport { getToken, saveAccessToken } from '@/lin/util/token';\nvar config = {\n  baseURL: Config.baseURL || '',\n  timeout: 5 * 1000,\n  // 请求超时时间设置\n  crossDomain: true,\n  // withCredentials: true, // Check cross-site Access-Control\n  // 定义可获得的http响应状态码\n  // return true、设置为null或者undefined，promise将resolved,否则将rejected\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 510;\n  }\n};\n/**\n * 错误码是否是refresh相关\n * @param { number } code 错误码\n */\n\nfunction refreshTokenException(code) {\n  var codes = [10000, 10042, 10050, 10052, 10012];\n  return codes.includes(code);\n} // 创建请求实例\n\n\nvar _axios = axios.create(config);\n\n_axios.interceptors.request.use(function (originConfig) {\n  // 有 API 请求重新计时\n  autoJump(router);\n\n  var reqConfig = _objectSpread({}, originConfig); // step1: 容错处理\n\n\n  if (!reqConfig.url) {\n    console.error('request need url');\n  }\n\n  reqConfig.method = reqConfig.method.toLowerCase(); // 大小写容错\n  // 参数容错\n\n  if (reqConfig.method === 'get') {\n    if (!reqConfig.params) {\n      reqConfig.params = reqConfig.data || {};\n    }\n  } else if (reqConfig.method === 'post') {\n    if (!reqConfig.data) {\n      reqConfig.data = reqConfig.params || {};\n    } // 检测是否包含文件类型, 若包含则进行 formData 封装\n\n\n    var hasFile = false;\n    Object.keys(reqConfig.data).forEach(function (key) {\n      if (_typeof(reqConfig.data[key]) === 'object') {\n        var item = reqConfig.data[key];\n\n        if (item instanceof FileList || item instanceof File || item instanceof Blob) {\n          hasFile = true;\n        }\n      }\n    }); // 检测到存在文件使用 FormData 提交数据\n\n    if (hasFile) {\n      var formData = new FormData();\n      Object.keys(reqConfig.data).forEach(function (key) {\n        formData.append(key, reqConfig.data[key]);\n      });\n      reqConfig.data = formData;\n    }\n  } // step2: permission 处理\n\n\n  if (reqConfig.url === 'cms/user/refresh') {\n    var refreshToken = getToken('refresh_token');\n\n    if (refreshToken) {\n      reqConfig.headers.Authorization = refreshToken;\n    }\n  } else {\n    var accessToken = getToken('access_token');\n\n    if (accessToken) {\n      reqConfig.headers.Authorization = accessToken;\n    }\n  }\n\n  return reqConfig;\n}, function (error) {\n  return Promise.reject(error);\n}); // Add a response interceptor\n\n\n_axios.interceptors.response.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(res) {\n    var _res$data, code, message;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(res.status.toString().charAt(0) === '2')) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.data);\n\n          case 2:\n            _res$data = res.data, code = _res$data.code, message = _res$data.message;\n            return _context2.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve, reject) {\n                var tipMessage, url, cache, refreshResult, result, key, _tips, errorArr, _errorArr, _errorArr$, _key, _tips2, _message;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        tipMessage = '';\n                        url = res.config.url; // refresh_token 异常，直接登出\n\n                        if (!refreshTokenException(code)) {\n                          _context.next = 5;\n                          break;\n                        }\n\n                        setTimeout(function () {\n                          store.dispatch('loginOut');\n                          var origin = window.location.origin;\n                          window.location.href = origin;\n                        }, 1500);\n                        return _context.abrupt(\"return\", resolve(null));\n\n                      case 5:\n                        if (!(code === 10041 || code === 10051)) {\n                          _context.next = 17;\n                          break;\n                        }\n\n                        cache = {};\n\n                        if (!(cache.url !== url)) {\n                          _context.next = 17;\n                          break;\n                        }\n\n                        cache.url = url;\n                        _context.next = 11;\n                        return _axios('cms/user/refresh');\n\n                      case 11:\n                        refreshResult = _context.sent;\n                        saveAccessToken(refreshResult.access_token); // 将上次失败请求重发\n\n                        _context.next = 15;\n                        return _axios(res.config);\n\n                      case 15:\n                        result = _context.sent;\n                        return _context.abrupt(\"return\", resolve(result));\n\n                      case 17:\n                        if (!res.config.handleError) {\n                          _context.next = 20;\n                          break;\n                        }\n\n                        if (typeof res.data.message == 'string' && res.data.message.constructor == String) {\n                          ElMessage.error(res.data.message);\n                        } else {\n                          for (key in res.data.message) {\n                            _tips = String(key) + \":\" + res.data.message[key];\n                            ElMessage.error(_tips);\n                          }\n                        }\n\n                        return _context.abrupt(\"return\", reject(res));\n\n                      case 20:\n                        // 弹出信息提示的第二种情况：采用前端自己定义的一套异常提示信息（需自行在配置项开启）；\n                        // 特殊情况：如果本次请求添加了 showBackend: true, 弹出后端返回错误信息。\n                        if (Config.useFrontEndErrorMsg && !res.config.showBackend) {\n                          // 弹出前端自定义错误信息\n                          errorArr = Object.entries(ErrorCode).filter(function (v) {\n                            return v[0] === code.toString();\n                          }); // 匹配到前端自定义的错误码\n\n                          if (errorArr.length > 0 && errorArr[0][1] !== '') {\n                            ;\n                            _errorArr = _slicedToArray(errorArr, 1);\n                            _errorArr$ = _slicedToArray(_errorArr[0], 2);\n                            tipMessage = _errorArr$[1];\n                          } else {\n                            tipMessage = ErrorCode['777'];\n                          }\n                        }\n\n                        if (typeof message === 'string') {\n                          tipMessage = message;\n                          ElMessage.error(tipMessage);\n                        }\n\n                        if (Object.prototype.toString.call(message) === '[object Object]') {\n                          // ;[tipMessage] = Object.values(message).flat()\n                          for (_key in res.data.message.reverse()) {\n                            _tips2 = String(_key) + \":\" + res.data.message[_key];\n                          }\n\n                          ElMessage.error(tips);\n                        }\n\n                        if (Object.prototype.toString.call(message) === '[object Array]') {\n                          ;\n                          _message = _slicedToArray(message, 1);\n                          tipMessage = _message[0];\n                          ElMessage.error(tipMessage);\n                        } // ElMessage.error(tipMessage)\n\n\n                        reject(res);\n\n                      case 25:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  if (!error.response) {\n    ElMessage.error('请检查 API 是否异常');\n    console.log('error', error);\n  } // 判断请求超时\n\n\n  if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n    ElMessage.warning('请求超时');\n  }\n\n  return Promise.reject(error);\n}); // 导出常用函数\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\n\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _axios({\n    method: 'post',\n    url: url,\n    data: data,\n    params: params\n  });\n}\n/**\n * @param {string} url\n * @param {object} params\n */\n\nexport function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _axios({\n    method: 'get',\n    url: url,\n    params: params\n  });\n}\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _axios({\n    method: 'put',\n    url: url,\n    params: params,\n    data: data\n  });\n}\n/**\n * @param {string} url\n * @param {object} params\n */\n\nexport function _delete(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _axios({\n    method: 'delete',\n    url: url,\n    params: params\n  });\n}\nexport default _axios;","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/lin/plugin/axios.js"],"names":["axios","ElMessage","store","router","Config","autoJump","ErrorCode","getToken","saveAccessToken","config","baseURL","timeout","crossDomain","validateStatus","status","refreshTokenException","code","codes","includes","_axios","create","interceptors","request","use","originConfig","reqConfig","url","console","error","method","toLowerCase","params","data","hasFile","Object","keys","forEach","key","item","FileList","File","Blob","formData","FormData","append","refreshToken","headers","Authorization","accessToken","Promise","reject","response","res","toString","charAt","message","resolve","tipMessage","setTimeout","dispatch","origin","window","location","href","cache","refreshResult","access_token","result","handleError","constructor","String","tips","useFrontEndErrorMsg","showBackend","errorArr","entries","filter","v","length","prototype","call","reverse","log","indexOf","warning","post","get","put","_delete"],"mappings":"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","sourcesContent":["/**\n * 封装 axios\n */\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\n\nimport store from '@/store'\nimport router from '@/router'\nimport Config from '@/config'\nimport autoJump from '@/lin/util/auto-jump'\nimport ErrorCode from '@/config/error-code'\nimport { getToken, saveAccessToken } from '@/lin/util/token'\n\nconst config = {\n  baseURL: Config.baseURL || '',\n  timeout: 5 * 1000, // 请求超时时间设置\n  crossDomain: true,\n  // withCredentials: true, // Check cross-site Access-Control\n  // 定义可获得的http响应状态码\n  // return true、设置为null或者undefined，promise将resolved,否则将rejected\n  validateStatus(status) {\n    return status >= 200 && status < 510\n  },\n}\n\n/**\n * 错误码是否是refresh相关\n * @param { number } code 错误码\n */\nfunction refreshTokenException(code) {\n  const codes = [10000, 10042, 10050, 10052, 10012]\n  return codes.includes(code)\n}\n\n// 创建请求实例\nconst _axios = axios.create(config)\n\n_axios.interceptors.request.use(\n  originConfig => {\n    // 有 API 请求重新计时\n    autoJump(router)\n\n    const reqConfig = { ...originConfig }\n\n    // step1: 容错处理\n    if (!reqConfig.url) {\n      console.error('request need url')\n    }\n\n    reqConfig.method = reqConfig.method.toLowerCase() // 大小写容错\n\n    // 参数容错\n    if (reqConfig.method === 'get') {\n      if (!reqConfig.params) {\n        reqConfig.params = reqConfig.data || {}\n      }\n    } else if (reqConfig.method === 'post') {\n      if (!reqConfig.data) {\n        reqConfig.data = reqConfig.params || {}\n      }\n\n      // 检测是否包含文件类型, 若包含则进行 formData 封装\n      let hasFile = false\n      Object.keys(reqConfig.data).forEach(key => {\n        if (typeof reqConfig.data[key] === 'object') {\n          const item = reqConfig.data[key]\n          if (item instanceof FileList || item instanceof File || item instanceof Blob) {\n            hasFile = true\n          }\n        }\n      })\n\n      // 检测到存在文件使用 FormData 提交数据\n      if (hasFile) {\n        const formData = new FormData()\n        Object.keys(reqConfig.data).forEach(key => {\n          formData.append(key, reqConfig.data[key])\n        })\n        reqConfig.data = formData\n      }\n    }\n\n    // step2: permission 处理\n    if (reqConfig.url === 'cms/user/refresh') {\n      const refreshToken = getToken('refresh_token')\n      if (refreshToken) {\n        reqConfig.headers.Authorization = refreshToken\n      }\n    } else {\n      const accessToken = getToken('access_token')\n      if (accessToken) {\n        reqConfig.headers.Authorization = accessToken\n      }\n    }\n\n    return reqConfig\n  },\n  error => Promise.reject(error),\n)\n\n// Add a response interceptor\n_axios.interceptors.response.use(\n  async res => {\n    if (res.status.toString().charAt(0) === '2') {\n      return res.data\n    }\n\n    const { code, message } = res.data\n\n    return new Promise(async (resolve, reject) => {\n      let tipMessage = ''\n      const { url } = res.config\n\n      // refresh_token 异常，直接登出\n      if (refreshTokenException(code)) {\n        setTimeout(() => {\n          store.dispatch('loginOut')\n          const { origin } = window.location\n          window.location.href = origin\n        }, 1500)\n        return resolve(null)\n      }\n      // assessToken相关，刷新令牌\n      if (code === 10041 || code === 10051) {\n        const cache = {}\n        if (cache.url !== url) {\n          cache.url = url\n          const refreshResult = await _axios('cms/user/refresh')\n          saveAccessToken(refreshResult.access_token)\n          // 将上次失败请求重发\n          const result = await _axios(res.config)\n          return resolve(result)\n        }\n      }\n\n  \n      // 弹出信息提示的第一种情况：直接提示后端返回的异常信息（框架默认为此配置）；\n      // 特殊情况：如果本次请求添加了 handleError: true，用户自行通过 try catch 处理，框架不做额外处理\n      if (res.config.handleError) {\n        if((typeof res.data.message=='string')&&res.data.message.constructor==String){\n\n            ElMessage.error(res.data.message)\n        \n        }else {\n          for (const key in res.data.message) {\n            const tips = String(key) + \":\" + res.data.message[key] \n            ElMessage.error(tips)\n          }\n        }\n        return reject(res)\n      }\n\n      // 弹出信息提示的第二种情况：采用前端自己定义的一套异常提示信息（需自行在配置项开启）；\n      // 特殊情况：如果本次请求添加了 showBackend: true, 弹出后端返回错误信息。\n      if (Config.useFrontEndErrorMsg && !res.config.showBackend) {\n        // 弹出前端自定义错误信息\n        const errorArr = Object.entries(ErrorCode).filter(v => v[0] === code.toString())\n        // 匹配到前端自定义的错误码\n        if (errorArr.length > 0 && errorArr[0][1] !== '') {\n          ;[[, tipMessage]] = errorArr\n        } else {\n          tipMessage = ErrorCode['777']\n        }\n      }\n\n      if (typeof message === 'string') {\n        tipMessage = message\n        ElMessage.error(tipMessage)\n      }\n      if (Object.prototype.toString.call(message) === '[object Object]') {\n        // ;[tipMessage] = Object.values(message).flat()\n        for (const key in res.data.message.reverse()) {\n          const tips = String(key) + \":\" + res.data.message[key] \n        }\n        ElMessage.error(tips)\n      }\n      if (Object.prototype.toString.call(message) === '[object Array]') {\n        ;[tipMessage] = message\n        ElMessage.error(tipMessage)\n      }\n      // ElMessage.error(tipMessage)\n      reject(res)\n    })\n  },\n  error => {\n    if (!error.response) {\n      ElMessage.error('请检查 API 是否异常')\n      console.log('error', error)\n    }\n\n    // 判断请求超时\n    if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n      ElMessage.warning('请求超时')\n    }\n    return Promise.reject(error)\n  },\n)\n\n// 导出常用函数\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\nexport function post(url, data = {}, params = {}) {\n  return _axios({\n    method: 'post',\n    url,\n    data,\n    params,\n  })\n}\n\n/**\n * @param {string} url\n * @param {object} params\n */\nexport function get(url, params = {}) {\n  return _axios({\n    method: 'get',\n    url,\n    params,\n  })\n}\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\nexport function put(url, data = {}, params = {}) {\n  return _axios({\n    method: 'put',\n    url,\n    params,\n    data,\n  })\n}\n\n/**\n * @param {string} url\n * @param {object} params\n */\nexport function _delete(url, params = {}) {\n  return _axios({\n    method: 'delete',\n    url,\n    params,\n  })\n}\n\nexport default _axios\n"]},"metadata":{},"sourceType":"module"}