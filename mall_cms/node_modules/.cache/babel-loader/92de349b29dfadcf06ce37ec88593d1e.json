{"ast":null,"code":"import _objectSpread from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { ref, onMounted, reactive } from 'vue';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nimport AdminModel from '@/lin/model/admin';\nexport var useGroupList = function useGroupList() {\n  var tableData = ref([]); // 表格数据\n\n  var loading = ref(false);\n  /**\n   * 获取所有分组并传给table渲染\n   */\n\n  var getAllGroups = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              loading.value = true;\n              _context.next = 4;\n              return AdminModel.getAllGroups();\n\n            case 4:\n              tableData.value = _context.sent;\n              loading.value = false;\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              loading.value = false;\n              console.error(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function getAllGroups() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  /**\n   * 删除某项数据\n   * @param {object} id 选中的一行数据 ID\n   */\n\n\n  var handleDelete = function handleDelete(id) {\n    var res = {};\n    ElMessageBox.confirm('此操作将永久删除该分组, 是否继续?', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning'\n    }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              loading.value = true;\n              _context2.next = 4;\n              return AdminModel.deleteOneGroup(id);\n\n            case 4:\n              res = _context2.sent;\n              _context2.next = 11;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              loading.value = false;\n              console.log(_context2.t0);\n\n            case 11:\n              if (!(res.code < window.MAX_SUCCESS_CODE)) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.next = 14;\n              return getAllGroups();\n\n            case 14:\n              ElMessage.message({\n                type: 'success',\n                message: \"\".concat(res.message)\n              });\n              _context2.next = 19;\n              break;\n\n            case 17:\n              loading.value = false;\n              ElMessage.message({\n                type: 'error',\n                message: \"\".concat(res.message)\n              });\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    })));\n  };\n\n  onMounted( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return getAllGroups();\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  })));\n  return {\n    loading: loading,\n    tableData: tableData,\n    handleDelete: handleDelete,\n    getAllGroups: getAllGroups\n  };\n};\nexport var useEditGroup = function useEditGroup(ctx, getAllGroups) {\n  var cacheGroup = {};\n  var id = ref(0); // 分组id\n\n  var form = ref(null);\n  var group = reactive({\n    name: '',\n    info: ''\n  });\n  var dialogFormVisible = ref(false); // 是否弹窗\n\n  var rules = {\n    // 表单验证规则\n    info: [],\n    name: [{\n      required: true,\n      message: '请输入分组名称',\n      trigger: 'blur'\n    }]\n  };\n  /**\n   * 获取所拥有的权限并渲染  由子组件提供\n   * @param {*} val 选中的某行数据\n   */\n\n  var handleEdit = function handleEdit(row) {\n    id.value = row.id;\n    group.name = row.name;\n    group.info = row.info;\n    cacheGroup = _objectSpread({}, group);\n    dialogFormVisible.value = true;\n  };\n  /**\n   * 修改分组信息\n   */\n\n\n  var confirmEdit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var res;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(group.name === '')) {\n                _context4.next = 3;\n                break;\n              }\n\n              ElMessage.warning('请将信息填写完整');\n              return _context4.abrupt(\"return\");\n\n            case 3:\n              if (!(cacheGroup.name !== group.name || cacheGroup.info !== group.info)) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 6;\n              return AdminModel.updateOneGroup(group.name, group.info, id.value);\n\n            case 6:\n              res = _context4.sent;\n\n              if (res.code < window.MAX_SUCCESS_CODE) {\n                ElMessage.success(\"\".concat(res.message));\n                getAllGroups();\n              }\n\n            case 8:\n              dialogFormVisible.value = false;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function confirmEdit() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose(done) {\n    done();\n  };\n\n  var rowDoubleClick = function rowDoubleClick(row) {\n    handleEdit(row);\n  };\n\n  var resetForm = function resetForm() {\n    form.value.resetFields();\n  };\n\n  return {\n    id: id,\n    form: form,\n    rules: rules,\n    group: group,\n    resetForm: resetForm,\n    handleEdit: handleEdit,\n    confirmEdit: confirmEdit,\n    handleClose: handleClose,\n    rowDoubleClick: rowDoubleClick,\n    dialogFormVisible: dialogFormVisible\n  };\n};","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/src/view/admin/group/use-group.js"],"names":["ref","onMounted","reactive","ElMessageBox","ElMessage","AdminModel","useGroupList","tableData","loading","getAllGroups","value","console","error","handleDelete","id","res","confirm","confirmButtonText","cancelButtonText","type","then","deleteOneGroup","log","code","window","MAX_SUCCESS_CODE","message","useEditGroup","ctx","cacheGroup","form","group","name","info","dialogFormVisible","rules","required","trigger","handleEdit","row","confirmEdit","warning","updateOneGroup","success","handleClose","done","rowDoubleClick","resetForm","resetFields"],"mappings":"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","sourcesContent":["import { ref, onMounted, reactive } from 'vue'\nimport { ElMessageBox, ElMessage } from 'element-plus'\nimport AdminModel from '@/lin/model/admin'\n\nexport const useGroupList = () => {\n  const tableData = ref([]) // 表格数据\n  const loading = ref(false)\n\n  /**\n   * 获取所有分组并传给table渲染\n   */\n  const getAllGroups = async () => {\n    try {\n      loading.value = true\n      tableData.value = await AdminModel.getAllGroups()\n      loading.value = false\n    } catch (e) {\n      loading.value = false\n      console.error(e)\n    }\n  }\n\n  /**\n   * 删除某项数据\n   * @param {object} id 选中的一行数据 ID\n   */\n  const handleDelete = id => {\n    let res = {}\n    ElMessageBox.confirm('此操作将永久删除该分组, 是否继续?', '提示', {\n      confirmButtonText: '确定',\n      cancelButtonText: '取消',\n      type: 'warning',\n    }).then(async () => {\n      try {\n        loading.value = true\n        res = await AdminModel.deleteOneGroup(id)\n      } catch (e) {\n        loading.value = false\n        console.log(e)\n      }\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        await getAllGroups()\n        ElMessage.message({ type: 'success', message: `${res.message}` })\n      } else {\n        loading.value = false\n        ElMessage.message({ type: 'error', message: `${res.message}` })\n      }\n    })\n  }\n\n  onMounted(async () => {\n    await getAllGroups()\n  })\n\n  return {\n    loading,\n    tableData,\n    handleDelete,\n    getAllGroups,\n  }\n}\n\nexport const useEditGroup = (ctx, getAllGroups) => {\n  let cacheGroup = {}\n  const id = ref(0) // 分组id\n  const form = ref(null)\n  const group = reactive({ name: '', info: '' })\n  const dialogFormVisible = ref(false) // 是否弹窗\n  const rules = {\n    // 表单验证规则\n    info: [],\n    name: [{ required: true, message: '请输入分组名称', trigger: 'blur' }],\n  }\n\n  /**\n   * 获取所拥有的权限并渲染  由子组件提供\n   * @param {*} val 选中的某行数据\n   */\n  const handleEdit = row => {\n    id.value = row.id\n    group.name = row.name\n    group.info = row.info\n    cacheGroup = { ...group }\n    dialogFormVisible.value = true\n  }\n\n  /**\n   * 修改分组信息\n   */\n  const confirmEdit = async () => {\n    if (group.name === '') {\n      ElMessage.warning('请将信息填写完整')\n      return\n    }\n    if (cacheGroup.name !== group.name || cacheGroup.info !== group.info) {\n      const res = await AdminModel.updateOneGroup(group.name, group.info, id.value)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        ElMessage.success(`${res.message}`)\n        getAllGroups()\n      }\n    }\n    dialogFormVisible.value = false\n  }\n\n  const handleClose = done => {\n    done()\n  }\n  const rowDoubleClick = row => {\n    handleEdit(row)\n  }\n  const resetForm = () => {\n    form.value.resetFields()\n  }\n\n  return {\n    id,\n    form,\n    rules,\n    group,\n    resetForm,\n    handleEdit,\n    confirmEdit,\n    handleClose,\n    rowDoubleClick,\n    dialogFormVisible,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}