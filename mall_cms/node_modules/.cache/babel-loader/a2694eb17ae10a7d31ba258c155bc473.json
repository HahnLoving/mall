{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/mall/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { ElMessage } from 'element-plus';\nimport { reactive, ref } from 'vue';\nimport AdminModel from '@/lin/model/admin';\nexport default {\n  props: ['id'],\n  setup: function setup(props, ctx) {\n    var form = ref(null);\n    var loading = ref(false);\n    var info = reactive({\n      newPassword: '',\n      confirmPassword: ''\n    });\n    /**\n     * 表单规则\n     */\n\n    var rules = getRules(ctx, info, form);\n    /**\n     * 提交表单数据\n     */\n\n    var submitForm = function submitForm() {\n      if (!info.newPassword && !info.confirmPassword) {\n        ctx.emit('handlePasswordResult', true);\n        return;\n      }\n\n      form.value.validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(valid) {\n          var res;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!valid) {\n                    _context.next = 15;\n                    break;\n                  }\n\n                  res = {};\n                  _context.prev = 2;\n                  loading.value = true;\n                  _context.next = 6;\n                  return AdminModel.changePassword(info.newPassword, info.confirmPassword, props.id);\n\n                case 6:\n                  res = _context.sent;\n                  _context.next = 12;\n                  break;\n\n                case 9:\n                  _context.prev = 9;\n                  _context.t0 = _context[\"catch\"](2);\n                  loading.value = false;\n\n                case 12:\n                  if (res.code < window.MAX_SUCCESS_CODE) {\n                    loading.value = false;\n                    ElMessage.success(\"\".concat(res.message));\n                    resetForm();\n                    ctx.emit('handlePasswordResult', true);\n                  } else {\n                    loading.value = false;\n                    ElMessage.error(\"\".concat(res.message));\n                  }\n\n                  _context.next = 16;\n                  break;\n\n                case 15:\n                  ElMessage.error('请填写正确的密码信息');\n\n                case 16:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[2, 9]]);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }; // 重置表单\n\n\n    var resetForm = function resetForm() {\n      form.value.resetFields();\n    };\n\n    return {\n      info: info,\n      form: form,\n      rules: rules,\n      loading: loading,\n      resetForm: resetForm,\n      submitForm: submitForm\n    };\n  }\n};\n/**\n * 表单规则\n */\n\nfunction getRules(ctx, info, form) {\n  var validatePassword = function validatePassword(rule, value, callback) {\n    if (!value) {\n      callback(new Error('请输入密码'));\n    } else if (value.length < 6) {\n      callback(new Error('密码长度不能少于6位数'));\n    } else {\n      if (info.confirmPassword) {\n        form.value.validateField('confirmPassword');\n      }\n\n      callback();\n    }\n  };\n\n  var validatePassword2 = function validatePassword2(rule, value, callback) {\n    if (!value) {\n      callback(new Error('请再次输入密码'));\n    } else if (value !== info.newPassword) {\n      callback(new Error('两次输入密码不一致!'));\n    } else {\n      callback();\n    }\n  }; // 验证规则\n\n\n  return {\n    newPassword: [{\n      validator: validatePassword,\n      trigger: 'blur',\n      required: true\n    }],\n    confirmPassword: [{\n      validator: validatePassword2,\n      trigger: 'blur',\n      required: true\n    }]\n  };\n}","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/src/view/admin/user/user-password.vue"],"names":[],"mappings":";;AA0BA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,QAAT,EAAmB,GAAnB,QAA8B,KAA9B;AACA,OAAO,UAAP,MAAuB,mBAAvB;AAEA,eAAe;AACb,EAAA,KAAK,EAAE,CAAC,IAAD,CADM;AAEb,EAAA,KAFa,iBAEP,KAFO,EAEA,GAFA,EAEK;AAChB,QAAM,IAAG,GAAI,GAAG,CAAC,IAAD,CAAhB;AACA,QAAM,OAAM,GAAI,GAAG,CAAC,KAAD,CAAnB;AACA,QAAM,IAAG,GAAI,QAAQ,CAAC;AACpB,MAAA,WAAW,EAAE,EADO;AAEpB,MAAA,eAAe,EAAE;AAFG,KAAD,CAArB;AAKA;AACC;AACA;;AACD,QAAM,KAAI,GAAI,QAAQ,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,CAAtB;AAEA;AACC;AACA;;AACD,QAAM,UAAS,GAAI,SAAb,UAAa,GAAM;AACvB,UAAI,CAAC,IAAI,CAAC,WAAN,IAAqB,CAAC,IAAI,CAAC,eAA/B,EAAgD;AAC9C,QAAA,GAAG,CAAC,IAAJ,CAAS,sBAAT,EAAiC,IAAjC;AACA;AACF;;AAEA,MAAA,IAAI,CAAC,KAAL,CAAW,QAAX;AAAA,2EAAoB,iBAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACd,KADc;AAAA;AAAA;AAAA;;AAEZ,kBAAA,GAFY,GAEN,EAFM;AAAA;AAId,kBAAA,OAAO,CAAC,KAAR,GAAgB,IAAhB;AAJc;AAAA,yBAKF,UAAU,CAAC,cAAX,CAA0B,IAAI,CAAC,WAA/B,EAA4C,IAAI,CAAC,eAAjD,EAAkE,KAAK,CAAC,EAAxE,CALE;;AAAA;AAKd,kBAAA,GALc;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOd,kBAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;;AAPc;AAShB,sBAAI,GAAG,CAAC,IAAJ,GAAW,MAAM,CAAC,gBAAtB,EAAwC;AACtC,oBAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACA,oBAAA,SAAS,CAAC,OAAV,WAAqB,GAAG,CAAC,OAAzB;AACA,oBAAA,SAAS;AACT,oBAAA,GAAG,CAAC,IAAJ,CAAS,sBAAT,EAAiC,IAAjC;AACF,mBALA,MAKO;AACL,oBAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACA,oBAAA,SAAS,CAAC,KAAV,WAAmB,GAAG,CAAC,OAAvB;AACF;;AAjBgB;AAAA;;AAAA;AAmBhB,kBAAA,SAAS,CAAC,KAAV,CAAgB,YAAhB;;AAnBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApB;;AAAA;AAAA;AAAA;AAAA;AAsBF,KA5BA,CAhBgB,CA8ChB;;;AACA,QAAM,SAAQ,GAAI,SAAZ,SAAY,GAAM;AACtB,MAAA,IAAI,CAAC,KAAL,CAAW,WAAX;AACF,KAFA;;AAIA,WAAO;AACL,MAAA,IAAI,EAAJ,IADK;AAEL,MAAA,IAAI,EAAJ,IAFK;AAGL,MAAA,KAAK,EAAL,KAHK;AAIL,MAAA,OAAO,EAAP,OAJK;AAKL,MAAA,SAAS,EAAT,SALK;AAML,MAAA,UAAU,EAAV;AANK,KAAP;AAQD;AA7DY,CAAf;AAgEA;AACC;AACA;;AACD,SAAS,QAAT,CAAkB,GAAlB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC;AACjC,MAAM,gBAAe,GAAI,SAAnB,gBAAmB,CAAC,IAAD,EAAO,KAAP,EAAc,QAAd,EAA2B;AAClD,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,QAAQ,CAAC,IAAI,KAAJ,CAAU,OAAV,CAAD,CAAR;AACF,KAFA,MAEO,IAAI,KAAK,CAAC,MAAN,GAAe,CAAnB,EAAsB;AAC3B,MAAA,QAAQ,CAAC,IAAI,KAAJ,CAAU,aAAV,CAAD,CAAR;AACF,KAFO,MAEA;AACL,UAAI,IAAI,CAAC,eAAT,EAA0B;AACxB,QAAA,IAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,iBAAzB;AACF;;AACA,MAAA,QAAQ;AACV;AACF,GAXA;;AAYA,MAAM,iBAAgB,GAAI,SAApB,iBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc,QAAd,EAA2B;AACnD,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,QAAQ,CAAC,IAAI,KAAJ,CAAU,SAAV,CAAD,CAAR;AACF,KAFA,MAEO,IAAI,KAAI,KAAM,IAAI,CAAC,WAAnB,EAAgC;AACrC,MAAA,QAAQ,CAAC,IAAI,KAAJ,CAAU,YAAV,CAAD,CAAR;AACF,KAFO,MAEA;AACL,MAAA,QAAQ;AACV;AACF,GARA,CAbiC,CAuBjC;;;AACA,SAAO;AACL,IAAA,WAAW,EAAE,CAAC;AAAE,MAAA,SAAS,EAAE,gBAAb;AAA+B,MAAA,OAAO,EAAE,MAAxC;AAAgD,MAAA,QAAQ,EAAE;AAA1D,KAAD,CADR;AAEL,IAAA,eAAe,EAAE,CAAC;AAAE,MAAA,SAAS,EAAE,iBAAb;AAAgC,MAAA,OAAO,EAAE,MAAzC;AAAiD,MAAA,QAAQ,EAAE;AAA3D,KAAD;AAFZ,GAAP;AAIF","sourcesContent":["<template>\n  <div class=\"container\">\n    <el-form\n      ref=\"form\"\n      :model=\"info\"\n      status-icon\n      :rules=\"rules\"\n      v-loading=\"loading\"\n      label-width=\"100px\"\n      label-position=\"right\"\n    >\n      <el-form-item label=\"密码\" prop=\"newPassword\">\n        <el-input clearable type=\"password\" v-model=\"info.newPassword\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"确认密码\" prop=\"confirmPassword\" label-position=\"top\">\n        <el-input clearable type=\"password\" v-model=\"info.confirmPassword\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item v-show=\"false\">\n        <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n        <el-button @click=\"resetForm\">取消</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus'\nimport { reactive, ref } from 'vue'\nimport AdminModel from '@/lin/model/admin'\n\nexport default {\n  props: ['id'],\n  setup(props, ctx) {\n    const form = ref(null)\n    const loading = ref(false)\n    const info = reactive({\n      newPassword: '',\n      confirmPassword: '',\n    })\n\n    /**\n     * 表单规则\n     */\n    const rules = getRules(ctx, info, form)\n\n    /**\n     * 提交表单数据\n     */\n    const submitForm = () => {\n      if (!info.newPassword && !info.confirmPassword) {\n        ctx.emit('handlePasswordResult', true)\n        return\n      }\n\n      form.value.validate(async valid => {\n        if (valid) {\n          let res = {}\n          try {\n            loading.value = true\n            res = await AdminModel.changePassword(info.newPassword, info.confirmPassword, props.id)\n          } catch (e) {\n            loading.value = false\n          }\n          if (res.code < window.MAX_SUCCESS_CODE) {\n            loading.value = false\n            ElMessage.success(`${res.message}`)\n            resetForm()\n            ctx.emit('handlePasswordResult', true)\n          } else {\n            loading.value = false\n            ElMessage.error(`${res.message}`)\n          }\n        } else {\n          ElMessage.error('请填写正确的密码信息')\n        }\n      })\n    }\n\n    // 重置表单\n    const resetForm = () => {\n      form.value.resetFields()\n    }\n\n    return {\n      info,\n      form,\n      rules,\n      loading,\n      resetForm,\n      submitForm,\n    }\n  },\n}\n\n/**\n * 表单规则\n */\nfunction getRules(ctx, info, form) {\n  const validatePassword = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('请输入密码'))\n    } else if (value.length < 6) {\n      callback(new Error('密码长度不能少于6位数'))\n    } else {\n      if (info.confirmPassword) {\n        form.value.validateField('confirmPassword')\n      }\n      callback()\n    }\n  }\n  const validatePassword2 = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('请再次输入密码'))\n    } else if (value !== info.newPassword) {\n      callback(new Error('两次输入密码不一致!'))\n    } else {\n      callback()\n    }\n  }\n\n  // 验证规则\n  return {\n    newPassword: [{ validator: validatePassword, trigger: 'blur', required: true }],\n    confirmPassword: [{ validator: validatePassword2, trigger: 'blur', required: true }],\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-form-item :v-deep(.el-form-item__label) {\n  padding-right: 10px !important;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}