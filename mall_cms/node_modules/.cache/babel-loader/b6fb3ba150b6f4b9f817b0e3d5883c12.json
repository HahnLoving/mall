{"ast":null,"code":"import _asyncToGenerator from \"/Users/zhahn/Documents/Hahn/\\u81EA\\u8003/\\u9879\\u76EE/mall_cms/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { onMounted, ref } from 'vue';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nimport bookModel from '@/model/book'; // import BookModify from '../book'\n\nimport gridCategory from '@/model/grid-category';\nexport default {\n  components: {// BookModify,\n  },\n  setup: function setup() {\n    var books = ref([]);\n    var editBookId = ref(1);\n    var loading = ref(false);\n    var showEdit = ref(false);\n    var gridCategories = ref([]);\n    onMounted(function () {\n      getGridCategories();\n    }); // const getBooks = async () => {\n    //   try {\n    //     loading.value = true\n    //     books.value = await bookModel.getBooks()\n    //     loading.value = false\n    //   } catch (error) {\n    //     loading.value = false\n    //     if (error.code === 10020) {\n    //       books.value = []\n    //     }\n    //   }\n    // }\n\n    var getGridCategories = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                loading.value = true;\n                _context.next = 4;\n                return gridCategory.getGridCategories();\n\n              case 4:\n                gridCategories.value = _context.sent;\n                loading.value = false;\n                console.log(\"zzr123 = \", gridCategories);\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                loading.value = false;\n\n                if (_context.t0.code === 10020) {\n                  gridCategories.value = [];\n                }\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n\n      return function getGridCategories() {\n        return _ref.apply(this, arguments);\n      };\n    }(); //     async getGridCategories() {\n    //   const gridCategories = await GridCategory.getGridCategories()\n    //   this.tableData = gridCategories\n    //   this.initImgSrcList()\n    // },\n\n\n    var handleEdit = function handleEdit(id) {\n      showEdit.value = true;\n      editBookId.value = id;\n    };\n\n    var handleDelete = function handleDelete(id) {\n      ElMessageBox.confirm('此操作将永久删除该图书, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return bookModel.deleteBook(id);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  getBooks();\n                  ElMessage.success(\"\".concat(res.message));\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      })));\n    };\n\n    var editClose = function editClose() {\n      showEdit.value = false;\n      getBooks();\n    };\n\n    var indexMethod = function indexMethod(index) {\n      return index + 1;\n    };\n\n    return {\n      books: books,\n      loading: loading,\n      showEdit: showEdit,\n      editClose: editClose,\n      handleEdit: handleEdit,\n      editBookId: editBookId,\n      indexMethod: indexMethod,\n      handleDelete: handleDelete\n    };\n  }\n};","map":{"version":3,"sources":["/Users/zhahn/Documents/Hahn/自考/项目/mall_cms/src/view/grid-category/grid-category-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <!-- 列表页面 -->\n    <div class=\"container\" v-if=\"!showEdit\">\n      <!-- <div class=\"header\">\n        <div class=\"title\">图书列表</div>\n      </div> -->\n    <div class=\"header\">\n      <div class=\"title\">六宫格列表</div>\n      <el-button\n        style=\"margin-left: 30px;\"\n        @click.prevent=\"handleAdd\"\n        type=\"primary\"\n        plain\n        size=\"medium\"\n        v-permission=\"{ permission: '创建六宫格', type: 'disabled' }\"\n        >创建六宫格</el-button\n      >\n    </div>\n      <!-- 表格 -->\n      <el-table :data=\"gridCategories\" v-loading=\"loading\">\n        <!-- <el-table-column type=\"index\" :index=\"indexMethod\" label=\"id\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"title\" label=\"图片\"></el-table-column>\n        <el-table-column prop=\"author\" label=\"标题\"></el-table-column>\n        <el-table-column prop=\"123\" label=\"分类id\"></el-table-column> -->\n        <el-table-column prop=\"id\" label=\"id\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"img\" label=\"图片\" width=\"200\">\n          <!-- <template v-if=\"scope.row.img\" slot-scope=\"scope\">\n            <el-image :src=\"scope.row.img\" :preview-src-list=\"imgSrcList\" style=\"max-height: 50px; max-width: 100px;\">\n            </el-image>\n          </template> -->\n        </el-table-column>\n        <el-table-column prop=\"title\" label=\"标题\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"category_id\" label=\"分类id\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"root_category_id\" label=\"父分类id\" width=\"150\"></el-table-column>\n        <el-table-column prop=\"index\" label=\"排序\" width=\"150\"></el-table-column>\n        <el-table-column label=\"操作\" fixed=\"right\">\n          <template #default=\"scope\">\n            <el-button plain size=\"small\" type=\"primary\" @click=\"handleEdit(scope.row.id)\">编辑</el-button>\n            <el-button plain size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row.id)\"\n              v-permission=\"{ permission: '删除图书', type: 'disabled' }\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n\n    <!-- 编辑页面 -->\n    <book-modify v-else @editClose=\"editClose\" :editBookId=\"editBookId\"></book-modify>\n  </div>\n</template>\n\n<script>\nimport { onMounted, ref } from 'vue'\nimport { ElMessageBox, ElMessage } from 'element-plus'\nimport bookModel from '@/model/book'\n// import BookModify from '../book'\nimport gridCategory from '@/model/grid-category'\n\nexport default {\n  components: {\n    // BookModify,\n  },\n  setup() {\n    const books = ref([])\n    const editBookId = ref(1)\n    const loading = ref(false)\n    const showEdit = ref(false)\n    const gridCategories = ref([])\n\n    onMounted(() => {\n      getGridCategories()\n    })\n\n    // const getBooks = async () => {\n    //   try {\n    //     loading.value = true\n    //     books.value = await bookModel.getBooks()\n    //     loading.value = false\n    //   } catch (error) {\n    //     loading.value = false\n    //     if (error.code === 10020) {\n    //       books.value = []\n    //     }\n    //   }\n    // }\n\n    const getGridCategories = async () => {\n      try {\n        loading.value = true\n        gridCategories.value = await gridCategory.getGridCategories()\n        loading.value = false\n        console.log(\"zzr123 = \",gridCategories)\n      } catch (error) {\n        loading.value = false\n        if (error.code === 10020) {\n          gridCategories.value = []\n        }\n      }\n    }\n\n    //     async getGridCategories() {\n    //   const gridCategories = await GridCategory.getGridCategories()\n    //   this.tableData = gridCategories\n    //   this.initImgSrcList()\n    // },\n\n    const handleEdit = id => {\n      showEdit.value = true\n      editBookId.value = id\n    }\n\n    const handleDelete = id => {\n      ElMessageBox.confirm('此操作将永久删除该图书, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await bookModel.deleteBook(id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          getBooks()\n          ElMessage.success(`${res.message}`)\n        }\n      })\n    }\n\n    const editClose = () => {\n      showEdit.value = false\n      getBooks()\n    }\n\n    const indexMethod = index => index + 1\n\n    return {\n      books,\n      loading,\n      showEdit,\n      editClose,\n      handleEdit,\n      editBookId,\n      indexMethod,\n      handleDelete,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}