{"ast":null,"code":"import \"core-js/modules/es.string.fixed.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, resolveDirective as _resolveDirective, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nvar _withScopeId = function _withScopeId(n) {\n  return _pushScopeId(\"data-v-d3368688\"), n = n(), _popScopeId(), n;\n};\n\nvar _hoisted_1 = {\n  class: \"tableSample\"\n};\nvar _hoisted_2 = {\n  class: \"header\"\n};\n\nvar _hoisted_3 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"div\", {\n    class: \"header-left\"\n  }, [/*#__PURE__*/_createElementVNode(\"p\", {\n    class: \"title\"\n  }, \"豆瓣电影TOP250\")], -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_4 = {\n  class: \"header-right\"\n};\nvar _hoisted_5 = {\n  style: {\n    \"margin-left\": \"30px\"\n  }\n};\n\nvar _hoisted_6 = /*#__PURE__*/_createTextVNode(\"列操作\");\n\nvar _hoisted_7 = {\n  class: \"table-main\"\n};\n\nvar _hoisted_8 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", null, \"选择要展示的列:\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_9 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", null, \"选择固定在左侧的列:\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_10 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"span\", null, \"选择固定在右侧的列:\", -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_11 = {\n  class: \"summary\"\n};\nvar _hoisted_12 = [\"src\"];\nvar _hoisted_13 = [\"onUpdate:modelValue\", \"onBlur\"];\nvar _hoisted_14 = {\n  key: 0,\n  class: \"table-edit\"\n};\nvar _hoisted_15 = [\"onClick\"];\nvar _hoisted_16 = [\"onClick\"];\n\nvar _hoisted_17 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-edit\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_18 = [_hoisted_17];\nvar _hoisted_19 = {\n  key: 1,\n  class: \"table-edit\"\n};\nvar _hoisted_20 = {\n  class: \"cell-icon-edit\"\n};\nvar _hoisted_21 = [\"onClick\"];\n\nvar _hoisted_22 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-check\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_23 = [_hoisted_22];\nvar _hoisted_24 = [\"onClick\"];\n\nvar _hoisted_25 = /*#__PURE__*/_withScopeId(function () {\n  return /*#__PURE__*/_createElementVNode(\"i\", {\n    class: \"el-icon-close\"\n  }, null, -1\n  /* HOISTED */\n  );\n});\n\nvar _hoisted_26 = [_hoisted_25];\nvar _hoisted_27 = {\n  key: 0,\n  class: \"pagination\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_lin_search = _resolveComponent(\"lin-search\");\n\n  var _component_el_button = _resolveComponent(\"el-button\");\n\n  var _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n\n  var _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n\n  var _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  var _component_el_form = _resolveComponent(\"el-form\");\n\n  var _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  var _component_el_input = _resolveComponent(\"el-input\");\n\n  var _component_el_switch = _resolveComponent(\"el-switch\");\n\n  var _component_el_table = _resolveComponent(\"el-table\");\n\n  var _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  var _component_source_code = _resolveComponent(\"source-code\");\n\n  var _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 列表页面 \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_lin_search, {\n    onQuery: $options.onQueryChange,\n    placeholder: \"请输入电影名\"\n  }, null, 8\n  /* PROPS */\n  , [\"onQuery\"]), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return $data.dialogTableVisible = !$data.dialogTableVisible;\n    })\n  }, {\n    default: _withCtx(function () {\n      return [_hoisted_6];\n    }),\n    _: 1\n    /* STABLE */\n\n  })])])]), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_dialog, {\n    top: \"5vh\",\n    width: \"60%\",\n    visible: $data.dialogTableVisible,\n    \"onUpdate:visible\": _cache[4] || (_cache[4] = function ($event) {\n      return $data.dialogTableVisible = $event;\n    })\n  }, {\n    default: _withCtx(function () {\n      return [_createCommentVNode(\" 定制列 \"), _hoisted_8, _createVNode(_component_el_checkbox_group, {\n        modelValue: $data.checkList,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n          return $data.checkList = $event;\n        }),\n        onChange: $options.handleChange,\n        class: \"m-20\"\n      }, {\n        default: _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tempCheckList, function (item) {\n            return _openBlock(), _createBlock(_component_el_checkbox, {\n              disabled: item === '电影名' || item === '排名',\n              label: item,\n              key: item\n            }, null, 8\n            /* PROPS */\n            , [\"disabled\", \"label\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\", \"onChange\"]), _createCommentVNode(\" 固定列 \"), _hoisted_9, _createVNode(_component_el_checkbox_group, {\n        modelValue: $data.fixedLeftList,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n          return $data.fixedLeftList = $event;\n        }),\n        class: \"m-20\"\n      }, {\n        default: _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tempCheckList, function (item) {\n            return _openBlock(), _createBlock(_component_el_checkbox, {\n              disabled: $data.fixedRightList.indexOf(item) > -1 || $data.checkList.indexOf(item) === -1,\n              label: item,\n              key: item\n            }, null, 8\n            /* PROPS */\n            , [\"disabled\", \"label\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\"]), _hoisted_10, _createVNode(_component_el_checkbox_group, {\n        modelValue: $data.fixedRightList,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n          return $data.fixedRightList = $event;\n        }),\n        class: \"m-20\"\n      }, {\n        default: _withCtx(function () {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tempCheckList, function (item) {\n            return _openBlock(), _createBlock(_component_el_checkbox, {\n              disabled: $data.fixedLeftList.indexOf(item) > -1 || $data.checkList.indexOf(item) === -1,\n              label: item,\n              key: item\n            }, null, 8\n            /* PROPS */\n            , [\"disabled\", \"label\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))];\n        }),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"modelValue\"])];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"visible\"]), _withDirectives(_createVNode(_component_el_table, {\n    data: $data.tableData,\n    onRowDblclick: $options.rowClick,\n    onExpandChange: $options.expandChange,\n    id: \"out-table'\"\n  }, {\n    default: _withCtx(function () {\n      return [_createCommentVNode(\" 展示摘要 \"), _createVNode(_component_el_table_column, {\n        type: \"expand\"\n      }, {\n        default: _withCtx(function (props) {\n          return [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n            src: props.row.thumb,\n            alt: \"\"\n          }, null, 8\n          /* PROPS */\n          , _hoisted_12), _createVNode(_component_el_form, {\n            \"label-position\": \"left\",\n            inline: \"\",\n            class: \"demo-table-expand\"\n          }, {\n            default: _withCtx(function () {\n              return [_createVNode(_component_el_form_item, {\n                label: \"电影名\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createElementVNode(\"span\", null, _toDisplayString(props.row.title), 1\n                  /* TEXT */\n                  )];\n                }),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              ), _createVNode(_component_el_form_item, {\n                label: \"导演\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createElementVNode(\"span\", null, _toDisplayString(props.row.directors), 1\n                  /* TEXT */\n                  )];\n                }),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              ), _createVNode(_component_el_form_item, {\n                label: \"主演\"\n              }, {\n                default: _withCtx(function () {\n                  return [_createElementVNode(\"span\", null, _toDisplayString(props.row.casts), 1\n                  /* TEXT */\n                  )];\n                }),\n                _: 2\n                /* DYNAMIC */\n\n              }, 1024\n              /* DYNAMIC_SLOTS */\n              )];\n            }),\n            _: 2\n            /* DYNAMIC */\n\n          }, 1024\n          /* DYNAMIC_SLOTS */\n          )])];\n        }),\n        _: 1\n        /* STABLE */\n\n      }), _createCommentVNode(\" 开始循环 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filterTableColumn, function (item) {\n        return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 自定义排序 \"), item.label === '排序' ? (_openBlock(), _createBlock(_component_el_table_column, {\n          label: \"排序\",\n          key: item.label\n        }, {\n          default: _withCtx(function (props) {\n            return [_withDirectives(_createElementVNode(\"input\", {\n              type: \"number\",\n              class: \"sort-input\",\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return props.row.sorting = $event;\n              },\n              onBlur: function onBlur($event) {\n                return $options.handleSort(props.row.sorting, props.row);\n              }\n            }, null, 40\n            /* PROPS, HYDRATE_EVENTS */\n            , _hoisted_13), [[_vModelText, props.row.sorting]])];\n          }),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        )) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 正常表单列 \"), !item.noRepeat ? (_openBlock(), _createBlock(_component_el_table_column, {\n          key: item.label,\n          prop: item.prop,\n          label: item.label,\n          \"show-overflow-tooltip\": true,\n          fixed: item.fixed ? item.fixed : false,\n          width: item.width ? item.width : ''\n        }, null, 8\n        /* PROPS */\n        , [\"prop\", \"label\", \"fixed\", \"width\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 排序 评分 \"), item.label === '评分' ? (_openBlock(), _createBlock(_component_el_table_column, {\n          label: \"评分\",\n          prop: item.prop,\n          sortable: \"\",\n          key: item.label,\n          fixed: item.fixed ? item.fixed : false,\n          width: item.width ? item.width : ''\n        }, null, 8\n        /* PROPS */\n        , [\"prop\", \"fixed\", \"width\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 单元格编辑 \"), item.label === '备注' ? (_openBlock(), _createBlock(_component_el_table_column, {\n          key: item.label,\n          label: \"备注\",\n          prop: \"remark\",\n          width: item.width,\n          \"show-overflow-tooltip\": \"\"\n        }, {\n          default: _withCtx(function (props) {\n            return [!props.row.editFlag ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [_createElementVNode(\"div\", {\n              onClick: function onClick($event) {\n                return $options.handleEdit(props.row);\n              },\n              class: \"content\"\n            }, _toDisplayString(props.row.remark), 9\n            /* TEXT, PROPS */\n            , _hoisted_15), _createElementVNode(\"div\", {\n              class: \"cell-icon\",\n              onClick: function onClick($event) {\n                return $options.handleCellEdit(props.row);\n              }\n            }, _hoisted_18, 8\n            /* PROPS */\n            , _hoisted_16)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [_createVNode(_component_el_input, {\n              modelValue: props.row.remark,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return props.row.remark = $event;\n              },\n              placeholder: \"\"\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\"]), _createElementVNode(\"div\", _hoisted_20, [_createElementVNode(\"div\", {\n              class: \"cell-save\",\n              onClick: function onClick($event) {\n                return $options.handleCellSave(props.row);\n              }\n            }, _hoisted_23, 8\n            /* PROPS */\n            , _hoisted_21), _createElementVNode(\"div\", {\n              class: \"cell-cancel\",\n              onClick: function onClick($event) {\n                return $options.handleCellCancel(props.row);\n              }\n            }, _hoisted_26, 8\n            /* PROPS */\n            , _hoisted_24)])]))];\n          }),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1032\n        /* PROPS, DYNAMIC_SLOTS */\n        , [\"width\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 推荐 \"), item.label === '推荐' ? (_openBlock(), _createBlock(_component_el_table_column, {\n          label: \"推荐\",\n          key: item.label\n        }, {\n          default: _withCtx(function (props) {\n            return [_createVNode(_component_el_switch, {\n              modelValue: props.row.recommend,\n              \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n                return props.row.recommend = $event;\n              },\n              \"active-color\": \"#3963bc\",\n              onChange: function onChange($event) {\n                return $options.handleRecommend($event, props.row);\n              }\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\", \"onUpdate:modelValue\", \"onChange\"])];\n          }),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1024\n        /* DYNAMIC_SLOTS */\n        )) : _createCommentVNode(\"v-if\", true)], 64\n        /* STABLE_FRAGMENT */\n        );\n      }), 256\n      /* UNKEYED_FRAGMENT */\n      )), _createCommentVNode(\" 操作列 \"), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        fixed: \"right\",\n        width: \"170\"\n      }, {\n        default: _withCtx(function (scope) {\n          return [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.operate, function (item, index) {\n            return _openBlock(), _createBlock(_component_el_button, {\n              type: item.type,\n              plain: \"\",\n              size: \"mini\",\n              key: index,\n              onClick: _withModifiers(function ($event) {\n                return $options.buttonMethods(item.func, scope.$index, scope.row);\n              }, [\"prevent\", \"stop\"])\n            }, {\n              default: _withCtx(function () {\n                return [_createTextVNode(_toDisplayString(item.name), 1\n                /* TEXT */\n                )];\n              }),\n              _: 2\n              /* DYNAMIC */\n\n            }, 1032\n            /* PROPS, DYNAMIC_SLOTS */\n            , [\"type\", \"onClick\"]);\n          }), 128\n          /* KEYED_FRAGMENT */\n          ))];\n        }),\n        _: 1\n        /* STABLE */\n\n      })];\n    }),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\", \"onRowDblclick\", \"onExpandChange\"]), [[_directive_loading, $data.loading]]), _createCommentVNode(\" 分页 \"), !$data.searchKeyword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, [$data.refreshPagination ? (_openBlock(), _createBlock(_component_el_pagination, {\n    key: 0,\n    onCurrentChange: $options.handleCurrentChange,\n    background: true,\n    \"page-size\": $data.pageCount,\n    \"current-page\": $data.currentPage,\n    layout: \"prev, pager, next, jumper\",\n    total: $data.total_nums\n  }, null, 8\n  /* PROPS */\n  , [\"onCurrentChange\", \"page-size\", \"current-page\", \"total\"])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_source_code, {\n    link: \"https://github.com/TaleLin/lin-cms-vue/blob/master/src/plugins/lin-cms-ui/views/table/TableCombo.vue\"\n  })])], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"sources":["/Users/zhahn/Desktop/未命名文件夹/lin-cms-vue/src/plugin/lin-cms-ui/view/table/table-combo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 列表页面 -->\n  <div class=\"tableSample\">\n    <div class=\"header\">\n      <div class=\"header-left\"><p class=\"title\">豆瓣电影TOP250</p></div>\n      <div class=\"header-right\">\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入电影名\" />\n        <div style=\"margin-left:30px\">\n          <el-button type=\"primary\" @click=\"dialogTableVisible = !dialogTableVisible\">列操作</el-button>\n        </div>\n      </div>\n    </div>\n    <div class=\"table-main\">\n      <el-dialog top=\"5vh\" width=\"60%\" v-model:visible=\"dialogTableVisible\">\n        <!-- 定制列 -->\n        <span>选择要展示的列:</span>\n        <el-checkbox-group v-model=\"checkList\" @change=\"handleChange\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"item === '电影名' || item === '排名'\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n        <!-- 固定列 -->\n        <span>选择固定在左侧的列:</span>\n        <el-checkbox-group v-model=\"fixedLeftList\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"fixedRightList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n        <span>选择固定在右侧的列:</span>\n        <el-checkbox-group v-model=\"fixedRightList\" class=\"m-20\">\n          <el-checkbox\n            :disabled=\"fixedLeftList.indexOf(item) > -1 || checkList.indexOf(item) === -1\"\n            :label=\"item\"\n            v-for=\"item in tempCheckList\"\n            :key=\"item\"\n          />\n        </el-checkbox-group>\n      </el-dialog>\n      <el-table\n        :data=\"tableData\"\n        @row-dblclick=\"rowClick\"\n        @expand-change=\"expandChange\"\n        v-loading=\"loading\"\n        id=\"out-table'\"\n      >\n        <!-- 展示摘要 -->\n        <el-table-column type=\"expand\">\n          <template v-slot=\"props\">\n            <div class=\"summary\">\n              <img :src=\"props.row.thumb\" alt />\n              <el-form label-position=\"left\" inline class=\"demo-table-expand\">\n                <el-form-item label=\"电影名\">\n                  <span>{{ props.row.title }}</span>\n                </el-form-item>\n                <el-form-item label=\"导演\">\n                  <span>{{ props.row.directors }}</span>\n                </el-form-item>\n                <el-form-item label=\"主演\">\n                  <span>{{ props.row.casts }}</span>\n                </el-form-item>\n              </el-form>\n            </div>\n          </template>\n        </el-table-column>\n        <!-- 开始循环 -->\n        <template v-for=\"item in filterTableColumn\">\n          <!-- 自定义排序 -->\n          <el-table-column label=\"排序\" v-if=\"item.label === '排序'\" v-bind:key=\"item.label\">\n            <template v-slot=\"props\">\n              <input\n                type=\"number\"\n                class=\"sort-input\"\n                v-model=\"props.row.sorting\"\n                @blur=\"handleSort(props.row.sorting, props.row)\"\n              />\n            </template>\n          </el-table-column>\n          <!-- 正常表单列 -->\n          <el-table-column\n            v-bind:key=\"item.label\"\n            v-if=\"!item.noRepeat\"\n            :prop=\"item.prop\"\n            :label=\"item.label\"\n            :show-overflow-tooltip=\"true\"\n            :fixed=\"item.fixed ? item.fixed : false\"\n            :width=\"item.width ? item.width : ''\"\n          ></el-table-column>\n          <!-- 排序 评分 -->\n          <el-table-column\n            label=\"评分\"\n            :prop=\"item.prop\"\n            sortable\n            v-bind:key=\"item.label\"\n            :fixed=\"item.fixed ? item.fixed : false\"\n            :width=\"item.width ? item.width : ''\"\n            v-if=\"item.label === '评分'\"\n          ></el-table-column>\n          <!-- 单元格编辑 -->\n          <el-table-column\n            v-bind:key=\"item.label\"\n            label=\"备注\"\n            prop=\"remark\"\n            :width=\"item.width\"\n            show-overflow-tooltip\n            v-if=\"item.label === '备注'\"\n          >\n            <template v-slot=\"props\">\n              <div v-if=\"!props.row.editFlag\" class=\"table-edit\">\n                <div @click=\"handleEdit(props.row)\" class=\"content\">{{ props.row.remark }}</div>\n                <div class=\"cell-icon\" @click=\"handleCellEdit(props.row)\"><i class=\"el-icon-edit\"></i></div>\n              </div>\n              <div v-else class=\"table-edit\">\n                <el-input v-model=\"props.row.remark\" placeholder></el-input>\n                <div class=\"cell-icon-edit\">\n                  <div class=\"cell-save\" @click=\"handleCellSave(props.row)\"><i class=\"el-icon-check\"></i></div>\n                  <div class=\"cell-cancel\" @click=\"handleCellCancel(props.row)\"><i class=\"el-icon-close\"></i></div>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n          <!-- 推荐 -->\n          <el-table-column label=\"推荐\" v-if=\"item.label === '推荐'\" v-bind:key=\"item.label\">\n            <template v-slot=\"props\">\n              <el-switch\n                v-model=\"props.row.recommend\"\n                active-color=\"#3963bc\"\n                @change=\"handleRecommend($event, props.row)\"\n              ></el-switch>\n            </template>\n          </el-table-column>\n        </template>\n        <!-- 操作列 -->\n        <el-table-column label=\"操作\" fixed=\"right\" width=\"170\">\n          <template v-slot=\"scope\">\n            <el-button\n              v-for=\"(item, index) in operate\"\n              :type=\"item.type\"\n              plain\n              size=\"mini\"\n              :key=\"index\"\n              @click.prevent.stop=\"buttonMethods(item.func, scope.$index, scope.row)\"\n              >{{ item.name }}</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination\" v-if=\"!searchKeyword\">\n        <el-pagination\n          @current-change=\"handleCurrentChange\"\n          :background=\"true\"\n          :page-size=\"pageCount\"\n          :current-page=\"currentPage\"\n          v-if=\"refreshPagination\"\n          layout=\"prev, pager, next, jumper\"\n          :total=\"total_nums\"\n        ></el-pagination>\n      </div>\n    </div>\n    <source-code\n      link=\"https://github.com/TaleLin/lin-cms-vue/blob/master/src/plugins/lin-cms-ui/views/table/TableCombo.vue\"\n    ></source-code>\n  </div>\n</template>\n\n<script>\nimport LinSearch from '@/component/base/search/lin-search'\nimport { tableColumn } from './data'\nimport movie from '../../model/movie.js'\n\nexport default {\n  components: {\n    LinSearch,\n  },\n  data() {\n    return {\n      tableData: [],\n      loading: false,\n      Hidden: true, // 默认隐藏自定义排序列\n      searchKeyword: '',\n      // 定制列相关\n      checkList: [],\n      filterTableColumn: [],\n      // 分页相关\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n      currentPage: 1, // 默认获取第一页的数据\n      pageCount: 10, // 每页10条数据\n      total_nums: 180, // 分组内的用户总数\n      // 固定列相关\n      dialogTableVisible: false,\n      fixedLeftList: [],\n      fixedRightList: [],\n      value: '',\n      // 单元格编辑相关\n      editRow: 0,\n      showTooltip: true,\n    }\n  },\n  computed: {},\n  created() {\n    // 获取数据\n    this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\n    this.tableColumn = tableColumn\n    // 操作栏\n    this.operate = [\n      { name: '编辑', func: 'handleEdit', type: 'primary' },\n      { name: '删除', func: 'handleDelete', type: 'danger' },\n    ]\n    // 定制列\n    this.tempCheckList = tableColumn.map(v => v.label).slice()\n    this.checkList = tableColumn.map(v => v.label)\n    this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\n  },\n  methods: {\n    // 获取数据\n    _getTableData(start, count) {\n      const res = movie.getTop250(start, count)\n      res.map(item => {\n        const temp = item\n        temp.editFlag = false\n        return ''\n      })\n      this.tableData = [...res]\n    },\n\n    rowClick(val) {\n      console.log(val)\n    },\n\n    // 定制列\n    handleChange() {\n      this.filterTableColumn = tableColumn.filter(v => this.checkList.indexOf(v.label) > -1)\n    },\n    showRowOperateModal() {},\n\n    // 变更排序\n    handleSort(val, rowData) {\n      console.log('rowData', rowData)\n      this.$message({\n        type: 'success',\n        message: `排序已更改为：${val}`,\n      })\n    },\n\n    // 推荐\n    handleRecommend(val, rowData) {\n      this.loading = true\n      console.log(val, rowData)\n      if (val) {\n        setTimeout(() => {\n          this.loading = false\n          this.$message({\n            type: 'success',\n            message: '推荐成功',\n          })\n        }, 1000)\n      } else {\n        setTimeout(() => {\n          this.loading = false\n          this.$message({\n            type: 'success',\n            message: '取消推荐',\n          })\n        }, 1000)\n      }\n    },\n\n    expandChange(row, expandedRows) {\n      console.log(row, expandedRows)\n    },\n\n    // 单元格编辑\n    handleCellEdit(row) {\n      row.editFlag = true // eslint-disable-line\n      this.$set(this.filterTableColumn[7], 'width', 200)\n      this.tempEditRemark = row.remark\n      this.editRow++\n    },\n    handleCellSave(row) {\n      row.editFlag = false // eslint-disable-line\n      setTimeout(() => {\n        this.editRow--\n        this.$message({\n          type: 'success',\n          message: '修改成功',\n        })\n      }, 1000)\n    },\n    handleCellCancel(row) {\n      row.editFlag = false // eslint-disable-line\n      console.log(this.tempEditRemark)\n      row.remark = this.tempEditRemark // eslint-disable-line\n      this.editRow--\n    },\n\n    // 切换分页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      setTimeout(() => {\n        this._getTableData((this.currentPage - 1) * this.pageCount, this.pageCount)\n        this.loading = false\n      }, 1000)\n    },\n\n    // 操作列\n    buttonMethods(func, index, row) {\n      const self = this\n      const { methods } = this.$options\n      methods[func](self, index, row)\n    },\n    handleEdit(self, index, row) {\n      self.handleCellEdit(row)\n      console.log(index, row)\n    },\n    handleDelete(self, index, val) {\n      console.log(val)\n      self\n        .$confirm('此操作将永久删除该信息, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        })\n        .then(async () => {\n          self.loading = true // eslint-disable-line\n          setTimeout(() => {\n            self.tableData.splice(index, 1)\n            self.loading = false // eslint-disable-line\n          }, 1000)\n        })\n    },\n\n    // 搜索\n    onQueryChange(query) {\n      this.searchKeyword = query.trim()\n      if (!query) {\n        this._getTableData(0, 20)\n        return\n      }\n      this.loading = true\n      setTimeout(() => {\n        this.loading = false\n        this.tableData = movie.getDataByQuery(this.searchKeyword)\n      }, 1000)\n    },\n  },\n\n  watch: {\n    // 监听固定列变化\n    fixedLeftList() {\n      this.filterTableColumn.map((item, index) => {\n        if (this.fixedLeftList.indexOf(item.label) > -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', 'left')\n        } else if (this.fixedRightList.indexOf(item.label) === -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', false)\n        }\n        return ''\n      })\n      console.log(this.filterTableColumn)\n    },\n    fixedRightList() {\n      this.filterTableColumn.map((item, index) => {\n        if (this.fixedRightList.indexOf(item.label) > -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', 'right')\n        } else if (this.fixedLeftList.indexOf(item.label) === -1) {\n          this.$set(this.filterTableColumn[index], 'fixed', false)\n        }\n        return ''\n      })\n      console.log(this.filterTableColumn)\n    },\n    editRow() {\n      if (this.filterTableColumn[7]) {\n        this.editRow === 0 // eslint-disable-line\n          ? this.$set(this.filterTableColumn[7], 'width', 200) // eslint-disable-line\n          : null // eslint-disable-line\n      }\n      return ''\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.tableSample {\n  padding: 0 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 30px;\n    border-bottom: 1px solid #dae1ed;\n\n    .header-left {\n      float: left;\n\n      .title {\n        height: 59px;\n        line-height: 59px;\n        color: $parent-title-color;\n        font-size: 16px;\n        font-weight: 500;\n      }\n    }\n\n    .header-right {\n      float: right;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  .table-main {\n    padding: 0 30px;\n    margin-top: 30px;\n  }\n\n  .top-operate {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n    margin-top: 30px;\n  }\n\n  .sort-input {\n    width: 50px;\n    background: none;\n    justify-content: space-around;\n  }\n\n  .table-edit {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    .content {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n    }\n\n    .cell-icon {\n      cursor: pointer;\n      color: #3963bc;\n      font-size: 16px;\n    }\n\n    .cell-icon-edit {\n      display: flex;\n      margin-left: 20px;\n      width: 50px;\n      justify-content: space-between;\n\n      .cell-cancel {\n        cursor: pointer;\n        color: #3963bc;\n        font-size: 16px;\n      }\n\n      .cell-save {\n        cursor: pointer;\n        color: #3963bc;\n        font-size: 16px;\n        margin-right: -20px;\n      }\n    }\n  }\n\n  .m-20 {\n    margin-bottom: 10px;\n    margin-top: 5px;\n  }\n\n  .summary {\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: row;\n\n    img {\n      width: 135px;\n      height: 200px;\n    }\n\n    .demo-table-expand {\n      font-size: 0;\n      margin-left: 30px;\n      display: flex;\n      flex-direction: column;\n\n      label {\n        width: 90px;\n        color: #99a9bf;\n      }\n\n      .el-form-item {\n        margin-right: 0;\n        margin-bottom: 0;\n        display: flex;\n        flex-direction: row;\n      }\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n// dialog\n.tableSample :v-deep(.el-dialog__footer) {\n  text-align: left;\n  padding-left: 30px;\n}\n\n.tableSample :v-deep(.el-dialog__header) {\n  padding-left: 30px;\n}\n\n.tableSample :v-deep(.el-dialog__body) {\n  padding: 30px;\n}\n</style>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}