{"version":3,"file":"js/3764.00d4652f.js","mappings":"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","sources":["webpack://lin-cms-vue/./src/view/admin/user/use-user.js","webpack://lin-cms-vue/./src/view/admin/user/user-list.vue","webpack://lin-cms-vue/./src/view/admin/user/user-list.vue?5189","webpack://lin-cms-vue/./src/view/admin/user/user-password.vue","webpack://lin-cms-vue/./src/view/admin/user/user-password.vue?8b77"],"sourcesContent":["import { ref, onMounted } from 'vue'\nimport AdminModel from '@/lin/model/admin'\n\nexport const useUserList = () => {\n  const allGroups = ref([])\n  const pageCount = ref(10) // 每页10条数据\n  const tableData = ref([])\n  const groupId = ref(null)\n  const loading = ref(false)\n  const totalNum = ref(0) // 分组内的用户总数\n  const currentPage = ref(1) // 默认获取第一页的数据\n\n  /**\n   * 获取管理员列表数据\n   */\n  const getAdminUsers = async () => {\n    let res = {}\n    try {\n      loading.value = true\n      res = await AdminModel.getAdminUsers({\n        groupId: groupId.value,\n        count: pageCount.value,\n        page: currentPage.value - 1,\n      })\n      loading.value = false\n      tableData.value = shuffleList(res.items)\n      totalNum.value = res.total\n    } catch (e) {\n      loading.value = false\n      console.error(e)\n    }\n  }\n\n  /**\n   * 获取所有分组数据\n   */\n  const getAllGroups = async () => {\n    try {\n      loading.value = true\n      allGroups.value = await AdminModel.getAllGroups()\n      loading.value = false\n    } catch (e) {\n      loading.value = false\n      console.error(e)\n    }\n  }\n\n  /**\n   * 多分组用 '，' 分割展示\n   */\n  const shuffleList = users => {\n    const list = []\n    users.forEach(element => {\n      element.groupNames = element.groups.map(item => item.name).join('，')\n      list.push(element)\n    })\n    return list\n  }\n\n  onMounted(async () => {\n    await getAdminUsers()\n    getAllGroups()\n  })\n\n  return {\n    groupId,\n    loading,\n    totalNum,\n    allGroups,\n    pageCount,\n    tableData,\n    currentPage,\n    getAdminUsers,\n  }\n}\n\nexport const useFormData = (ctx, dialogFormVisible, getAdminUsers, currentPage, loading, info, password) => {\n  const id = ref(null)\n  const activeTab = ref('修改信息')\n\n  /**\n   * 监听子组件更新管理员信息是否成功\n   * 如果更新了管理员信息，重新请求管理员列表\n   */\n  const handleInfoResult = flag => {\n    dialogFormVisible.value = false\n    if (flag === true) {\n      getAdminUsers()\n    }\n  }\n\n  /**\n   * 根据分组查询管理员\n   */\n  const handleChange = async () => {\n    currentPage.value = 1\n    loading.value = true\n    await getAdminUsers()\n    loading.value = false\n  }\n\n  /**\n   * 监听是否完成密码更新\n   * @param {boolean} result 是否完成密码更新\n   */\n  const handlePasswordResult = result => {\n    if (result === true) {\n      dialogFormVisible.value = false\n    }\n  }\n\n  /**\n   * 翻页\n   */\n  const handleCurrentChange = async val => {\n    currentPage.value = val\n    await getAdminUsers()\n  }\n\n  /**\n   * 提交表单信息，更新管理员信息\n   */\n  const confirmEdit = async () => {\n    if (activeTab.value === '修改信息') {\n      await info.value.submitForm()\n    } else {\n      await password.value.submitForm()\n    }\n  }\n\n  /**\n   * 关闭编辑弹窗\n   */\n  const handleClose = done => {\n    dialogFormVisible.value = false\n    password.value.resetForm()\n    activeTab.value = '修改信息'\n    done()\n  }\n\n  const handleClick = tab => {\n    activeTab.value = tab.props.name\n  }\n\n  /**\n   * 重置表单\n   */\n  const resetForm = () => {\n    if (activeTab.value === '修改信息') {\n      info.value.resetForm()\n    } else {\n      password.value.resetForm()\n    }\n  }\n\n  return {\n    id,\n    activeTab,\n    resetForm,\n    confirmEdit,\n    handleClose,\n    handleClick,\n    handleChange,\n    handleInfoResult,\n    handleCurrentChange,\n    handlePasswordResult,\n  }\n}\n","<template>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"title\">用户列表</div>\n      <!-- 分组选择下拉框 -->\n      <el-select filterable v-model=\"groupId\" placeholder=\"请选择分组\" @change=\"handleChange\" clearable>\n        <el-option v-for=\"(group, index) in allGroups\" :key=\"index\" :label=\"group.name\" :value=\"group.id\"> </el-option>\n      </el-select>\n    </div>\n    <!-- 表格 -->\n    <el-table :data=\"tableData\" v-loading=\"loading\" @row-dblclick=\"rowDoubleClick\">\n      <el-table-column prop=\"username\" label=\"名称\"></el-table-column>\n      <el-table-column prop=\"groupNames\" label=\"所属分组\"></el-table-column>\n      <el-table-column label=\"操作\" fixed=\"right\" width=\"275\">\n        <template #default=\"scope\">\n          <el-button plain size=\"mini\" type=\"primary\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button plain size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 分页 -->\n    <div class=\"pagination\">\n      <el-pagination\n        :total=\"totalNum\"\n        :background=\"true\"\n        :page-size=\"pageCount\"\n        v-if=\"refreshPagination\"\n        :current-page=\"currentPage\"\n        layout=\"prev, pager, next, jumper\"\n        @current-change=\"handleCurrentChange\"\n      >\n      </el-pagination>\n    </div>\n    <!-- 弹窗 -->\n    <el-dialog title=\"用户信息\" :append-to-body=\"true\" :before-close=\"handleClose\" v-model=\"dialogFormVisible\">\n      <div style=\"margin-top: -25px\">\n        <el-tabs v-model=\"activeTab\" @tab-click=\"handleClick\">\n          <el-tab-pane label=\"修改信息\" name=\"修改信息\">\n            <user-info\n              :id=\"id\"\n              ref=\"info\"\n              class=\"info\"\n              pageType=\"edit\"\n              :info=\"userInfo\"\n              :submit=\"false\"\n              :allGroups=\"allGroups\"\n              labelPosition=\"right\"\n              v-if=\"dialogFormVisible\"\n              @handleInfoResult=\"handleInfoResult\"\n            />\n          </el-tab-pane>\n          <el-tab-pane label=\"修改密码\" name=\"修改密码\">\n            <user-password @handlePasswordResult=\"handlePasswordResult\" ref=\"password\" :id=\"id\" class=\"password\" />\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n      <!-- 按键操作 -->\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button type=\"primary\" @click=\"confirmEdit\">确 定</el-button>\n          <!-- <el-button @click=\"resetForm\">重 置</el-button> -->\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { ElMessageBox, ElMessage } from 'element-plus'\nimport AdminModel from 'lin/model/admin'\n\nimport UserInfo from './user-info'\nimport UserPassword from './user-password'\nimport { useUserList, useFormData } from './use-user'\n\nexport default {\n  components: { UserInfo, UserPassword },\n  setup(props, ctx) {\n    const info = ref(false)\n    const password = ref(false)\n    const dialogFormVisible = ref(false) // 弹窗遮罩层\n    const refreshPagination = ref(true) // 页数增加的时候，因为缓存的缘故，需要刷新Pagination组件\n\n    const { allGroups, loading, groupId, totalNum, tableData, pageCount, currentPage, getAdminUsers } = useUserList()\n    const {\n      id,\n      activeTab,\n      resetForm,\n      confirmEdit,\n      handleClose,\n      handleClick,\n      handleChange,\n      handleInfoResult,\n      handleCurrentChange,\n      handlePasswordResult,\n    } = useFormData(ctx, dialogFormVisible, getAdminUsers, currentPage, loading, info, password)\n\n    const userInfo = reactive({\n      email: '',\n      username: '',\n      password: '',\n      groups: [],\n      confirm_password: '',\n    })\n\n    /**\n     * 修改管理员信息\n     */\n    const handleEdit = row => {\n      id.value = row.id\n      userInfo.email = row.email\n      userInfo.groups = row.groups\n      userInfo.username = row.username\n      dialogFormVisible.value = true\n    }\n\n    /**\n     * 删除管理员数据\n     */\n    const handleDelete = id => {\n      let res\n      ElMessageBox.confirm('此操作将永久删除该用户, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        try {\n          loading.value = true\n          res = await AdminModel.deleteOneUser(id)\n        } catch (e) {\n          loading.value = false\n          console.error(e)\n        }\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          loading.value = false\n          if (totalNum.value % pageCount.value === 1 && currentPage.value !== 1) {\n            // 判断删除的是不是每一页的最后一条数据\n            currentPage.value--\n          }\n          await getAdminUsers()\n          ElMessage.success(`${res.message}`)\n        } else {\n          loading.value = false\n          ElMessage.error(`${res.message}`)\n        }\n      })\n    }\n\n    const rowDoubleClick = row => {\n      handleEdit(row)\n    }\n\n    return {\n      id,\n      info,\n      groupId,\n      loading,\n      password,\n      userInfo,\n      totalNum,\n      allGroups,\n      tableData,\n      activeTab,\n      resetForm,\n      pageCount,\n      handleEdit,\n      confirmEdit,\n      handleClose,\n      currentPage,\n      handleClick,\n      handleChange,\n      handleDelete,\n      rowDoubleClick,\n      handleInfoResult,\n      refreshPagination,\n      dialogFormVisible,\n      handleCurrentChange,\n      handlePasswordResult,\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n\n.info {\n  margin-left: -55px;\n  margin-bottom: -30px;\n}\n\n.password {\n  margin-top: 20px;\n  margin-left: -55px;\n  margin-bottom: -20px;\n}\n</style>\n","import { render } from \"./user-list.vue?vue&type=template&id=0b916455&scoped=true\"\nimport script from \"./user-list.vue?vue&type=script&lang=js\"\nexport * from \"./user-list.vue?vue&type=script&lang=js\"\n\nimport \"./user-list.vue?vue&type=style&index=0&id=0b916455&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0b916455\"]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <el-form\n      ref=\"form\"\n      :model=\"info\"\n      status-icon\n      :rules=\"rules\"\n      v-loading=\"loading\"\n      label-width=\"100px\"\n      label-position=\"right\"\n    >\n      <el-form-item label=\"密码\" prop=\"newPassword\">\n        <el-input clearable type=\"password\" v-model=\"info.newPassword\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"确认密码\" prop=\"confirmPassword\" label-position=\"top\">\n        <el-input clearable type=\"password\" v-model=\"info.confirmPassword\" autocomplete=\"off\"></el-input>\n      </el-form-item>\n      <el-form-item v-show=\"false\">\n        <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n        <el-button @click=\"resetForm\">取消</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus'\nimport { reactive, ref } from 'vue'\nimport AdminModel from '@/lin/model/admin'\n\nexport default {\n  props: ['id'],\n  setup(props, ctx) {\n    const form = ref(null)\n    const loading = ref(false)\n    const info = reactive({\n      newPassword: '',\n      confirmPassword: '',\n    })\n\n    /**\n     * 表单规则\n     */\n    const rules = getRules(ctx, info, form)\n\n    /**\n     * 提交表单数据\n     */\n    const submitForm = () => {\n      if (!info.newPassword && !info.confirmPassword) {\n        ctx.emit('handlePasswordResult', true)\n        return\n      }\n\n      form.value.validate(async valid => {\n        if (valid) {\n          let res = {}\n          try {\n            loading.value = true\n            res = await AdminModel.changePassword(info.newPassword, info.confirmPassword, props.id)\n          } catch (e) {\n            loading.value = false\n          }\n          if (res.code < window.MAX_SUCCESS_CODE) {\n            loading.value = false\n            ElMessage.success(`${res.message}`)\n            resetForm()\n            ctx.emit('handlePasswordResult', true)\n          } else {\n            loading.value = false\n            ElMessage.error(`${res.message}`)\n          }\n        } else {\n          ElMessage.error('请填写正确的密码信息')\n        }\n      })\n    }\n\n    // 重置表单\n    const resetForm = () => {\n      form.value.resetFields()\n    }\n\n    return {\n      info,\n      form,\n      rules,\n      loading,\n      resetForm,\n      submitForm,\n    }\n  },\n}\n\n/**\n * 表单规则\n */\nfunction getRules(ctx, info, form) {\n  const validatePassword = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('请输入密码'))\n    } else if (value.length < 6) {\n      callback(new Error('密码长度不能少于6位数'))\n    } else {\n      if (info.confirmPassword) {\n        form.value.validateField('confirmPassword')\n      }\n      callback()\n    }\n  }\n  const validatePassword2 = (rule, value, callback) => {\n    if (!value) {\n      callback(new Error('请再次输入密码'))\n    } else if (value !== info.newPassword) {\n      callback(new Error('两次输入密码不一致!'))\n    } else {\n      callback()\n    }\n  }\n\n  // 验证规则\n  return {\n    newPassword: [{ validator: validatePassword, trigger: 'blur', required: true }],\n    confirmPassword: [{ validator: validatePassword2, trigger: 'blur', required: true }],\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-form-item :v-deep(.el-form-item__label) {\n  padding-right: 10px !important;\n}\n</style>\n","import { render } from \"./user-password.vue?vue&type=template&id=16140bac&scoped=true\"\nimport script from \"./user-password.vue?vue&type=script&lang=js\"\nexport * from \"./user-password.vue?vue&type=script&lang=js\"\n\nimport \"./user-password.vue?vue&type=style&index=0&id=16140bac&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/zhahn/Documents/Hahn/自考/mall/mall_cms/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-16140bac\"]])\n\nexport default __exports__"],"names":["useUserList","allGroups","ref","pageCount","tableData","groupId","loading","totalNum","currentPage","getAdminUsers","res","value","AdminModel","count","page","shuffleList","items","total","console","error","getAllGroups","users","list","forEach","element","groupNames","groups","map","item","name","join","push","onMounted","useFormData","ctx","dialogFormVisible","info","password","id","activeTab","handleInfoResult","flag","handleChange","handlePasswordResult","result","handleCurrentChange","val","confirmEdit","submitForm","handleClose","done","resetForm","handleClick","tab","props","class","style","filterable","placeholder","clearable","group","index","key","label","data","rowDoubleClick","prop","fixed","width","default","plain","size","type","handleEdit","scope","row","handleDelete","refreshPagination","background","layout","title","footer","pageType","userInfo","submit","labelPosition","components","UserInfo","UserPassword","setup","email","username","confirm_password","confirmButtonText","cancelButtonText","then","code","window","MAX_SUCCESS_CODE","message","__exports__","render","model","rules","newPassword","autocomplete","confirmPassword","form","getRules","validate","valid","emit","resetFields","validatePassword","rule","callback","length","Error","validateField","validatePassword2","validator","trigger","required"],"sourceRoot":""}